#define CONST(NAME, Proton);


#define PLATFORM(WINDOWS_X32);
#define PLATFORM_ALIAS(WINDOWS_X32, WINDOWS_32);
#define PLATFORM_ALIAS(WINDOWS_X32, WIN32);

#define PLATFORM(LINUX_X32);
#define PLATFORM_ALIAS(LINUX_X32, LINUX_32);
#define PLATFORM_ALIAS(LINUX_X32, LINUX32);

#define PLATFORM(MAC_OSX_X32);
#define PLATFORM_ALIAS(MAC_OSX_X32, MAC_OSX_32);
#define PLATFORM_ALIAS(MAC_OSX_X32, MAC32);


#define TOOL(CPP, ../SDK/bin/i686-elf-g++);
#define TOOL_WIN32(CPP, ../SDK/bin/i686-elf-g++.exe);

#define TOOL(AS, ../SDK/bin/i686-elf-as);
#define TOOL_WIN32(AS, ../SDK/bin/i686-elf-as.exe);

#define TOOL(LD, ../SDK/bin/i686-elf-ld);
#define TOOL_WIN32(LD, ../SDK/bin/i686-elf-ld.exe);

#define TOOL(RM, ../SDK/bin/rm);
#define TOOL_WIN32(RM, ../SDK/bin/rm.exe);

#define TOOL(CP, ../SDK/bin/cp);
#define TOOL_WIN32(CP, ../SDK/bin/cp.exe);

#define TOOL(MKDIR, ../SDK/bin/mkdir);
#define TOOL_WIN32(MKDIR, ../SDK/bin/mkdir.exe);

#define TOOL(MKISOFS, ../SDK/bin/mkisofs);
#define TOOL_WIN32(MKISOFS, ../SDK/bin/mkisofs.exe);

#define CONST(CPP_ARGS, -I../SDK/include -I../SDK/include/c++ -I./Include -include cstdint -std=c++0x -Wall -Wextra -Werror -fno-builtin -nostdlib -fpack-struct=1 -nostartfiles -nodefaultlibs -c);
#define CONST(LD_ARGS, -L../SDK/lib -T Source/Kernel.ld);
#define CONST(LD_LIBS, -lstdc++ -lc -lm -lgcc);
#define CONST(RM_ARGS, -rf);
#define CONST(CP_ARGS, -f);
#define CONST(MKDIR_ARGS, -p);
#define CONST(MKISOFS_ARGS, -quiet -V ${NAME} -rational-rock -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table);

#define CONST(OBJECT, ./Object);
#define CONST(LOGS, ../Logs);
#define CONST(BUILD, ../Build);
#define CONST(OUT, ${BUILD}/boot/${NAME}.bin);
#define CONST(ISO, ../${NAME}.iso);

#define SOURCE(ASM_FILES)
{
    Source/Core/Boot.asm
	Source/Core/GDTUpdate.asm
	Source/Core/IDTStubs.asm
	Source/Core/IDTUpdate.asm
}

#define SOURCE(CPP_FILES)
{
    Source/Kernel.cpp
    Source/Core/COMPortLogger.cpp
	Source/Core/Device.cpp
	Source/Core/DeviceManager.cpp
	Source/Core/DLMalloc.cpp
	Source/Core/FileSystemManager.cpp
	Source/Core/GDT.cpp
	Source/Core/IDT.cpp
	Source/Core/MultiBoot.cpp
	Source/Core/SystemCalls.cpp
	Source/Core/SystemClock.cpp
	Source/Core/Driver/Console.cpp
	Source/Driver/PIC8259A.cpp
	Source/Driver/PIT8254.cpp
	Source/Driver/RTC146818A.cpp
}

MKDIR ${MKDIR_ARGS} ${OBJECT}
MKDIR ${MKDIR_ARGS} ${LOGS}
MKDIR ${MKDIR_ARGS} ${BUILD}/boot/grub

CP ${CP_ARGS} ../SDK/grub/stage2_eltorito ${BUILD}/boot/grub
CP ${CP_ARGS} ../SDK/grub/menu.lst ${BUILD}/boot/grub

common TOOL(AS -o ) : ASM_FILES
{
    #prefix{${OBJECT}/$(FILENAME.NO_EXTENSION.DIR_TO_FILENAME).o} : ALL
}

common TOOL(CPP ${CPP_ARGS} -o ) : CPP_FILES
{
    #prefix{${OBJECT}/$(FILENAME.NO_EXTENSION.DIR_TO_FILENAME).o} : ALL
}

LD ${LD_ARGS} -o ${OUT} ${${OBJECT}/&([ASM_FILES].NO_EXTENSION.DIR_TO_FILENAME).o} ${${OBJECT}/&([CPP_FILES].NO_EXTENSION.DIR_TO_FILENAME).o} ${LD_LIBS}

MKISOFS ${MKISOFS_ARGS} -o ${ISO} ${BUILD}
