	.file	"JIT-x86.c"
	.stabs	"C:\\Semos\\Git\\Nernel/",100,0,2,.Ltext0
	.stabs	"Source/CLR/JIT/JIT-x86.c",100,0,2,.Ltext0
	.text
.Ltext0:
	.stabs	"gcc2_compiled.",60,0,0,0
	.stabs	"int:t(0,1)=r(0,1);-2147483648;2147483647;",128,0,0,0
	.stabs	"char:t(0,2)=r(0,2);0;127;",128,0,0,0
	.stabs	"long int:t(0,3)=r(0,3);-2147483648;2147483647;",128,0,0,0
	.stabs	"unsigned int:t(0,4)=r(0,4);0;037777777777;",128,0,0,0
	.stabs	"long unsigned int:t(0,5)=r(0,5);0;037777777777;",128,0,0,0
	.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,0
	.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
	.stabs	"short int:t(0,8)=@s16;r(0,8);-32768;32767;",128,0,0,0
	.stabs	"short unsigned int:t(0,9)=@s16;r(0,9);0;65535;",128,0,0,0
	.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
	.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
	.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
	.stabs	"double:t(0,13)=r(0,1);8;0;",128,0,0,0
	.stabs	"long double:t(0,14)=r(0,1);12;0;",128,0,0,0
	.stabs	"void:t(0,15)=(0,15)",128,0,0,0
	.stabs	"../SDK/include/types.h",130,0,0,0
	.stabs	"../SDK/include/sys/types.h",130,0,0,0
	.stabs	"../SDK/include/machine/_types.h",130,0,0,0
	.stabs	"../SDK/include/machine/_default_types.h",130,0,0,0
	.stabs	"__int8_t:t(4,1)=(0,10)",128,0,26,0
	.stabs	"__uint8_t:t(4,2)=(0,11)",128,0,27,0
	.stabs	"__int16_t:t(4,3)=(0,8)",128,0,36,0
	.stabs	"__uint16_t:t(4,4)=(0,9)",128,0,37,0
	.stabs	"__int_least16_t:t(4,5)=(4,3)",128,0,46,0
	.stabs	"__uint_least16_t:t(4,6)=(4,4)",128,0,47,0
	.stabs	"__int32_t:t(4,7)=(0,1)",128,0,58,0
	.stabs	"__uint32_t:t(4,8)=(0,4)",128,0,59,0
	.stabs	"__int_least32_t:t(4,9)=(4,7)",128,0,76,0
	.stabs	"__uint_least32_t:t(4,10)=(4,8)",128,0,77,0
	.stabs	"__int64_t:t(4,11)=(0,6)",128,0,99,0
	.stabs	"__uint64_t:t(4,12)=(0,7)",128,0,100,0
	.stabn	162,0,0,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/sys/_types.h",130,0,0,0
	.stabs	"../SDK/include/sys/lock.h",130,0,0,0
	.stabs	"_LOCK_T:t(6,1)=(0,1)",128,0,6,0
	.stabs	"_LOCK_RECURSIVE_T:t(6,2)=(0,1)",128,0,7,0
	.stabn	162,0,0,0
	.stabs	"_off_t:t(5,1)=(0,3)",128,0,16,0
	.stabs	"__dev_t:t(5,2)=(0,8)",128,0,24,0
	.stabs	"__uid_t:t(5,3)=(0,9)",128,0,29,0
	.stabs	"__gid_t:t(5,4)=(0,9)",128,0,32,0
	.stabs	"_off64_t:t(5,5)=(0,6)",128,0,36,0
	.stabs	"_fpos_t:t(5,6)=(0,3)",128,0,44,0
	.stabs	"_ssize_t:t(5,7)=(0,1)",128,0,56,0
	.stabs	"../SDK/include/stddef.h",130,0,0,0
	.stabs	"wint_t:t(7,1)=(0,4)",128,0,353,0
	.stabn	162,0,0,0
	.stabs	"_mbstate_t:t(5,8)=(5,9)=s8__count:(0,1),0,32;__value:(5,10)=u4__wch:(7,1),0,32;__wchb:(5,11)=ar(5,12)=r(5,12);0;037777777777;;0;3;(0,11),0,32;;,32,32;;",128,0,75,0
	.stabs	"_flock_t:t(5,13)=(6,2)",128,0,79,0
	.stabs	"_iconv_t:t(5,14)=(5,15)=*(0,15)",128,0,84,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/stddef.h",130,0,0,0
	.stabs	"ptrdiff_t:t(8,1)=(0,3)",128,0,150,0
	.stabs	"size_t:t(8,2)=(0,5)",128,0,212,0
	.stabs	"wchar_t:t(8,3)=(0,1)",128,0,324,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/machine/types.h",130,0,0,0
	.stabs	"__off_t:t(9,1)=(0,3)",128,0,19,0
	.stabs	"__pid_t:t(9,2)=(0,1)",128,0,20,0
	.stabs	"__loff_t:t(9,3)=(0,6)",128,0,22,0
	.stabn	162,0,0,0
	.stabs	"u_char:t(2,1)=(0,11)",128,0,99,0
	.stabs	"u_short:t(2,2)=(0,9)",128,0,100,0
	.stabs	"u_int:t(2,3)=(0,4)",128,0,101,0
	.stabs	"u_long:t(2,4)=(0,5)",128,0,102,0
	.stabs	"ushort:t(2,5)=(0,9)",128,0,106,0
	.stabs	"uint:t(2,6)=(0,4)",128,0,107,0
	.stabs	"clock_t:t(2,7)=(0,5)",128,0,111,0
	.stabs	"time_t:t(2,8)=(0,3)",128,0,116,0
	.stabs	"timespec:T(2,9)=s8tv_sec:(2,8),0,32;tv_nsec:(0,3),32,32;;",128,0,0,0
	.stabs	"itimerspec:T(2,10)=s16it_interval:(2,9),0,64;it_value:(2,9),64,64;;",128,0,0,0
	.stabs	"daddr_t:t(2,11)=(0,3)",128,0,132,0
	.stabs	"caddr_t:t(2,12)=(2,13)=*(0,2)",128,0,133,0
	.stabs	"ino_t:t(2,14)=(0,9)",128,0,140,0
	.stabs	"off_t:t(2,15)=(5,1)",128,0,169,0
	.stabs	"dev_t:t(2,16)=(5,2)",128,0,170,0
	.stabs	"uid_t:t(2,17)=(5,3)",128,0,171,0
	.stabs	"gid_t:t(2,18)=(5,4)",128,0,172,0
	.stabs	"pid_t:t(2,19)=(0,1)",128,0,178,0
	.stabs	"key_t:t(2,20)=(0,3)",128,0,186,0
	.stabs	"ssize_t:t(2,21)=(5,7)",128,0,188,0
	.stabs	"mode_t:t(2,22)=(0,4)",128,0,202,0
	.stabs	"nlink_t:t(2,23)=(0,9)",128,0,207,0
	.stabs	"fd_mask:t(2,24)=(0,3)",128,0,229,0
	.stabs	"_types_fd_set:T(2,25)=s8fds_bits:(2,26)=ar(5,12);0;1;(2,24),0,64;;",128,0,0,0
	.stabs	"_types_fd_set:t(2,27)=(2,25)",128,0,239,0
	.stabs	"clockid_t:t(2,28)=(0,5)",128,0,260,0
	.stabs	"timer_t:t(2,29)=(0,5)",128,0,265,0
	.stabs	"useconds_t:t(2,30)=(0,5)",128,0,269,0
	.stabs	"suseconds_t:t(2,31)=(0,3)",128,0,270,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/stdint.h",130,0,0,0
	.stabs	"int8_t:t(10,1)=(0,10)",128,0,41,0
	.stabs	"uint8_t:t(10,2)=(0,11)",128,0,42,0
	.stabs	"int_least8_t:t(10,3)=(0,10)",128,0,47,0
	.stabs	"uint_least8_t:t(10,4)=(0,11)",128,0,48,0
	.stabs	"int16_t:t(10,5)=(0,8)",128,0,53,0
	.stabs	"uint16_t:t(10,6)=(0,9)",128,0,54,0
	.stabs	"int_least16_t:t(10,7)=(10,5)",128,0,67,0
	.stabs	"uint_least16_t:t(10,8)=(10,6)",128,0,68,0
	.stabs	"int32_t:t(10,9)=(0,1)",128,0,79,0
	.stabs	"uint32_t:t(10,10)=(0,4)",128,0,80,0
	.stabs	"int_least32_t:t(10,11)=(10,9)",128,0,97,0
	.stabs	"uint_least32_t:t(10,12)=(10,10)",128,0,98,0
	.stabs	"int64_t:t(10,13)=(0,6)",128,0,119,0
	.stabs	"uint64_t:t(10,14)=(0,7)",128,0,120,0
	.stabs	"int_least64_t:t(10,15)=(10,13)",128,0,129,0
	.stabs	"uint_least64_t:t(10,16)=(10,14)",128,0,130,0
	.stabs	"int_fast8_t:t(10,17)=(0,1)",128,0,159,0
	.stabs	"uint_fast8_t:t(10,18)=(0,4)",128,0,160,0
	.stabs	"int_fast16_t:t(10,19)=(0,1)",128,0,165,0
	.stabs	"uint_fast16_t:t(10,20)=(0,4)",128,0,166,0
	.stabs	"int_fast32_t:t(10,21)=(0,1)",128,0,171,0
	.stabs	"uint_fast32_t:t(10,22)=(0,4)",128,0,172,0
	.stabs	"int_fast64_t:t(10,23)=(10,15)",128,0,213,0
	.stabs	"uint_fast64_t:t(10,24)=(10,16)",128,0,214,0
	.stabs	"intmax_t:t(10,25)=(0,6)",128,0,222,0
	.stabs	"uintmax_t:t(10,26)=(0,7)",128,0,231,0
	.stabs	"intptr_t:t(10,27)=(0,3)",128,0,243,0
	.stabs	"uintptr_t:t(10,28)=(0,5)",128,0,244,0
	.stabn	162,0,0,0
	.stabs	"bool_t:t(1,1)=(10,2)",128,0,7,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/JIT/x86/x86-codegen.h",130,0,0,0
	.stabs	" :T(11,1)=eX86_EAX:0,X86_ECX:1,X86_EDX:2,X86_EBX:3,X86_ESP:4,X86_EBP:5,X86_ESI:6,X86_EDI:7,X86_NREG:8,;",128,0,0,0
	.stabs	"X86_Reg_No:t(11,2)=(11,1)",128,0,56,0
	.stabs	" :T(11,3)=eX86_XMM0:0,X86_XMM1:1,X86_XMM2:2,X86_XMM3:3,X86_XMM4:4,X86_XMM5:5,X86_XMM6:6,X86_XMM7:7,X86_XMM_NREG:8,;",128,0,0,0
	.stabs	"X86_XMM_Reg_No:t(11,4)=(11,3)",128,0,68,0
	.stabs	" :T(11,5)=eX86_ADD:0,X86_OR:1,X86_ADC:2,X86_SBB:3,X86_AND:4,X86_SUB:5,X86_XOR:6,X86_CMP:7,X86_NALU:8,;",128,0,0,0
	.stabs	"X86_ALU_Opcode:t(11,6)=(11,5)",128,0,83,0
	.stabs	" :T(11,7)=eX86_SHLD:0,X86_SHLR:1,X86_ROL:0,X86_ROR:1,X86_RCL:2,X86_RCR:3,X86_SHL:4,X86_SHR:5,X86_SAR:7,X86_NSHIFT:8,;",128,0,0,0
	.stabs	"X86_Shift_Opcode:t(11,8)=(11,7)",128,0,98,0
	.stabs	" :T(11,9)=eX86_FADD:0,X86_FMUL:1,X86_FCOM:2,X86_FCOMP:3,X86_FSUB:4,X86_FSUBR:5,X86_FDIV:6,X86_FDIVR:7,X86_NFP:8,;",128,0,0,0
	.stabs	"X86_FP_Opcode:t(11,10)=(11,9)",128,0,112,0
	.stabs	" :T(11,11)=eX86_CC_EQ:0,X86_CC_E:0,X86_CC_Z:0,X86_CC_NE:1,X86_CC_NZ:1,X86_CC_LT:2,X86_CC_B:2,X86_CC_C:2,X86_CC_NAE:2,X86_CC_LE:3,X86_CC_BE:3,X86_CC_NA:3,X86_CC_GT:4,X86_CC_A:4,X86_CC_NBE:4,X86_CC_GE:5,X86_CC_AE:5,X86_CC_NB:5,X86_CC_NC:5,X86_CC_LZ:6,X86_CC_S:6,X86_CC_GEZ:7,X86_CC_NS:7,X86_CC_P:8,X86_CC_PE:8,X86_CC_NP:9,X86_CC_PO:9,X86_CC_O:10,X86_CC_NO:11,X86_NCC:12,;",128,0,0,0
	.stabs	"X86_CC:t(11,12)=(11,11)",128,0,130,0
	.stabs	" :T(11,13)=eX86_FP_C0:256,X86_FP_C1:512,X86_FP_C2:1024,X86_FP_C3:16384,X86_FP_CC_MASK:17664,;",128,0,0,0
	.stabs	" :T(11,14)=eX86_FPCW_INVOPEX_MASK:1,X86_FPCW_DENOPEX_MASK:2,X86_FPCW_ZERODIV_MASK:4,X86_FPCW_OVFEX_MASK:8,X86_FPCW_UNDFEX_MASK:16,X86_FPCW_PRECEX_MASK:32,X86_FPCW_PRECC_MASK:768,X86_FPCW_ROUNDC_MASK:3072,X86_FPCW_PREC_SINGLE:0,X86_FPCW_PREC_DOUBLE:512,X86_FPCW_PREC_EXTENDED:768,X86_FPCW_ROUND_NEAREST:0,X86_FPCW_ROUND_DOWN:1024,X86_FPCW_ROUND_UP:2048,X86_FPCW_ROUND_TOZERO:3072,;",128,0,0,0
	.stabs	" :T(11,15)=eX86_LOCK_PREFIX:240,X86_REPNZ_PREFIX:242,X86_REPZ_PREFIX:243,X86_REP_PREFIX:243,X86_CS_PREFIX:46,X86_SS_PREFIX:54,X86_DS_PREFIX:62,X86_ES_PREFIX:38,X86_FS_PREFIX:100,X86_GS_PREFIX:101,X86_UNLIKELY_PREFIX:46,X86_LIKELY_PREFIX:62,X86_OPERAND_PREFIX:102,X86_ADDRESS_PREFIX:103,;",128,0,0,0
	.stabs	"X86_Prefix:t(11,16)=(11,15)",128,0,182,0
	.stabs	"x86_imm_buf:t(11,17)=(11,18)=u4val:(0,1),0,32;b:(5,11),0,32;;",128,0,219,0
	.stabs	" :T(11,19)=eX86_SSE_SQRT:81,X86_SSE_RSQRT:82,X86_SSE_RCP:83,X86_SSE_ADD:88,X86_SSE_DIV:94,X86_SSE_MUL:89,X86_SSE_SUB:92,X86_SSE_MIN:93,X86_SSE_MAX:95,X86_SSE_COMP:194,X86_SSE_AND:84,X86_SSE_ANDN:85,X86_SSE_OR:86,X86_SSE_XOR:87,X86_SSE_UNPCKL:20,X86_SSE_UNPCKH:21,X86_SSE_ADDSUB:208,X86_SSE_HADD:124,X86_SSE_HSUB:125,X86_SSE_MOVSHDUP:22,X86_SSE_MOVSLDUP:18,X86_SSE_MOVDDUP:18,X86_SSE_PAND:219,X86_SSE_POR:235,X86_SSE_PXOR:239,X86_SSE_PADDB:252,X86_SSE_PADDW:253,X86_SSE_PADDD:254,X86_SSE_PADDQ:212,X86_SSE_PSUBB:248,X86_SSE_PSUBW:249,X86_SSE_PSUBD:250,X86_SSE_PSUBQ:251,X86_SSE_PMAXSB:60,X86_SSE_PMAXSW:238,X86_SSE_PMAXSD:61,X86_SSE_PMAXUB:222,X86_SSE_PMAXUW:62,X86_SSE_PMAXUD:63,X86_SSE_PMINSB:56,X86_SSE_PMINSW:234,X86_SSE_PMINSD:57,X86_SSE_PMINUB:218,X86_SSE_PMINUW:58,X86_SSE_PMINUD:59,X86_SSE_PAVGB:224,X86_SSE_PAVGW:227,X86_SSE_PCMPEQB:116,X86_SSE_PCMPEQW:117,X86_SSE_PCMPEQD:118,X86_SSE_PCMPEQQ:41,X86_SSE_PCMPGTB:100,X86_SSE_PCMPGTW:101,X86_SSE_PCMPGTD:102,X86_SSE_PCMPGTQ:55,X86_SSE_PSADBW:246,X86_SSE_PSHUFD:112,X86_SSE_PUNPCKLBW:96,X86_SSE_PUNPCKLWD:97,X86_SSE_PUNPCKLDQ:98,X86_SSE_PUNPCKLQDQ:108,X86_SSE_PUNPCKHBW:104,X86_SSE_PUNPCKHWD:105,X86_SSE_PUNPCKHDQ:106,X86_SSE_PUNPCKHQDQ:109,X86_SSE_PACKSSWB:99,X86_SSE_PACKSSDW:107,X86_SSE_PACKUSWB:103,X86_SSE_PACKUSDW:43,X86_SSE_PADDUSB:220,X86_SSE_PADDUSW:221,X86_SSE_PSUBUSB:216,X86_SSE_PSUBUSW:217,X86_SSE_PADDSB:236,X86_SSE_PADDSW:237,X86_SSE_PSUBSB:232,X86_SSE_PSUBSW:233,X86_SSE_PMULLW:213,X86_SSE_PMULLD:64,X86_SSE_PMULHUW:228,X86_SSE_PMULHW:229,X86_SSE_PMULUDQ:244,X86_SSE_PMOVMSKB:215,X86_SSE_PSHIFTW:113,X86_SSE_PSHIFTD:114,X86_SSE_PSHIFTQ:115,X86_SSE_SHR:2,X86_SSE_SAR:4,X86_SSE_SHL:6,X86_SSE_PSRLW_REG:209,X86_SSE_PSRAW_REG:225,X86_SSE_PSLLW_REG:241,X86_SSE_PSRLD_REG:210,X86_SSE_PSRAD_REG:226,X86_SSE_PSLLD_REG:242,X86_SSE_PSRLQ_REG:211,X86_SSE_PSLLQ_REG:243,X86_SSE_PREFETCH:24,X86_SSE_MOVNTPS:43,X86_SSE_MOVHPD_REG_MEMBASE:22,X86_SSE_MOVHPD_MEMBASE_REG:23,X86_SSE_MOVSD_REG_MEMBASE:16,X86_SSE_MOVSD_MEMBASE_REG:17,X86_SSE_PINSRB:32,X86_SSE_PINSRW:196,X86_SSE_PINSRD:34,X86_SSE_PEXTRB:20,X86_SSE_PEXTRW:197,X86_SSE_PEXTRD:22,X86_SSE_SHUFP:198,X86_SSE_CVTDQ2PD:230,X86_SSE_CVTDQ2PS:91,X86_SSE_CVTPD2DQ:230,X86_SSE_CVTPD2PS:90,X86_SSE_CVTPS2DQ:91,X86_SSE_CVTPS2PD:90,X86_SSE_CVTTPD2DQ:230,X86_SSE_CVTTPS2DQ:91,;",128,0,0,0
	.stabs	"X86_SSE_Opcode:t(11,20)=(11,19)",128,0,2086,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/JIT/JIT.h",130,0,0,0
	.stabs	"./Include/CLR/IRStructures.h",130,0,0,0
	.stabs	"IRAssembly:t(13,1)=(13,2)=xs_IRAssembly:",128,0,3,0
	.stabs	"IRType:t(13,3)=(13,4)=xs_IRType:",128,0,4,0
	.stabs	"IRMethodSpec:t(13,5)=(13,6)=xs_IRMethodSpec:",128,0,5,0
	.stabs	"IRMethod:t(13,7)=(13,8)=xs_IRMethod:",128,0,6,0
	.stabs	"IRInstruction:t(13,9)=(13,10)=xs_IRInstruction:",128,0,7,0
	.stabs	"IRParameter:t(13,11)=(13,12)=xs_IRParameter:",128,0,8,0
	.stabs	"IRLocalVariable:t(13,13)=(13,14)=xs_IRLocalVariable:",128,0,9,0
	.stabs	"IRField:t(13,15)=(13,16)=xs_IRField:",128,0,10,0
	.stabs	"./Include/CLR/CLIFile.h",130,0,0,0
	.stabs	"./Include/CLR/PEFile.h",130,0,0,0
	.stabs	"DOSHeader:t(15,1)=(15,2)=s64Signature:(10,6),0,16;LastPageByteCount:(10,6),16,16;PageCount:(10,6),32,16;RelocationCount:(10,6),48,16;HeaderParagraphCount:(10,6),64,16;MinimumParagraphCount:(10,6),80,16;MaximumParagraphCount:(10,6),96,16;RegisterSS:(10,6),112,16;RegisterSP:(10,6),128,16;Checksum:(10,6),144,16;RegisterIP:(10,6),160,16;RegisterCS:(10,6),176,16;RelocationOffset:(10,6),192,16;Overlay:(10,6),208,16;Reserved:(15,3)=ar(5,12);0;3;(10,6),224,64;OEMIdentifier:(10,6),288,16;OEMInformation:(10,6),304,16;MoreReserved:(15,4)=ar(5,12);0;9;(10,6),320,160;NextHeaderOffset:(10,10),480,32;;",128,0,27,0
	.stabs	"PEHeader:t(15,5)=(15,6)=s24Signature:(10,10),0,32;Machine:(10,6),32,16;NumberOfSections:(10,6),48,16;Timestamp:(10,10),64,32;PointerToSymbolTable:(10,10),96,32;NumberOfSymbols:(10,10),128,32;SizeOfOptionalHeader:(10,6),160,16;Characteristics:(10,6),176,16;;",128,0,39,0
	.stabs	"PEDataDirectory:t(15,7)=(15,8)=s8VirtualAddress:(10,10),0,32;Size:(10,10),32,32;;",128,0,45,0
	.stabs	"PEOptionalHeader:t(15,9)=(15,10)=s224Magic:(10,6),0,16;MajorLinkerVersion:(10,2),16,8;MinorLinkerVersion:(10,2),24,8;SizeOfCode:(10,10),32,32;SizeOfInitializedData:(10,10),64,32;SizeOfUninitializedData:(10,10),96,32;AddressOfEntryPoint:(10,10),128,32;BaseOfCode:(10,10),160,32;BaseOfData:(10,10),192,32;ImageBase:(10,10),224,32;SectionAlignment:(10,10),256,32;FileAlignment:(10,10),288,32;MajorOperatingSystemVersion:(10,6),320,16;MinorOperatingSystemVersion:(10,6),336,16;MajorImageVersion:(10,6),352,16;MinorImageVersion:(10,6),368,16;MajorSubsystemVersion:(10,6),384,16;MinorSubsystemVersion:(10,6),400,16;Reserved:(10,10),416,32;SizeOfImage:(10,10),448,32;SizeOfHeaders:(10,10),480,32;Checksum:(10,10),512,32;Subsystem:(10,6),544,16;DllCharacteristics:(10,6),560,16;SizeOfStackReserve:(10,10),576,32;SizeOfStackCommit:(10,10),608,32;SizeOfHeapReserve:(10,10),640,32;SizeOfHeapCommit:(10,10),672,32;LoaderFlags:(10,10),704,32;NumberOfRvaAndSizes:(10,10),736,32;DataDirectory:(15,11)=ar(5,12);0;15;(15,7),768,1024;;",128,0,81,0
	.stabs	"PESectionHeader:t(15,12)=(15,13)=s40Name:(15,14)=ar(5,12);0;7;(10,2),0,64;Misc:(15,15)=u4PhysicalAddress:(10,10),0,32;VirtualSize:(10,10),0,32;;,64,32;VirtualAddress:(10,10),96,32;SizeOfRawData:(10,10),128,32;PointerToRawData:(10,10),160,32;PointerToRelocations:(10,10),192,32;PointerToLineNumbers:(10,10),224,32;NumberOfRelocations:(10,6),256,16;NumberOfLineNumbers:(10,6),272,16;Characteristics:(10,10),288,32;;",128,0,99,0
	.stabs	"PEFile:t(15,16)=(15,17)=s24Data:(15,18)=*(10,2),0,32;Length:(10,10),32,32;DOSHeader:(15,19)=*(15,1),64,32;PEHeader:(15,20)=*(15,5),96,32;OptionalHeader:(15,21)=*(15,9),128,32;SectionHeaders:(15,22)=*(15,12),160,32;;",128,0,109,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MetaData.h",130,0,0,0
	.stabs	"MetaDataToken:t(16,1)=(16,2)=s6Table:(10,2),0,8;IsUserString:(1,1),8,8;Data:(16,3)=*(16,4)=k(0,15),16,32;;",128,0,25,0
	.stabs	"MetaDataTablesHeader:t(16,5)=(16,6)=s24Reserved:(10,10),0,32;MajorVersion:(10,2),32,8;MinorVersion:(10,2),40,8;HeapOffsetSizes:(10,2),48,8;MoreReserved:(10,2),56,8;PresentTables:(10,14),64,64;SortedTables:(10,14),128,64;;",128,0,94,0
	.stabs	"ModuleDefinition:t(16,7)=(16,8)=xs_ModuleDefinition:",128,0,97,0
	.stabs	"TypeReference:t(16,9)=(16,10)=xs_TypeReference:",128,0,98,0
	.stabs	"TypeDefinition:t(16,11)=(16,12)=xs_TypeDefinition:",128,0,99,0
	.stabs	"MethodDefinitionBody:t(16,13)=(16,14)=xs_MethodDefinitionBody:",128,0,100,0
	.stabs	"MethodDefinitionException:t(16,15)=(16,16)=xs_MethodDefinitionException:",128,0,101,0
	.stabs	"MethodDefinitionSignature:t(16,17)=(16,18)=xs_MethodDefinitionSignature:",128,0,102,0
	.stabs	"MethodDefinition:t(16,19)=(16,20)=xs_MethodDefinition:",128,0,103,0
	.stabs	"Field:t(16,21)=(16,22)=xs_Field:",128,0,104,0
	.stabs	"Parameter:t(16,23)=(16,24)=xs_Parameter:",128,0,105,0
	.stabs	"InterfaceImplementation:t(16,25)=(16,26)=xs_InterfaceImplementation:",128,0,106,0
	.stabs	"MemberReference:t(16,27)=(16,28)=xs_MemberReference:",128,0,107,0
	.stabs	"Constant:t(16,29)=(16,30)=xs_Constant:",128,0,108,0
	.stabs	"CustomAttribute:t(16,31)=(16,32)=xs_CustomAttribute:",128,0,109,0
	.stabs	"FieldMarshal:t(16,33)=(16,34)=xs_FieldMarshal:",128,0,110,0
	.stabs	"DeclSecurity:t(16,35)=(16,36)=xs_DeclSecurity:",128,0,111,0
	.stabs	"ClassLayout:t(16,37)=(16,38)=xs_ClassLayout:",128,0,112,0
	.stabs	"FieldLayout:t(16,39)=(16,40)=xs_FieldLayout:",128,0,113,0
	.stabs	"StandAloneSignature:t(16,41)=(16,42)=xs_StandAloneSignature:",128,0,114,0
	.stabs	"EventMap:t(16,43)=(16,44)=xs_EventMap:",128,0,115,0
	.stabs	"Event:t(16,45)=(16,46)=xs_Event:",128,0,116,0
	.stabs	"PropertyMap:t(16,47)=(16,48)=xs_PropertyMap:",128,0,117,0
	.stabs	"Property:t(16,49)=(16,50)=xs_Property:",128,0,118,0
	.stabs	"MethodSemantics:t(16,51)=(16,52)=xs_MethodSemantics:",128,0,119,0
	.stabs	"MethodImplementation:t(16,53)=(16,54)=xs_MethodImplementation:",128,0,120,0
	.stabs	"ModuleReference:t(16,55)=(16,56)=xs_ModuleReference:",128,0,121,0
	.stabs	"TypeSpecification:t(16,57)=(16,58)=xs_TypeSpecification:",128,0,122,0
	.stabs	"ImplementationMap:t(16,59)=(16,60)=xs_ImplementationMap:",128,0,123,0
	.stabs	"FieldRVA:t(16,61)=(16,62)=xs_FieldRVA:",128,0,124,0
	.stabs	"AssemblyDefinition:t(16,63)=(16,64)=xs_AssemblyDefinition:",128,0,125,0
	.stabs	"AssemblyProcessor:t(16,65)=(16,66)=xs_AssemblyProcessor:",128,0,126,0
	.stabs	"AssemblyOperatingSystem:t(16,67)=(16,68)=xs_AssemblyOperatingSystem:",128,0,127,0
	.stabs	"AssemblyReference:t(16,69)=(16,70)=xs_AssemblyReference:",128,0,128,0
	.stabs	"AssemblyReferenceProcessor:t(16,71)=(16,72)=xs_AssemblyReferenceProcessor:",128,0,129,0
	.stabs	"AssemblyReferenceOperatingSystem:t(16,73)=(16,74)=xs_AssemblyReferenceOperatingSystem:",128,0,130,0
	.stabs	"File:t(16,75)=(16,76)=xs_File:",128,0,131,0
	.stabs	"ExportedType:t(16,77)=(16,78)=xs_ExportedType:",128,0,132,0
	.stabs	"ManifestResource:t(16,79)=(16,80)=xs_ManifestResource:",128,0,133,0
	.stabs	"NestedClass:t(16,81)=(16,82)=xs_NestedClass:",128,0,134,0
	.stabs	"GenericParameter:t(16,83)=(16,84)=xs_GenericParameter:",128,0,135,0
	.stabs	"MethodSpecification:t(16,85)=(16,86)=xs_MethodSpecification:",128,0,136,0
	.stabs	"GenericParameterConstraint:t(16,87)=(16,88)=xs_GenericParameterConstraint:",128,0,137,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Signature.h",130,0,0,0
	.stabs	"CLIFile:t(17,1)=(17,2)=xs_CLIFile:",128,0,55,0
	.stabs	"MethodSignature:t(17,3)=(17,4)=xs_MethodSignature:",128,0,57,0
	.stabs	"FieldSignature:t(17,5)=(17,6)=xs_FieldSignature:",128,0,58,0
	.stabs	"PropertySignature:t(17,7)=(17,8)=xs_PropertySignature:",128,0,59,0
	.stabs	"LocalsSignature:t(17,9)=(17,10)=xs_LocalsSignature:",128,0,60,0
	.stabs	"SignatureReturnType:t(17,11)=(17,12)=xs_SignatureReturnType:",128,0,62,0
	.stabs	"SignatureParameter:t(17,13)=(17,14)=xs_SignatureParameter:",128,0,63,0
	.stabs	"SignatureCustomModifier:t(17,15)=(17,16)=xs_SignatureCustomModifier:",128,0,64,0
	.stabs	"SignatureType:t(17,17)=(17,18)=xs_SignatureType:",128,0,65,0
	.stabs	"SignatureMethodSpecification:t(17,19)=(17,20)=xs_SignatureMethodSpecification:",128,0,66,0
	.stabs	"SignatureArrayShape:t(17,21)=(17,22)=xs_SignatureArrayShape:",128,0,67,0
	.stabs	"SignatureLocalVariable:t(17,23)=(17,24)=xs_SignatureLocalVariable:",128,0,68,0
	.stabs	"_MethodSignature:T(17,4)=s30HasThis:(1,1),0,8;ExplicitThis:(1,1),8,8;Default:(1,1),16,8;VarArgs:(1,1),24,8;Generic:(1,1),32,8;CCall:(1,1),40,8;STDCall:(1,1),48,8;ThisCall:(1,1),56,8;FastCall:(1,1),64,8;GenericParameterCount:(10,10),72,32;ReturnType:(17,25)=*(17,11),104,32;ParameterCount:(10,10),136,32;Parameters:(17,26)=*(17,27)=*(17,13),168,32;HasSentinel:(1,1),200,8;SentinelIndex:(10,10),208,32;;",128,0,0,0
	.stabs	"_FieldSignature:T(17,6)=s12CustomModifierCount:(10,10),0,32;CustomModifiers:(17,28)=*(17,29)=*(17,15),32,32;Type:(17,30)=*(17,17),64,32;;",128,0,0,0
	.stabs	"_PropertySignature:T(17,8)=s21HasThis:(1,1),0,8;CustomModifierCount:(10,10),8,32;CustomModifiers:(17,28),40,32;Type:(17,30),72,32;ParameterCount:(10,10),104,32;Parameters:(17,26),136,32;;",128,0,0,0
	.stabs	"_LocalsSignature:T(17,10)=s8LocalVariableCount:(10,10),0,32;LocalVariables:(17,31)=*(17,32)=*(17,23),32,32;;",128,0,0,0
	.stabs	"_SignatureReturnType:T(17,12)=s15CustomModifierCount:(10,10),0,32;CustomModifiers:(17,28),32,32;ByReference:(1,1),64,8;Type:(17,30),72,32;TypedByReference:(1,1),104,8;Void:(1,1),112,8;;",128,0,0,0
	.stabs	"_SignatureParameter:T(17,14)=s14CustomModifierCount:(10,10),0,32;CustomModifiers:(17,28),32,32;ByReference:(1,1),64,8;Type:(17,30),72,32;TypedByReference:(1,1),104,8;;",128,0,0,0
	.stabs	"_SignatureCustomModifier:T(17,16)=s6Optional:(1,1),0,8;TypeDefOrRefOrSpecToken:(10,10),8,32;Pinned:(1,1),40,8;;",128,0,0,0
	.stabs	"_SignatureType:T(17,18)=s68ElementType:(10,2),0,8;ArrayType:(17,30),8,32;ArrayShape:(17,33)=*(17,21),40,32;ClassTypeDefOrRefOrSpecToken:(10,10),72,32;FnPtrMethodSignature:(17,34)=*(17,3),104,32;GenericInstClass:(1,1),136,8;GenericInstValue:(1,1),144,8;GenericInstTypeDefOrRefOrSpecToken:(10,10),152,32;GenericInstGenericArgumentCount:(10,10),184,32;GenericInstGenericArguments:(17,35)=*(17,30),216,32;MVarNumber:(10,10),248,32;PtrCustomModifierCount:(10,10),280,32;PtrCustomModifiers:(17,28),312,32;PtrType:(17,30),344,32;PtrVoid:(1,1),376,8;SZArrayCustomModifierCount:(10,10),384,32;SZArrayCustomModifiers:(17,28),416,32;SZArrayType:(17,30),448,32;ValueTypeDefOrRefOrSpecToken:(10,10),480,32;VarNumber:(10,10),512,32;;",128,0,0,0
	.stabs	"_SignatureMethodSpecification:T(17,20)=s8GenericInstGenericArgumentCount:(10,10),0,32;GenericInstGenericArguments:(17,35),32,32;;",128,0,0,0
	.stabs	"_SignatureArrayShape:T(17,22)=s20Rank:(10,10),0,32;SizeCount:(10,10),32,32;Sizes:(17,36)=*(10,10),64,32;LowerBoundCount:(10,10),96,32;LowerBounds:(17,37)=*(10,9),128,32;;",128,0,0,0
	.stabs	"_SignatureLocalVariable:T(17,24)=s14CustomModifierCount:(10,10),0,32;CustomModifiers:(17,28),32,32;ByReference:(1,1),64,8;Type:(17,30),72,32;TypedByReference:(1,1),104,8;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"CLIHeader:t(14,1)=(14,2)=xs_CLIHeader:",128,0,9,0
	.stabs	"_CLIHeader:T(14,2)=s72SizeOfHeader:(10,10),0,32;MajorRuntimeVersion:(10,6),32,16;MinorRuntimeVersion:(10,6),48,16;MetaData:(15,7),64,64;Flags:(10,10),128,32;:(14,3)=u4EntryPointToken:(10,10),0,32;EntryPointRVA:(10,10),0,32;;,160,32;Resources:(15,7),192,64;StrongNameSignature:(15,7),256,64;CodeManagerTable:(15,7),320,64;VTableFixups:(15,7),384,64;ExportAddressTableJumps:(15,7),448,64;ManagedNativeHeader:(15,7),512,64;;",128,0,0,0
	.stabs	"_CLIFile:T(17,2)=s340PEFile:(14,4)=*(14,5)=k(15,16),0,32;CLIHeader:(14,6)=*(14,7)=k(14,1),32,32;MetaDataHeader:(14,8)=*(14,9)=k(10,2),64,32;Tables:(14,8),96,32;StringsHeap:(14,8),128,32;UserStringsHeap:(14,8),160,32;BlobsHeap:(14,8),192,32;GUIDsHeap:(14,8),224,32;TablesHeader:(14,10)=*(14,11)=k(16,5),256,32;ModuleDefinitionCount:(10,10),288,32;ModuleDefinitions:(14,12)=*(16,7),320,32;TypeReferenceCount:(10,10),352,32;TypeReferences:(14,13)=*(16,9),384,32;TypeDefinitionCount:(10,10),416,32;TypeDefinitions:(14,14)=*(16,11),448,32;FieldCount:(10,10),480,32;Fields:(14,15)=*(16,21),512,32;MethodDefinitionCount:(10,10),544,32;MethodDefinitions:(14,16)=*(16,19),576,32;ParameterCount:(10,10),608,32;Parameters:(14,17)=*(16,23),640,32;InterfaceImplementationCount:(10,10),672,32;InterfaceImplementations:(14,18)=*(16,25),704,32;MemberReferenceCount:(10,10),736,32;MemberReferences:(14,19)=*(16,27),768,32;ConstantCount:(10,10),800,32;Constants:(14,20)=*(16,29),832,32;CustomAttributeCount:(10,10),864,32;CustomAttributes:(14,21)=*(16,31),896,32;FieldMarshalCount:(10,10),928,32;FieldMarshals:(14,22)=*(16,33),960,32;DeclSecurityCount:(10,10),992,32;DeclSecurities:(14,23)=*(16,35),1024,32;ClassLayoutCount:(10,10),1056,32;ClassLayouts:(14,24)=*(16,37),1088,32;FieldLayoutCount:(10,10),1120,32;FieldLayouts:(14,25)=*(16,39),1152,32;StandAloneSignatureCount:(10,10),1184,32;StandAloneSignatures:(14,26)=*(16,41),1216,32;EventMapCount:(10,10),1248,32;EventMaps:(14,27)=*(16,43),1280,32;EventCount:(10,10),1312,32;Events:(14,28)=*(16,45),1344,32;PropertyMapCount:(10,10),1376,32;PropertyMaps:(14,29)=*(16,47),1408,32;PropertyCount:(10,10),1440,32;Properties:(14,30)=*(16,49),1472,32;MethodSemanticsCount:(10,10),1504,32;MethodSemantics:(14,31)=*(16,51),1536,32;MethodImplementationCount:(10,10),1568,32;MethodImplementations:(14,32)=*(16,53),1600,32;ModuleReferenceCount:(10,10),1632,32;ModuleReferences:(14,33)=*(16,55),1664,32;TypeSpecificationCount:(10,10),1696,32;TypeSpecifications:(14,34)=*(16,57),1728,32;ImplementationMapCount:(10,10),1760,32;ImplementationMaps:(14,35)=*(16,59),1792,32;FieldRVACount:(10,10),1824,32;FieldRVAs:(14,36)=*(16,61),1856,32;AssemblyDefinitionCount:(10,10),1888,32;AssemblyDefinitions:(14,37)=*(16,63),1920,32;AssemblyProcessorCount:(10,10),1952,32;AssemblyProcessors:(14,38)=*(16,65),1984,32;AssemblyOperatingSystemCount:(10,10),2016,32;AssemblyOperatingSystems:(14,39)=*(16,67),2048,32;AssemblyReferenceCount:(10,10),2080,32;AssemblyReferences:(14,40)=*(16,69),2112,32;AssemblyReferenceProcessorCount:(10,10),2144,32;AssemblyReferenceProcessors:(14,41)=*(16,71),2176,32;AssemblyReferenceOperatingSystemCount:(10,10),2208,32;AssemblyReferenceOperatingSystems:(14,42)=*(16,73),2240,32;FileCount:(10,10),2272,32;Files:(14,43)=*(16,75),2304,32;ExportedTypeCount:(10,10),2336,32;ExportedTypes:(14,44)=*(16,77),2368,32;ManifestResourceCount:(10,10),2400,32;ManifestResources:(14,45)=*(16,79),2432,32;NestedClassCount:(10,10),2464,32;NestedClasses:(14,46)=*(16,81),2496,32;GenericParameterCount:(10,10),2528,32;GenericParameters:(14,47)=*(16,83),2560,32;GenericParameterConstraintCount:(10,10),2592,32;GenericParameterConstraints:(14,48)=*(16,87),2624,32;MethodSpecificationCount:(10,10),2656,32;MethodSpecifications:(14,49)=*(16,85),2688,32;;",128,0,0,0
	.stabs	"./Include/CLR/MetaData/ModuleDefinition.h",130,0,0,0
	.stabs	"_ModuleDefinition:T(16,8)=s30TableIndex:(10,10),0,32;Generation:(10,6),32,16;Name:(18,1)=*(18,2)=k(0,2),48,32;ModuleVersionID:(14,8),80,32;EncID:(14,8),112,32;EncBaseID:(14,8),144,32;CustomAttributeCount:(10,10),176,32;CustomAttributes:(18,3)=*(14,21),208,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/TypeReference.h",130,0,0,0
	.stabs	"_TypeReference:T(16,10)=s38TableIndex:(10,10),0,32;TypeOfResolutionScope:(10,2),32,8;ResolutionScope:(19,1)=u4ModuleDefinition:(14,12),0,32;ModuleReference:(14,33),0,32;AssemblyReference:(14,40),0,32;TypeReference:(14,13),0,32;;,40,32;Name:(18,1),72,32;Namespace:(18,1),104,32;IsResolved:(1,1),136,8;ResolvedType:(14,14),144,32;CustomAttributeCount:(10,10),176,32;CustomAttributes:(18,3),208,32;MemberReferenceCount:(10,10),240,32;MemberReferences:(19,2)=*(14,19),272,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/TypeDefinition.h",130,0,0,0
	.stabs	"_TypeDefinition:T(16,12)=s101TableIndex:(10,10),0,32;Flags:(10,10),32,32;Name:(18,1),64,32;Namespace:(18,1),96,32;TypeOfExtends:(10,2),128,8;Extends:(20,1)=u4TypeDefinition:(14,14),0,32;TypeReference:(14,13),0,32;TypeSpecification:(14,34),0,32;;,136,32;FieldList:(14,15),168,32;FieldListCount:(10,10),200,32;MethodDefinitionList:(14,16),232,32;MethodDefinitionListCount:(10,10),264,32;ClassLayout:(14,24),296,32;CustomAttributeCount:(10,10),328,32;CustomAttributes:(18,3),360,32;DeclSecurity:(14,23),392,32;EventMap:(14,27),424,32;GenericParameterCount:(10,10),456,32;GenericParameters:(20,2)=*(14,47),488,32;InterfaceImplementationCount:(10,10),520,32;InterfaceImplementations:(20,3)=*(14,18),552,32;MemberReferenceCount:(10,10),584,32;MemberReferences:(19,2),616,32;MethodImplementationCount:(10,10),648,32;MethodImplementations:(20,4)=*(14,32),680,32;NestedClassCount:(10,10),712,32;NestedClasses:(20,5)=*(14,46),744,32;PropertyMap:(14,29),776,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Field.h",130,0,0,0
	.stabs	"_Field:T(16,22)=s38TableIndex:(10,10),0,32;Flags:(10,6),32,16;Name:(18,1),48,32;SignatureLength:(10,10),80,32;Signature:(14,8),112,32;Constant:(14,20),144,32;CustomAttributeCount:(10,10),176,32;CustomAttributes:(18,3),208,32;FieldMarshal:(14,22),240,32;ImplementationMap:(14,35),272,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MethodDefinition.h",130,0,0,0
	.stabs	"./Include/CLR/AppDomain.h",130,0,0,0
	.stabs	"AppDomain:t(23,1)=(23,2)=xs_AppDomain:",128,0,3,0
	.stabs	"_AppDomain:T(23,2)=s100DomainIndex:(10,10),0,32;IRAssemblyCount:(10,10),32,32;IRAssemblies:(23,3)=*(23,4)=*(13,1),64,32;CachedType___System_Array:(14,14),96,32;CachedType___System_Boolean:(14,14),128,32;CachedType___System_Byte:(14,14),160,32;CachedType___System_Char:(14,14),192,32;CachedType___System_Double:(14,14),224,32;CachedType___System_Enum:(14,14),256,32;CachedType___System_Int16:(14,14),288,32;CachedType___System_Int32:(14,14),320,32;CachedType___System_Int64:(14,14),352,32;CachedType___System_IntPtr:(14,14),384,32;CachedType___System_Object:(14,14),416,32;CachedType___System_SByte:(14,14),448,32;CachedType___System_Single:(14,14),480,32;CachedType___System_String:(14,14),512,32;CachedType___System_Type:(14,14),544,32;CachedType___System_TypedReference:(14,14),576,32;CachedType___System_UInt16:(14,14),608,32;CachedType___System_UInt32:(14,14),640,32;CachedType___System_UInt64:(14,14),672,32;CachedType___System_UIntPtr:(14,14),704,32;CachedType___System_ValueType:(14,14),736,32;CachedType___System_Void:(14,14),768,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"_MethodDefinitionBody:T(16,14)=s17Flags:(10,6),0,16;IsFat:(1,1),16,8;MaxStack:(10,6),24,16;CodeSize:(10,10),40,32;LocalVariableSignatureToken:(10,10),72,32;Code:(14,8),104,32;;",128,0,0,0
	.stabs	"_MethodDefinitionException:T(16,16)=s24Flags:(10,10),0,32;TryOffset:(10,10),32,32;TryLength:(10,10),64,32;HandlerOffset:(10,10),96,32;HandlerLength:(10,10),128,32;ClassTokenOrFilterOffset:(10,10),160,32;;",128,0,0,0
	.stabs	"InternalCallPointer:t(22,1)=(22,2)=*(22,3)=f(0,15)",128,0,75,0
	.stabs	"_MethodDefinition:T(16,20)=s93TableIndex:(10,10),0,32;Body:(16,13),32,136;ExceptionCount:(10,10),168,32;Exceptions:(22,4)=*(16,15),200,32;ImplFlags:(10,6),232,16;Flags:(10,6),248,16;Name:(18,1),264,32;SignatureLength:(10,10),296,32;Signature:(14,8),328,32;ParameterList:(14,17),360,32;ParameterListCount:(10,10),392,32;CustomAttributeCount:(10,10),424,32;CustomAttributes:(18,3),456,32;DeclSecurity:(14,23),488,32;GenericParameterCount:(10,10),520,32;GenericParameters:(20,2),552,32;ImplementationMap:(14,35),584,32;MemberReferenceCount:(10,10),616,32;MemberReferences:(19,2),648,32;TypeDefinition:(14,14),680,32;InternalCall:(22,1),712,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Parameter.h",130,0,0,0
	.stabs	"_Parameter:T(16,24)=s28TableIndex:(10,10),0,32;Flags:(10,6),32,16;Sequence:(10,6),48,16;Name:(18,1),64,32;Constant:(14,20),96,32;CustomAttributeCount:(10,10),128,32;CustomAttributes:(18,3),160,32;FieldMarshal:(14,22),192,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/InterfaceImplementation.h",130,0,0,0
	.stabs	"_InterfaceImplementation:T(16,26)=s21TableIndex:(10,10),0,32;Implementor:(14,14),32,32;TypeOfInterface:(10,2),64,8;Interface:(25,1)=u4TypeDefinition:(14,14),0,32;TypeReference:(14,13),0,32;TypeSpecification:(14,34),0,32;;,72,32;CustomAttributeCount:(10,10),104,32;CustomAttributes:(18,3),136,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MemberReference.h",130,0,0,0
	.stabs	"_MemberReference:T(16,28)=s29TableIndex:(10,10),0,32;TypeOfParent:(10,2),32,8;Parent:(26,1)=u4TypeDefinition:(14,14),0,32;TypeReference:(14,13),0,32;ModuleReference:(14,33),0,32;MethodDefinition:(14,16),0,32;TypeSpecification:(14,34),0,32;;,40,32;Name:(18,1),72,32;SignatureLength:(10,10),104,32;Signature:(14,8),136,32;CustomAttributeCount:(10,10),168,32;CustomAttributes:(18,3),200,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Constant.h",130,0,0,0
	.stabs	"_Constant:T(16,30)=s18TableIndex:(10,10),0,32;Type:(10,2),32,8;TypeOfParent:(10,2),40,8;Parent:(27,1)=u4Field:(14,15),0,32;Parameter:(14,17),0,32;Property:(14,30),0,32;;,48,32;ValueLength:(10,10),80,32;Value:(14,8),112,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/CustomAttribute.h",130,0,0,0
	.stabs	"_CustomAttribute:T(16,32)=s22TableIndex:(10,10),0,32;TypeOfParent:(10,2),32,8;Parent:(28,1)=u4MethodDefinition:(14,16),0,32;Field:(14,15),0,32;TypeReference:(14,13),0,32;TypeDefinition:(14,14),0,32;Parameter:(14,17),0,32;InterfaceImplementation:(14,18),0,32;MemberReference:(14,19),0,32;ModuleDefinition:(14,12),0,32;DeclSecurity:(14,23),0,32;Property:(14,30),0,32;Event:(14,28),0,32;StandAloneSignature:(14,26),0,32;ModuleReference:(14,33),0,32;TypeSpecification:(14,34),0,32;AssemblyDefinition:(14,37),0,32;AssemblyReference:(14,40),0,32;File:(14,43),0,32;ExportedType:(14,44),0,32;ManifestResource:(14,45),0,32;GenericParameter:(14,47),0,32;GenericParameterConstraint:(14,48),0,32;MethodSpecification:(14,49),0,32;;,40,32;TypeOfType:(10,2),72,8;Type:(28,2)=u4MethodDefinition:(14,16),0,32;MemberReference:(14,19),0,32;;,80,32;ValueLength:(10,10),112,32;Value:(14,8),144,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/FieldMarshal.h",130,0,0,0
	.stabs	"_FieldMarshal:T(16,34)=s17TableIndex:(10,10),0,32;TypeOfParent:(10,2),32,8;Parent:(29,1)=u4Field:(14,15),0,32;Parameter:(14,17),0,32;;,40,32;NativeTypeLength:(10,10),72,32;NativeType:(14,8),104,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/DeclSecurity.h",130,0,0,0
	.stabs	"_DeclSecurity:T(16,36)=s27TableIndex:(10,10),0,32;Action:(10,6),32,16;TypeOfParent:(10,2),48,8;Parent:(30,1)=u4TypeDefinition:(14,14),0,32;MethodDefinition:(14,16),0,32;AssemblyDefinition:(14,37),0,32;;,56,32;PermissionSetLength:(10,10),88,32;PermissionSet:(14,8),120,32;CustomAttributeCount:(10,10),152,32;CustomAttributes:(18,3),184,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/ClassLayout.h",130,0,0,0
	.stabs	"_ClassLayout:T(16,38)=s14TableIndex:(10,10),0,32;PackingSize:(10,6),32,16;ClassSize:(10,10),48,32;Parent:(14,14),80,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/FieldLayout.h",130,0,0,0
	.stabs	"_FieldLayout:T(16,40)=s12TableIndex:(10,10),0,32;Offset:(10,10),32,32;Field:(14,15),64,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/StandAloneSignature.h",130,0,0,0
	.stabs	"_StandAloneSignature:T(16,42)=s20TableIndex:(10,10),0,32;SignatureLength:(10,10),32,32;Signature:(14,8),64,32;CustomAttributeCount:(10,10),96,32;CustomAttributes:(18,3),128,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/EventMap.h",130,0,0,0
	.stabs	"_EventMap:T(16,44)=s16TableIndex:(10,10),0,32;Parent:(14,14),32,32;EventList:(14,28),64,32;EventListCount:(10,10),96,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Event.h",130,0,0,0
	.stabs	"_Event:T(16,46)=s27TableIndex:(10,10),0,32;Flags:(10,6),32,16;Name:(18,1),48,32;TypeOfEventType:(10,2),80,8;EventType:(35,1)=u4TypeDefinition:(14,14),0,32;TypeReference:(14,13),0,32;TypeSpecification:(14,34),0,32;;,88,32;CustomAttributeCount:(10,10),120,32;CustomAttributes:(18,3),152,32;MethodSemantics:(14,31),184,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/PropertyMap.h",130,0,0,0
	.stabs	"_PropertyMap:T(16,48)=s16TableIndex:(10,10),0,32;Parent:(14,14),32,32;PropertyList:(14,30),64,32;PropertyListCount:(10,10),96,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/Property.h",130,0,0,0
	.stabs	"_Property:T(16,50)=s34TableIndex:(10,10),0,32;Flags:(10,6),32,16;Name:(18,1),48,32;SignatureLength:(10,10),80,32;Signature:(14,8),112,32;Constant:(14,20),144,32;CustomAttributeCount:(10,10),176,32;CustomAttributes:(18,3),208,32;MethodSemantics:(14,31),240,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MethodSemantics.h",130,0,0,0
	.stabs	"_MethodSemantics:T(16,52)=s15TableIndex:(10,10),0,32;Semantics:(10,6),32,16;Method:(14,16),48,32;TypeOfAssociation:(10,2),80,8;Association:(38,1)=u4Event:(14,28),0,32;Property:(14,30),0,32;;,88,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MethodImplementation.h",130,0,0,0
	.stabs	"_MethodImplementation:T(16,54)=s18TableIndex:(10,10),0,32;Parent:(14,14),32,32;TypeOfMethodBody:(10,2),64,8;MethodBody:(39,1)=u4MethodDefinition:(14,16),0,32;MemberReference:(14,19),0,32;;,72,32;TypeOfMethodDeclaration:(10,2),104,8;MethodDeclaration:(39,2)=u4MethodDefinition:(14,16),0,32;MemberReference:(14,19),0,32;;,112,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/ModuleReference.h",130,0,0,0
	.stabs	"_ModuleReference:T(16,56)=s24TableIndex:(10,10),0,32;Name:(18,1),32,32;CustomAttributeCount:(10,10),64,32;CustomAttributes:(18,3),96,32;MemberReferenceCount:(10,10),128,32;MemberReferences:(19,2),160,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/TypeSpecification.h",130,0,0,0
	.stabs	"_TypeSpecification:T(16,58)=s28TableIndex:(10,10),0,32;SignatureLength:(10,10),32,32;Signature:(14,8),64,32;CustomAttributeCount:(10,10),96,32;CustomAttributes:(18,3),128,32;MemberReferenceCount:(10,10),160,32;MemberReferences:(19,2),192,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/ImplementationMap.h",130,0,0,0
	.stabs	"_ImplementationMap:T(16,60)=s19TableIndex:(10,10),0,32;MappingFlags:(10,6),32,16;TypeOfMemberForwarded:(10,2),48,8;MemberForwarded:(42,1)=u4Field:(14,15),0,32;MethodDefinition:(14,16),0,32;;,56,32;ImportName:(18,1),88,32;ImportScope:(14,33),120,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/FieldRVA.h",130,0,0,0
	.stabs	"_FieldRVA:T(16,62)=s12TableIndex:(10,10),0,32;InitialValue:(14,8),32,32;Field:(14,15),64,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyDefinition.h",130,0,0,0
	.stabs	"_AssemblyDefinition:T(16,64)=s48TableIndex:(10,10),0,32;HashAlgorithmID:(10,10),32,32;MajorVersion:(10,6),64,16;MinorVersion:(10,6),80,16;Build:(10,6),96,16;Revision:(10,6),112,16;Flags:(10,10),128,32;PublicKeyLength:(10,10),160,32;PublicKey:(14,8),192,32;Name:(18,1),224,32;Culture:(18,1),256,32;CustomAttributeCount:(10,10),288,32;CustomAttributes:(18,3),320,32;DeclSecurity:(14,23),352,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyProcessor.h",130,0,0,0
	.stabs	"_AssemblyProcessor:T(16,66)=s8TableIndex:(10,10),0,32;Processor:(10,10),32,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyOperatingSystem.h",130,0,0,0
	.stabs	"_AssemblyOperatingSystem:T(16,68)=s16TableIndex:(10,10),0,32;PlatformID:(10,10),32,32;MajorVersion:(10,10),64,32;MinorVersion:(10,10),96,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyReference.h",130,0,0,0
	.stabs	"_AssemblyReference:T(16,70)=s48TableIndex:(10,10),0,32;MajorVersion:(10,6),32,16;MinorVersion:(10,6),48,16;Build:(10,6),64,16;Revision:(10,6),80,16;Flags:(10,10),96,32;PublicKeyOrTokenLength:(10,10),128,32;PublicKeyOrToken:(14,8),160,32;Name:(18,1),192,32;Culture:(18,1),224,32;HashValueLength:(10,10),256,32;HashValue:(14,8),288,32;CustomAttributeCount:(10,10),320,32;CustomAttributes:(18,3),352,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyReferenceProcessor.h",130,0,0,0
	.stabs	"_AssemblyReferenceProcessor:T(16,72)=s12TableIndex:(10,10),0,32;Processor:(10,10),32,32;AssemblyReference:(14,40),64,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/AssemblyReferenceOperatingSystem.h",130,0,0,0
	.stabs	"_AssemblyReferenceOperatingSystem:T(16,74)=s20TableIndex:(10,10),0,32;PlatformID:(10,10),32,32;MajorVersion:(10,10),64,32;MinorVersion:(10,10),96,32;AssemblyReference:(14,40),128,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/File.h",130,0,0,0
	.stabs	"_File:T(16,76)=s28TableIndex:(10,10),0,32;Flags:(10,10),32,32;Name:(18,1),64,32;HashValueLength:(10,10),96,32;HashValue:(14,8),128,32;CustomAttributeCount:(10,10),160,32;CustomAttributes:(18,3),192,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/ExportedType.h",130,0,0,0
	.stabs	"_ExportedType:T(16,78)=s33TableIndex:(10,10),0,32;Flags:(10,10),32,32;TypeDefinitionID:(14,14),64,32;Name:(18,1),96,32;Namespace:(18,1),128,32;TypeOfImplementation:(10,2),160,8;Implementation:(51,1)=u4File:(14,43),0,32;AssemblyReference:(14,40),0,32;ExportedType:(14,44),0,32;;,168,32;CustomAttributeCount:(10,10),200,32;CustomAttributes:(18,3),232,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/ManifestResource.h",130,0,0,0
	.stabs	"_ManifestResource:T(16,80)=s29TableIndex:(10,10),0,32;Offset:(10,10),32,32;Flags:(10,10),64,32;Name:(18,1),96,32;TypeOfImplementation:(10,2),128,8;Implementation:(52,1)=u4File:(14,43),0,32;AssemblyReference:(14,40),0,32;ExportedType:(14,44),0,32;;,136,32;CustomAttributeCount:(10,10),168,32;CustomAttributes:(18,3),200,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/NestedClass.h",130,0,0,0
	.stabs	"_NestedClass:T(16,82)=s12TableIndex:(10,10),0,32;Nested:(14,14),32,32;Enclosing:(14,14),64,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/GenericParameter.h",130,0,0,0
	.stabs	"_GenericParameter:T(16,84)=s33TableIndex:(10,10),0,32;Index:(10,6),32,16;Flags:(10,6),48,16;TypeOfOwner:(10,2),64,8;Owner:(54,1)=u4TypeDefinition:(14,14),0,32;MethodDefinition:(14,16),0,32;;,72,32;Name:(18,1),104,32;CustomAttributeCount:(10,10),136,32;CustomAttributes:(18,3),168,32;GenericParameterConstraintCount:(10,10),200,32;GenericParameterConstraints:(54,2)=*(14,48),232,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/MethodSpecification.h",130,0,0,0
	.stabs	"_MethodSpecification:T(16,86)=s25TableIndex:(10,10),0,32;TypeOfMethod:(10,2),32,8;Method:(55,1)=u4MethodDefinition:(14,16),0,32;MemberReference:(14,19),0,32;;,40,32;InstantiationLength:(10,10),72,32;Instantiation:(14,8),104,32;CustomAttributeCount:(10,10),136,32;CustomAttributes:(18,3),168,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/MetaData/GenericParameterConstraint.h",130,0,0,0
	.stabs	"_GenericParameterConstraint:T(16,88)=s21TableIndex:(10,10),0,32;Owner:(14,47),32,32;TypeOfConstraint:(10,2),64,8;Constraint:(56,1)=u4TypeDefinition:(14,14),0,32;TypeReference:(14,13),0,32;TypeSpecification:(14,34),0,32;;,72,32;CustomAttributeCount:(10,10),104,32;CustomAttributes:(18,3),136,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/OpCodes_IR.h",130,0,0,0
	.stabs	"IROpCode:T(57,1)=eIROpCode_Nop:0,IROpCode_BreakForDebugger:1,IROpCode_Return:2,IROpCode_LoadInt32_Val:3,IROpCode_LoadInt64_Val:4,IROpCode_LoadFloat32_Val:5,IROpCode_LoadFloat64_Val:6,IROpCode_Branch:7,IROpCode_Jump:8,IROpCode_Store_LocalVar:9,IROpCode_Load_LocalVar:10,IROpCode_Load_LocalVar_Address:11,IROpCode_Convert_OverflowCheck:12,IROpCode_Convert_Unchecked:13,IROpCode_Load_Parameter:14,IROpCode_Load_Parameter_Address:15,IROpCode_Store_Parameter:16,IROpCode_Load_Element:17,IROpCode_Store_Element:18,IROpCode_Load_Array_Length:19,IROpCode_Pop:20,IROpCode_Shift:21,IROpCode_Add:22,IROpCode_Sub:23,IROpCode_Mul:24,IROpCode_Div:25,IROpCode_Rem:26,IROpCode_LoadIndirect:27,IROpCode_StoreIndirect:28,IROpCode_LoadNull:29,IROpCode_NewObj:30,IROpCode_Dup:31,IROpCode_And:32,IROpCode_Or:33,IROpCode_XOr:34,IROpCode_Neg:35,IROpCode_Not:36,IROpCode_Call:37,IROpCode_Call_Absolute:38,IROpCode_Call_Internal:39,IROpCode_Load_String:40,;",128,0,0,0
	.stabs	"IROpCode:t(57,2)=(57,1)",128,0,842,0
	.stabs	"BranchCondition:T(57,3)=eBranchCondition_Always:0,BranchCondition_Equal:1,BranchCondition_False:2,BranchCondition_Greater_Or_Equal:3,BranchCondition_Greater_Or_Equal_Unsigned:4,BranchCondition_Greater:5,BranchCondition_Greater_Unsigned:6,BranchCondition_Less_Or_Equal:7,BranchCondition_Less_Or_Equal_Unsigned:8,BranchCondition_Less:9,BranchCondition_Less_Unsigned:10,BranchCondition_NotEqual_Unsigned:11,BranchCondition_True:12,;",128,0,0,0
	.stabs	"BranchCondition:t(57,4)=(57,3)",128,0,861,0
	.stabs	"ConversionArgumentType:T(57,5)=eConversionArgumentType_I1:0,ConversionArgumentType_U1:1,ConversionArgumentType_I2:2,ConversionArgumentType_U2:3,ConversionArgumentType_I4:4,ConversionArgumentType_U4:5,ConversionArgumentType_I8:6,ConversionArgumentType_U8:7,ConversionArgumentType_I:8,ConversionArgumentType_U:9,ConversionArgumentType_R4:10,ConversionArgumentType_R8:11,;",128,0,0,0
	.stabs	"ConversionArgumentType:t(57,6)=(57,5)",128,0,878,0
	.stabs	"ShiftType:T(57,7)=eShiftType_Right:0,ShiftType_Right_Sign_Extended:1,ShiftType_Left:2,;",128,0,0,0
	.stabs	"ShiftType:t(57,8)=(57,7)",128,0,885,0
	.stabs	"ElementType:T(57,9)=eElementType_I:0,ElementType_I1:1,ElementType_I2:2,ElementType_I4:3,ElementType_I8:4,ElementType_U:5,ElementType_U1:6,ElementType_U2:7,ElementType_U4:8,ElementType_U8:9,ElementType_R4:10,ElementType_R8:11,ElementType_Ref:12,ElementType_DataType:13,ElementType_ManagedPointer:14,ElementType_Generic:15,ElementType_MethodGeneric:16,;",128,0,0,0
	.stabs	"ElementType:t(57,10)=(57,9)",128,0,906,0
	.stabs	"OverflowType:T(57,11)=eOverflowType_None:0,OverflowType_Signed:1,OverflowType_Unsigned:2,;",128,0,0,0
	.stabs	"OverflowType:t(57,12)=(57,11)",128,0,913,0
	.stabn	162,0,0,0
	.stabs	"_IRAssembly:T(13,2)=s36AssemblyIndex:(10,10),0,32;ParentDomain:(13,17)=*(23,1),32,32;EntryPoint:(13,18)=*(13,7),64,32;MethodCount:(10,10),96,32;Methods:(13,19)=*(13,18),128,32;FieldCount:(10,10),160,32;Fields:(13,20)=*(13,21)=*(13,15),192,32;TypeCount:(10,10),224,32;Types:(13,22)=*(13,23)=*(13,3),256,32;;",128,0,0,0
	.stabs	"_IRType:T(13,4)=s42TypeIndex:(10,10),0,32;ParentAssembly:(23,4),32,32;IsValueType:(1,1),64,8;IsReferenceType:(1,1),72,8;IsGeneric:(1,1),80,8;IsInterface:(1,1),88,8;HasStaticConstructor:(1,1),96,8;StaticConstructor:(13,18),104,32;MethodCount:(10,10),136,32;Methods:(13,19),168,32;FieldCount:(10,10),200,32;Fields:(13,20),232,32;IsFixedSize:(1,1),264,8;Size:(10,10),272,32;TypeDef:(14,14),304,32;;",128,0,0,0
	.stabs	"_IRMethodSpec:T(13,6)=s8ParentType:(13,23),0,32;MethodIndex:(10,10),32,32;;",128,0,0,0
	.stabs	"_IRMethod:T(13,8)=s40MethodIndex:(10,10),0,32;AssembledMethod:(13,24)=*(13,25)=f(0,15),32,32;ParentAssembly:(23,4),64,32;IRCodesCount:(10,10),96,32;IRCodes:(13,26)=*(13,27)=*(13,9),128,32;ParameterCount:(10,10),160,32;Parameters:(13,28)=*(13,29)=*(13,11),192,32;LocalVariableCount:(10,10),224,32;LocalVariables:(13,30)=*(13,31)=*(13,13),256,32;MethodDefinition:(14,16),288,32;;",128,0,0,0
	.stabs	"_IRInstruction:T(13,10)=s29InstructionLocation:(10,10),0,32;OpCode:(57,2),32,32;Arg1NeedsDisposing:(1,1),64,8;Arg1:(5,15),72,32;Arg2NeedsDisposing:(1,1),104,8;Arg2:(5,15),112,32;Arg3NeedsDisposing:(1,1),144,8;Arg3:(5,15),152,32;Arg4NeedsDisposing:(1,1),184,8;Arg4:(5,15),192,32;IsTargetOfBranch:(1,1),224,8;;",128,0,0,0
	.stabs	"_IRParameter:T(13,12)=s16ParameterIndex:(10,10),0,32;Type:(13,23),32,32;Offset:(10,10),64,32;Size:(10,10),96,32;;",128,0,0,0
	.stabs	"_IRLocalVariable:T(13,14)=s12LocalVariableIndex:(10,10),0,32;VariableType:(13,23),32,32;Offset:(10,10),64,32;;",128,0,0,0
	.stabs	"_IRField:T(13,16)=s20FieldIndex:(10,10),0,32;ParentType:(13,23),32,32;FieldType:(13,23),64,32;Offset:(10,10),96,32;FieldDef:(14,15),128,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/JIT/JIT-x86.h",130,0,0,0
	.stabs	"x86ArrayHeader:t(58,1)=(58,2)=xs_x86ArrayHeader:",128,0,5,0
	.stabs	"_x86ArrayHeader:T(58,2)=s16ElementCount:(10,10),0,32;DomainIndex:(10,10),32,32;AssemblyIndex:(10,10),64,32;TypeIndex:(10,10),96,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/SyntheticStack.h",130,0,0,0
	.stabs	"SyntheticStack:t(59,1)=(59,2)=xs_SyntheticStack:",128,0,3,0
	.stabs	"StackObject:t(59,3)=(59,4)=xs_StackObject:",128,0,4,0
	.stabs	"StackObjectType:T(59,5)=eStackObjectType_Int32:0,StackObjectType_Int64:1,StackObjectType_NativeInt:2,StackObjectType_Float:3,StackObjectType_ReferenceType:4,StackObjectType_DataType:5,StackObjectType_UnmanagedPointer:6,StackObjectType_ManagedPointer:7,StackObjectType_Generic:8,StackObjectType_MethodGeneric:9,;",128,0,0,0
	.stabs	"StackObjectType:t(59,6)=(59,5)",128,0,18,0
	.stabs	"StackObjectNumericType:T(59,7)=eStackObjectNumericType_UInt8:0,StackObjectNumericType_UInt16:1,StackObjectNumericType_UInt32:2,StackObjectNumericType_UInt64:3,StackObjectNumericType_Int8:4,StackObjectNumericType_Int16:5,StackObjectNumericType_Int32:6,StackObjectNumericType_Int64:7,StackObjectNumericType_Float32:8,StackObjectNumericType_Float64:9,StackObjectNumericType_Pointer:10,StackObjectNumericType_UPointer:11,StackObjectNumericType_Ref:12,StackObjectNumericType_DataType:13,StackObjectNumericType_ManagedPointer:14,StackObjectNumericType_Generic:15,StackObjectNumericType_MethodGeneric:16,;",128,0,0,0
	.stabs	"StackObjectNumericType:t(59,8)=(59,7)",128,0,39,0
	.stabs	"_StackObject:T(59,4)=s16Type:(59,6),0,32;NumericType:(59,8),32,32;PrevObj:(59,9)=*(59,3),64,32;NextObj:(59,9),96,32;;",128,0,0,0
	.stabs	"_SyntheticStack:T(59,2)=s12StackID:(10,10),0,32;TopObject:(59,9),32,32;StackDepth:(10,10),64,32;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/stdlib.h",130,0,0,0
	.stabs	"../SDK/include/sys/reent.h",130,0,0,0
	.stabs	"__ULong:t(61,1)=(0,5)",128,0,21,0
	.stabs	"_Bigint:T(61,2)=s24_next:(61,3)=*(61,2),0,32;_k:(0,1),32,32;_maxwds:(0,1),64,32;_sign:(0,1),96,32;_wds:(0,1),128,32;_x:(61,4)=ar(5,12);0;0;(61,1),160,32;;",128,0,0,0
	.stabs	"__tm:T(61,5)=s36__tm_sec:(0,1),0,32;__tm_min:(0,1),32,32;__tm_hour:(0,1),64,32;__tm_mday:(0,1),96,32;__tm_mon:(0,1),128,32;__tm_year:(0,1),160,32;__tm_wday:(0,1),192,32;__tm_yday:(0,1),224,32;__tm_isdst:(0,1),256,32;;",128,0,0,0
	.stabs	"_on_exit_args:T(61,6)=s264_fnargs:(61,7)=ar(5,12);0;31;(5,15),0,1024;_dso_handle:(61,7),1024,1024;_fntypes:(61,1),2048,32;_is_cxa:(61,1),2080,32;;",128,0,0,0
	.stabs	"_atexit:T(61,8)=s400_next:(61,9)=*(61,8),0,32;_ind:(0,1),32,32;_fns:(61,10)=ar(5,12);0;31;(61,11)=*(61,12)=f(0,15),64,1024;_on_exit_args:(61,6),1088,2112;;",128,0,0,0
	.stabs	"__sbuf:T(61,13)=s8_base:(61,14)=*(0,11),0,32;_size:(0,1),32,32;;",128,0,0,0
	.stabs	"__sFILE:T(61,15)=s104_p:(61,14),0,32;_r:(0,1),32,32;_w:(0,1),64,32;_flags:(0,8),96,16;_file:(0,8),112,16;_bf:(61,13),128,64;_lbfsize:(0,1),192,32;_cookie:(5,15),224,32;_read:(61,16)=*(61,17)=f(0,1),256,32;_write:(61,18)=*(61,19)=f(0,1),288,32;_seek:(61,20)=*(61,21)=f(5,6),320,32;_close:(61,22)=*(61,23)=f(0,1),352,32;_ub:(61,13),384,64;_up:(61,14),448,32;_ur:(0,1),480,32;_ubuf:(61,24)=ar(5,12);0;2;(0,11),512,24;_nbuf:(61,25)=ar(5,12);0;0;(0,11),536,8;_lb:(61,13),544,64;_blksize:(0,1),608,32;_offset:(0,1),640,32;_data:(61,26)=*(61,27)=xs_reent:,672,32;_lock:(5,13),704,32;_mbstate:(5,8),736,64;_flags2:(0,1),800,32;;",128,0,0,0
	.stabs	"__FILE:t(61,28)=(61,15)",128,0,273,0
	.stabs	"_glue:T(61,29)=s12_next:(61,30)=*(61,29),0,32;_niobs:(0,1),32,32;_iobs:(61,31)=*(61,28),64,32;;",128,0,0,0
	.stabs	"_rand48:T(61,32)=s14_seed:(61,33)=ar(5,12);0;2;(0,9),0,48;_mult:(61,33),48,48;_add:(0,9),96,16;;",128,0,0,0
	.stabs	"_reent:T(61,27)=s1057_errno:(0,1),0,32;_stdin:(61,31),32,32;_stdout:(61,31),64,32;_stderr:(61,31),96,32;_inc:(0,1),128,32;_emergency:(61,34)=ar(5,12);0;24;(0,2),160,200;_current_category:(0,1),360,32;_current_locale:(18,1),392,32;__sdidinit:(0,1),424,32;__cleanup:(61,35)=*(61,36)=f(0,15),456,32;_result:(61,3),488,32;_result_k:(0,1),520,32;_p5s:(61,3),552,32;_freelist:(61,37)=*(61,3),584,32;_cvtlen:(0,1),616,32;_cvtbuf:(2,13),648,32;_new:(61,38)=u240_reent:(61,39)=s200_unused_rand:(0,4),0,32;_strtok_last:(2,13),32,32;_asctime_buf:(61,40)=ar(5,12);0;25;(0,2),64,208;_localtime_buf:(61,5),272,288;_gamma_signgam:(0,1),560,32;_rand_next:(0,7),592,64;_r48:(61,32),656,112;_mblen_state:(5,8),768,64;_mbtowc_state:(5,8),832,64;_wctomb_state:(5,8),896,64;_l64a_buf:(61,41)=ar(5,12);0;7;(0,2),960,64;_signal_buf:(61,42)=ar(5,12);0;23;(0,2),1024,192;_getdate_err:(0,1),1216,32;_mbrlen_state:(5,8),1248,64;_mbrtowc_state:(5,8),1312,64;_mbsrtowcs_state:(5,8),1376,64;_wcrtomb_state:(5,8),1440,64;_wcsrtombs_state:(5,8),1504,64;_h_errno:(0,1),1568,32;;,0,1600;_unused:(61,43)=s240_nextf:(61,44)=ar(5,12);0;29;(61,14),0,960;_nmalloc:(61,45)=ar(5,12);0;29;(0,4),960,960;;,0,1920;;,680,1920;_atexit:(61,9),2600,32;_atexit0:(61,8),2632,3200;_sig_func:(61,46)=*(61,47)=*(61,48)=f(0,15),5832,32;__sglue:(61,29),5864,96;__sf:(61,49)=ar(5,12);0;2;(61,28),5960,2496;;",128,0,0,0
	.stabn	162,0,0,0
	.stabs	"div_t:t(60,1)=(60,2)=s8quot:(0,1),0,32;rem:(0,1),32,32;;",128,0,33,0
	.stabs	"ldiv_t:t(60,3)=(60,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,39,0
	.stabn	162,0,0,0
	.stabs	"../SDK/include/stdio.h",130,0,0,0
	.stabs	"../SDK/include/stdarg.h",130,0,0,0
	.stabs	"__gnuc_va_list:t(63,1)=(63,2)=*(0,2)",128,0,40,0
	.stabn	162,0,0,0
	.stabs	"FILE:t(62,1)=(61,28)",128,0,50,0
	.stabs	"fpos_t:t(62,2)=(5,6)",128,0,55,0
	.stabn	162,0,0,0
	.stabs	"./Include/CLR/ReferenceTypeObject.h",130,0,0,0
	.stabs	"ReferenceTypeObject:t(64,1)=(64,2)=xs_ReferenceTypeObject:",128,0,9,0
	.stabs	"GCHeapStack:t(64,3)=(64,4)=xs_GCHeapStack:",128,0,10,0
	.stabs	"_ReferenceTypeObject:T(64,2)=s42Object:(15,18),0,32;Flags:(10,2),32,8;Size:(10,10),40,32;Stack:(64,5)=*(64,3),72,32;Age:(10,2),104,8;ReferenceCount:(10,10),112,32;DependancyPoolSize:(10,10),144,32;DependancyPoolCount:(10,10),176,32;DependancyPool:(64,6)=*(64,7)=*(64,1),208,32;DomainIndex:(10,10),240,32;AssemblyIndex:(10,10),272,32;TypeIndex:(10,10),304,32;;",128,0,0,0
	.stabn	162,0,0,0
	.section	.rodata
	.type	x86_cc_unsigned_map, @object
	.size	x86_cc_unsigned_map, 12
x86_cc_unsigned_map:
	.byte	116
	.byte	117
	.byte	114
	.byte	118
	.byte	119
	.byte	115
	.byte	120
	.byte	121
	.byte	122
	.byte	123
	.byte	112
	.byte	113
	.type	x86_cc_signed_map, @object
	.size	x86_cc_signed_map, 12
x86_cc_signed_map:
	.byte	116
	.byte	117
	.byte	124
	.byte	126
	.byte	127
	.byte	125
	.byte	120
	.byte	121
	.byte	122
	.byte	123
	.byte	112
	.byte	113
	.align 4
.LC0:
	.string	"Generics aren't currently supported!"
.LC1:
	.string	"0"
.LC2:
	.string	"Source/CLR/JIT/JIT-x86.c"
	.text
	.stabs	"JIT_Emit_Prologue:F(2,13)",36,0,11,JIT_Emit_Prologue
	.stabs	"mth:p(13,18)",160,0,11,8
	.stabs	"compMethod:p(2,13)",160,0,11,12
	.globl	JIT_Emit_Prologue
	.type	JIT_Emit_Prologue, @function
JIT_Emit_Prologue:
	.stabd	46,0,0
	.stabn	68,0,12,.LM0-.LFBB1
.LM0:
.LFBB1:
.LFB0:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.stabn	68,0,13,.LM1-.LFBB1
.LM1:
	movl	12(%ebp), %eax
	movb	$96, (%eax)
	addl	$1, 12(%ebp)
.LBB2:
	.stabn	68,0,16,.LM2-.LFBB1
.LM2:
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	cmpl	$-128, -20(%ebp)
	jl	.L2
	.stabn	68,0,16,.LM3-.LFBB1
.LM3:
	cmpl	$127, -20(%ebp)
	jg	.L2
	.stabn	68,0,16,.LM4-.LFBB1
.LM4:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L3
.L2:
	.stabn	68,0,16,.LM5-.LFBB1
.LM5:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB3:
	movl	-20(%ebp), %eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L3:
.LBE3:
.LBE2:
.LBB4:
	.stabn	68,0,17,.LM6-.LFBB1
.LM6:
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	cmpl	$-128, -24(%ebp)
	jl	.L4
	.stabn	68,0,17,.LM7-.LFBB1
.LM7:
	cmpl	$127, -24(%ebp)
	jg	.L4
	.stabn	68,0,17,.LM8-.LFBB1
.LM8:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L5
.L4:
	.stabn	68,0,17,.LM9-.LFBB1
.LM9:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB5:
	movl	-24(%ebp), %eax
	movl	%eax, -36(%ebp)
	movzbl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-35(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-34(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-33(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L5:
.LBE5:
.LBE4:
	.stabn	68,0,19,.LM10-.LFBB1
.LM10:
	movl	$0, -12(%ebp)
.LBB6:
	.stabn	68,0,20,.LM11-.LFBB1
.LM11:
	movl	$0, -16(%ebp)
	jmp	.L6
.L10:
.LBB7:
	.stabn	68,0,22,.LM12-.LFBB1
.LM12:
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	movl	-16(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	.stabn	68,0,23,.LM13-.LFBB1
.LM13:
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	9(%eax), %eax
	testb	%al, %al
	je	.L7
	.stabn	68,0,25,.LM14-.LFBB1
.LM14:
	movl	global_SizeOfPointerInBytes, %eax
	addl	%eax, -12(%ebp)
	jmp	.L8
.L7:
	.stabn	68,0,27,.LM15-.LFBB1
.LM15:
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	testb	%al, %al
	je	.L9
	.stabn	68,0,29,.LM16-.LFBB1
.LM16:
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	34(%eax), %eax
	addl	%eax, -12(%ebp)
	jmp	.L8
.L9:
	.stabn	68,0,33,.LM17-.LFBB1
.LM17:
	movl	$.LC0, (%esp)
	call	Panic
.L8:
.LBE7:
	.stabn	68,0,20,.LM18-.LFBB1
.LM18:
	addl	$1, -16(%ebp)
.L6:
	.stabn	68,0,20,.LM19-.LFBB1
.LM19:
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	cmpl	-16(%ebp), %eax
	ja	.L10
.LBE6:
	.stabn	68,0,42,.LM20-.LFBB1
.LM20:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L13
	cmpl	$4, %eax
	je	.L14
	cmpl	$1, %eax
	jne	.L18
.L12:
	.stabn	68,0,42,.LM21-.LFBB1
.LM21:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L15
.L13:
	.stabn	68,0,42,.LM22-.LFBB1
.LM22:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L14:
	.stabn	68,0,42,.LM23-.LFBB1
.LM23:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L15
.L18:
	.stabn	68,0,42,.LM24-.LFBB1
.LM24:
	movl	$.LC1, 12(%esp)
	movl	$__func__.3857, 8(%esp)
	movl	$42, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L15:
	.stabn	68,0,42,.LM25-.LFBB1
.LM25:
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,43,.LM26-.LFBB1
.LM26:
	movl	-12(%ebp), %eax
	cmpl	$-128, %eax
	jl	.L16
	.stabn	68,0,43,.LM27-.LFBB1
.LM27:
	movl	-12(%ebp), %eax
	cmpl	$127, %eax
	jg	.L16
	.stabn	68,0,43,.LM28-.LFBB1
.LM28:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L17
.L16:
	.stabn	68,0,43,.LM29-.LFBB1
.LM29:
	movl	12(%ebp), %eax
	movb	$-127, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
.LBB8:
	movl	-12(%ebp), %eax
	movl	%eax, -44(%ebp)
	movzbl	-44(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-43(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-42(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-41(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L17:
.LBE8:
	.stabn	68,0,46,.LM30-.LFBB1
.LM30:
	movl	12(%ebp), %eax
	.stabn	68,0,47,.LM31-.LFBB1
.LM31:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE0:
	.size	JIT_Emit_Prologue, .-JIT_Emit_Prologue
	.stabs	"localsSize:(10,10)",128,0,19,-12
	.stabs	"__func__:V(0,16)=ar(5,12);0;17;(18,2)",38,0,42,__func__.3857
	.stabn	192,0,0,.LFBB1-.LFBB1
	.stabs	"_imm:(0,1)",128,0,16,-20
	.stabn	192,0,0,.LBB2-.LFBB1
	.stabs	"imb:(11,17)",128,0,16,-32
	.stabn	192,0,0,.LBB3-.LFBB1
	.stabn	224,0,0,.LBE3-.LFBB1
	.stabn	224,0,0,.LBE2-.LFBB1
	.stabs	"_imm:(0,1)",128,0,17,-24
	.stabn	192,0,0,.LBB4-.LFBB1
	.stabs	"imb:(11,17)",128,0,17,-36
	.stabn	192,0,0,.LBB5-.LFBB1
	.stabn	224,0,0,.LBE5-.LFBB1
	.stabn	224,0,0,.LBE4-.LFBB1
	.stabs	"i:(10,10)",128,0,20,-16
	.stabn	192,0,0,.LBB6-.LFBB1
	.stabs	"var:(13,31)",128,0,22,-28
	.stabn	192,0,0,.LBB7-.LFBB1
	.stabn	224,0,0,.LBE7-.LFBB1
	.stabn	224,0,0,.LBE6-.LFBB1
	.stabs	"imb:(11,17)",128,0,43,-44
	.stabn	192,0,0,.LBB8-.LFBB1
	.stabn	224,0,0,.LBE8-.LFBB1
	.stabn	224,0,0,.Lscope1-.LFBB1
.Lscope1:
	.stabs	"",36,0,0,.Lscope1-.LFBB1
	.stabd	78,0,0
	.stabs	"JIT_Emit_Epilogue:F(2,13)",36,0,49,JIT_Emit_Epilogue
	.stabs	"mth:p(13,18)",160,0,49,8
	.stabs	"compMethod:p(2,13)",160,0,49,12
	.globl	JIT_Emit_Epilogue
	.type	JIT_Emit_Epilogue, @function
JIT_Emit_Epilogue:
	.stabd	46,0,0
	.stabn	68,0,50,.LM32-.LFBB2
.LM32:
.LFBB2:
.LFB1:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$24, %esp
	.stabn	68,0,56,.LM33-.LFBB2
.LM33:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L22
	cmpl	$4, %eax
	je	.L23
	cmpl	$1, %eax
	jne	.L25
.L21:
	.stabn	68,0,56,.LM34-.LFBB2
.LM34:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L24
.L22:
	.stabn	68,0,56,.LM35-.LFBB2
.LM35:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L23:
	.stabn	68,0,56,.LM36-.LFBB2
.LM36:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L24
.L25:
	.stabn	68,0,56,.LM37-.LFBB2
.LM37:
	movl	$.LC1, 12(%esp)
	movl	$__func__.3870, 8(%esp)
	movl	$56, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L24:
	.stabn	68,0,56,.LM38-.LFBB2
.LM38:
	movl	12(%ebp), %eax
	movb	$-27, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,61,.LM39-.LFBB2
.LM39:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,62,.LM40-.LFBB2
.LM40:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,65,.LM41-.LFBB2
.LM41:
	movl	12(%ebp), %eax
	movb	$97, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,67,.LM42-.LFBB2
.LM42:
	movl	12(%ebp), %eax
	.stabn	68,0,68,.LM43-.LFBB2
.LM43:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE1:
	.size	JIT_Emit_Epilogue, .-JIT_Emit_Epilogue
	.stabs	"__func__:V(0,16)",38,0,56,__func__.3870
	.stabn	192,0,0,.LFBB2-.LFBB2
	.stabn	224,0,0,.Lscope2-.LFBB2
.Lscope2:
	.stabs	"",36,0,0,.Lscope2-.LFBB2
	.stabd	78,0,0
	.stabs	"JIT_Compile_Nop:F(2,13)",36,0,73,JIT_Compile_Nop
	.stabs	"instr:p(13,27)",160,0,73,8
	.stabs	"compMethod:p(2,13)",160,0,73,12
	.stabs	"mth:p(13,18)",160,0,73,16
	.globl	JIT_Compile_Nop
	.type	JIT_Compile_Nop, @function
JIT_Compile_Nop:
	.stabd	46,0,0
	.stabn	68,0,74,.LM44-.LFBB3
.LM44:
.LFBB3:
.LFB2:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,75,.LM45-.LFBB3
.LM45:
	movl	12(%ebp), %eax
	movb	$-112, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,76,.LM46-.LFBB3
.LM46:
	movl	12(%ebp), %eax
	.stabn	68,0,77,.LM47-.LFBB3
.LM47:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE2:
	.size	JIT_Compile_Nop, .-JIT_Compile_Nop
.Lscope3:
	.stabs	"",36,0,0,.Lscope3-.LFBB3
	.stabd	78,0,0
	.stabs	"JIT_Compile_BreakForDebugger:F(2,13)",36,0,80,JIT_Compile_BreakForDebugger
	.stabs	"instr:p(13,27)",160,0,80,8
	.stabs	"compMethod:p(2,13)",160,0,80,12
	.stabs	"mth:p(13,18)",160,0,80,16
	.globl	JIT_Compile_BreakForDebugger
	.type	JIT_Compile_BreakForDebugger, @function
JIT_Compile_BreakForDebugger:
	.stabd	46,0,0
	.stabn	68,0,81,.LM48-.LFBB4
.LM48:
.LFBB4:
.LFB3:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,83,.LM49-.LFBB4
.LM49:
	movl	12(%ebp), %eax
	.stabn	68,0,84,.LM50-.LFBB4
.LM50:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE3:
	.size	JIT_Compile_BreakForDebugger, .-JIT_Compile_BreakForDebugger
.Lscope4:
	.stabs	"",36,0,0,.Lscope4-.LFBB4
	.stabd	78,0,0
	.stabs	"JIT_Compile_Return:F(2,13)",36,0,87,JIT_Compile_Return
	.stabs	"instr:p(13,27)",160,0,87,8
	.stabs	"compMethod:p(2,13)",160,0,87,12
	.stabs	"mth:p(13,18)",160,0,87,16
	.globl	JIT_Compile_Return
	.type	JIT_Compile_Return, @function
JIT_Compile_Return:
	.stabd	46,0,0
	.stabn	68,0,88,.LM51-.LFBB5
.LM51:
.LFBB5:
.LFB4:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,90,.LM52-.LFBB5
.LM52:
	movl	12(%ebp), %eax
	.stabn	68,0,91,.LM53-.LFBB5
.LM53:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE4:
	.size	JIT_Compile_Return, .-JIT_Compile_Return
.Lscope5:
	.stabs	"",36,0,0,.Lscope5-.LFBB5
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadInt32_Val:F(2,13)",36,0,94,JIT_Compile_LoadInt32_Val
	.stabs	"instr:p(13,27)",160,0,94,8
	.stabs	"compMethod:p(2,13)",160,0,94,12
	.stabs	"mth:p(13,18)",160,0,94,16
	.globl	JIT_Compile_LoadInt32_Val
	.type	JIT_Compile_LoadInt32_Val, @function
JIT_Compile_LoadInt32_Val:
	.stabd	46,0,0
	.stabn	68,0,95,.LM54-.LFBB6
.LM54:
.LFBB6:
.LFB5:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
.LBB9:
	.stabn	68,0,96,.LM55-.LFBB6
.LM55:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	cmpl	$-128, -4(%ebp)
	jl	.L30
	.stabn	68,0,96,.LM56-.LFBB6
.LM56:
	cmpl	$127, -4(%ebp)
	jg	.L30
	.stabn	68,0,96,.LM57-.LFBB6
.LM57:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L31
.L30:
	.stabn	68,0,96,.LM58-.LFBB6
.LM58:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB10:
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
	movzbl	-8(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-7(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-6(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-5(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L31:
.LBE10:
.LBE9:
	.stabn	68,0,97,.LM59-.LFBB6
.LM59:
	movl	12(%ebp), %eax
	.stabn	68,0,98,.LM60-.LFBB6
.LM60:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE5:
	.size	JIT_Compile_LoadInt32_Val, .-JIT_Compile_LoadInt32_Val
	.stabs	"_imm:(0,1)",128,0,96,-4
	.stabn	192,0,0,.LBB9-.LFBB6
	.stabs	"imb:(11,17)",128,0,96,-8
	.stabn	192,0,0,.LBB10-.LFBB6
	.stabn	224,0,0,.LBE10-.LFBB6
	.stabn	224,0,0,.LBE9-.LFBB6
.Lscope6:
	.stabs	"",36,0,0,.Lscope6-.LFBB6
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadInt64_Val:F(2,13)",36,0,101,JIT_Compile_LoadInt64_Val
	.stabs	"instr:p(13,27)",160,0,101,8
	.stabs	"compMethod:p(2,13)",160,0,101,12
	.stabs	"mth:p(13,18)",160,0,101,16
	.globl	JIT_Compile_LoadInt64_Val
	.type	JIT_Compile_LoadInt64_Val, @function
JIT_Compile_LoadInt64_Val:
	.stabd	46,0,0
	.stabn	68,0,102,.LM61-.LFBB7
.LM61:
.LFBB7:
.LFB6:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
	.stabn	68,0,103,.LM62-.LFBB7
.LM62:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	movl	%edx, -4(%ebp)
.LBB11:
	.stabn	68,0,104,.LM63-.LFBB7
.LM63:
	movl	-8(%ebp), %eax
	movl	%eax, -12(%ebp)
	cmpl	$-128, -12(%ebp)
	jl	.L33
	.stabn	68,0,104,.LM64-.LFBB7
.LM64:
	cmpl	$127, -12(%ebp)
	jg	.L33
	.stabn	68,0,104,.LM65-.LFBB7
.LM65:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L34
.L33:
	.stabn	68,0,104,.LM66-.LFBB7
.LM66:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB12:
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L34:
.LBE12:
.LBE11:
.LBB13:
	.stabn	68,0,105,.LM67-.LFBB7
.LM67:
	movl	-8(%ebp), %eax
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -16(%ebp)
	cmpl	$-128, -16(%ebp)
	jl	.L35
	.stabn	68,0,105,.LM68-.LFBB7
.LM68:
	cmpl	$127, -16(%ebp)
	jg	.L35
	.stabn	68,0,105,.LM69-.LFBB7
.LM69:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L36
.L35:
	.stabn	68,0,105,.LM70-.LFBB7
.LM70:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB14:
	movl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
	movzbl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-23(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-22(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-21(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L36:
.LBE14:
.LBE13:
	.stabn	68,0,106,.LM71-.LFBB7
.LM71:
	movl	12(%ebp), %eax
	.stabn	68,0,107,.LM72-.LFBB7
.LM72:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE6:
	.size	JIT_Compile_LoadInt64_Val, .-JIT_Compile_LoadInt64_Val
	.stabs	"value:(10,13)",128,0,103,-8
	.stabn	192,0,0,.LFBB7-.LFBB7
	.stabs	"_imm:(0,1)",128,0,104,-12
	.stabn	192,0,0,.LBB11-.LFBB7
	.stabs	"imb:(11,17)",128,0,104,-20
	.stabn	192,0,0,.LBB12-.LFBB7
	.stabn	224,0,0,.LBE12-.LFBB7
	.stabn	224,0,0,.LBE11-.LFBB7
	.stabs	"_imm:(0,1)",128,0,105,-16
	.stabn	192,0,0,.LBB13-.LFBB7
	.stabs	"imb:(11,17)",128,0,105,-24
	.stabn	192,0,0,.LBB14-.LFBB7
	.stabn	224,0,0,.LBE14-.LFBB7
	.stabn	224,0,0,.LBE13-.LFBB7
	.stabn	224,0,0,.Lscope7-.LFBB7
.Lscope7:
	.stabs	"",36,0,0,.Lscope7-.LFBB7
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadFloat32_Val:F(2,13)",36,0,110,JIT_Compile_LoadFloat32_Val
	.stabs	"instr:p(13,27)",160,0,110,8
	.stabs	"compMethod:p(2,13)",160,0,110,12
	.stabs	"mth:p(13,18)",160,0,110,16
	.globl	JIT_Compile_LoadFloat32_Val
	.type	JIT_Compile_LoadFloat32_Val, @function
JIT_Compile_LoadFloat32_Val:
	.stabd	46,0,0
	.stabn	68,0,111,.LM73-.LFBB8
.LM73:
.LFBB8:
.LFB7:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
.LBB15:
	.stabn	68,0,112,.LM74-.LFBB8
.LM74:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	cmpl	$-128, -4(%ebp)
	jl	.L38
	.stabn	68,0,112,.LM75-.LFBB8
.LM75:
	cmpl	$127, -4(%ebp)
	jg	.L38
	.stabn	68,0,112,.LM76-.LFBB8
.LM76:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L39
.L38:
	.stabn	68,0,112,.LM77-.LFBB8
.LM77:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB16:
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
	movzbl	-8(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-7(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-6(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-5(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L39:
.LBE16:
.LBE15:
	.stabn	68,0,113,.LM78-.LFBB8
.LM78:
	movl	12(%ebp), %eax
	.stabn	68,0,114,.LM79-.LFBB8
.LM79:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE7:
	.size	JIT_Compile_LoadFloat32_Val, .-JIT_Compile_LoadFloat32_Val
	.stabs	"_imm:(0,1)",128,0,112,-4
	.stabn	192,0,0,.LBB15-.LFBB8
	.stabs	"imb:(11,17)",128,0,112,-8
	.stabn	192,0,0,.LBB16-.LFBB8
	.stabn	224,0,0,.LBE16-.LFBB8
	.stabn	224,0,0,.LBE15-.LFBB8
.Lscope8:
	.stabs	"",36,0,0,.Lscope8-.LFBB8
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadFloat64_Val:F(2,13)",36,0,117,JIT_Compile_LoadFloat64_Val
	.stabs	"instr:p(13,27)",160,0,117,8
	.stabs	"compMethod:p(2,13)",160,0,117,12
	.stabs	"mth:p(13,18)",160,0,117,16
	.globl	JIT_Compile_LoadFloat64_Val
	.type	JIT_Compile_LoadFloat64_Val, @function
JIT_Compile_LoadFloat64_Val:
	.stabd	46,0,0
	.stabn	68,0,118,.LM80-.LFBB9
.LM80:
.LFBB9:
.LFB8:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$32, %esp
	.stabn	68,0,119,.LM81-.LFBB9
.LM81:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	4(%eax), %edx
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	movl	%edx, -4(%ebp)
.LBB17:
	.stabn	68,0,120,.LM82-.LFBB9
.LM82:
	movl	-8(%ebp), %eax
	movl	%eax, -12(%ebp)
	cmpl	$-128, -12(%ebp)
	jl	.L41
	.stabn	68,0,120,.LM83-.LFBB9
.LM83:
	cmpl	$127, -12(%ebp)
	jg	.L41
	.stabn	68,0,120,.LM84-.LFBB9
.LM84:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L42
.L41:
	.stabn	68,0,120,.LM85-.LFBB9
.LM85:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB18:
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L42:
.LBE18:
.LBE17:
.LBB19:
	.stabn	68,0,121,.LM86-.LFBB9
.LM86:
	movl	-8(%ebp), %eax
	movl	-4(%ebp), %edx
	movl	%edx, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -16(%ebp)
	cmpl	$-128, -16(%ebp)
	jl	.L43
	.stabn	68,0,121,.LM87-.LFBB9
.LM87:
	cmpl	$127, -16(%ebp)
	jg	.L43
	.stabn	68,0,121,.LM88-.LFBB9
.LM88:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L44
.L43:
	.stabn	68,0,121,.LM89-.LFBB9
.LM89:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB20:
	movl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
	movzbl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-23(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-22(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-21(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L44:
.LBE20:
.LBE19:
	.stabn	68,0,122,.LM90-.LFBB9
.LM90:
	movl	12(%ebp), %eax
	.stabn	68,0,123,.LM91-.LFBB9
.LM91:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE8:
	.size	JIT_Compile_LoadFloat64_Val, .-JIT_Compile_LoadFloat64_Val
	.stabs	"value:(10,13)",128,0,119,-8
	.stabn	192,0,0,.LFBB9-.LFBB9
	.stabs	"_imm:(0,1)",128,0,120,-12
	.stabn	192,0,0,.LBB17-.LFBB9
	.stabs	"imb:(11,17)",128,0,120,-20
	.stabn	192,0,0,.LBB18-.LFBB9
	.stabn	224,0,0,.LBE18-.LFBB9
	.stabn	224,0,0,.LBE17-.LFBB9
	.stabs	"_imm:(0,1)",128,0,121,-16
	.stabn	192,0,0,.LBB19-.LFBB9
	.stabs	"imb:(11,17)",128,0,121,-24
	.stabn	192,0,0,.LBB20-.LFBB9
	.stabn	224,0,0,.LBE20-.LFBB9
	.stabn	224,0,0,.LBE19-.LFBB9
	.stabn	224,0,0,.Lscope9-.LFBB9
.Lscope9:
	.stabs	"",36,0,0,.Lscope9-.LFBB9
	.stabd	78,0,0
	.stabs	"JIT_Compile_Branch:F(2,13)",36,0,126,JIT_Compile_Branch
	.stabs	"instr:p(13,27)",160,0,126,8
	.stabs	"compMethod:p(2,13)",160,0,126,12
	.stabs	"mth:p(13,18)",160,0,126,16
	.globl	JIT_Compile_Branch
	.type	JIT_Compile_Branch, @function
JIT_Compile_Branch:
	.stabd	46,0,0
	.stabn	68,0,127,.LM92-.LFBB10
.LM92:
.LFBB10:
.LFB9:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,129,.LM93-.LFBB10
.LM93:
	movl	12(%ebp), %eax
	.stabn	68,0,130,.LM94-.LFBB10
.LM94:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE9:
	.size	JIT_Compile_Branch, .-JIT_Compile_Branch
.Lscope10:
	.stabs	"",36,0,0,.Lscope10-.LFBB10
	.stabd	78,0,0
	.stabs	"JIT_Compile_Jump:F(2,13)",36,0,133,JIT_Compile_Jump
	.stabs	"instr:p(13,27)",160,0,133,8
	.stabs	"compMethod:p(2,13)",160,0,133,12
	.stabs	"mth:p(13,18)",160,0,133,16
	.globl	JIT_Compile_Jump
	.type	JIT_Compile_Jump, @function
JIT_Compile_Jump:
	.stabd	46,0,0
	.stabn	68,0,134,.LM95-.LFBB11
.LM95:
.LFBB11:
.LFB10:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,136,.LM96-.LFBB11
.LM96:
	movl	12(%ebp), %eax
	.stabn	68,0,137,.LM97-.LFBB11
.LM97:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE10:
	.size	JIT_Compile_Jump, .-JIT_Compile_Jump
.Lscope11:
	.stabs	"",36,0,0,.Lscope11-.LFBB11
	.stabd	78,0,0
	.stabs	"JIT_Compile_Store_LocalVar:F(2,13)",36,0,140,JIT_Compile_Store_LocalVar
	.stabs	"instr:p(13,27)",160,0,140,8
	.stabs	"compMethod:p(2,13)",160,0,140,12
	.stabs	"mth:p(13,18)",160,0,140,16
	.globl	JIT_Compile_Store_LocalVar
	.type	JIT_Compile_Store_LocalVar, @function
JIT_Compile_Store_LocalVar:
	.stabd	46,0,0
	.stabn	68,0,141,.LM98-.LFBB12
.LM98:
.LFBB12:
.LFB11:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.stabn	68,0,142,.LM99-.LFBB12
.LM99:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.stabn	68,0,143,.LM100-.LFBB12
.LM100:
	movl	global_SizeOfPointerInBytes, %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,144,.LM101-.LFBB12
.LM101:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	testb	%al, %al
	je	.L48
	.stabn	68,0,145,.LM102-.LFBB12
.LM102:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	34(%eax), %eax
	movl	%eax, -12(%ebp)
.L48:
	.stabn	68,0,146,.LM103-.LFBB12
.LM103:
	movl	global_SizeOfPointerInBytes, %edx
	movl	%edx, -44(%ebp)
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	-44(%ebp)
	movl	%eax, -16(%ebp)
	.stabn	68,0,147,.LM104-.LFBB12
.LM104:
	movl	global_SizeOfPointerInBytes, %ecx
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	%ecx
	movl	%edx, %eax
	testl	%eax, %eax
	je	.L49
	.stabn	68,0,147,.LM105-.LFBB12
.LM105:
	addl	$1, -16(%ebp)
.L49:
.LBB21:
	.stabn	68,0,148,.LM106-.LFBB12
.LM106:
	movl	$0, -20(%ebp)
	jmp	.L50
.L58:
	.stabn	68,0,150,.LM107-.LFBB12
.LM107:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,151,.LM108-.LFBB12
.LM108:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L53
	cmpl	$4, %eax
	je	.L54
	cmpl	$1, %eax
	jne	.L59
.L52:
	.stabn	68,0,151,.LM109-.LFBB12
.LM109:
	movl	12(%ebp), %eax
	movb	$-120, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L55
.L53:
	.stabn	68,0,151,.LM110-.LFBB12
.LM110:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L54:
	.stabn	68,0,151,.LM111-.LFBB12
.LM111:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L55
.L59:
	.stabn	68,0,151,.LM112-.LFBB12
.LM112:
	movl	$.LC1, 12(%esp)
	movl	$__func__.3944, 8(%esp)
	movl	$151, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L55:
	.stabn	68,0,151,.LM113-.LFBB12
.LM113:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	cmpl	$-128, %eax
	jl	.L56
	.stabn	68,0,151,.LM114-.LFBB12
.LM114:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	cmpl	$127, %eax
	jg	.L56
	.stabn	68,0,151,.LM115-.LFBB12
.LM115:
	movl	12(%ebp), %eax
	movb	$69, (%eax)
	addl	$1, 12(%ebp)
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	global_SizeOfPointerInBytes, %ecx
	imull	%ecx, %eax
	addl	%edx, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L57
.L56:
	.stabn	68,0,151,.LM116-.LFBB12
.LM116:
	movl	12(%ebp), %eax
	movb	$-123, (%eax)
	addl	$1, 12(%ebp)
.LBB22:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L57:
.LBE22:
	.stabn	68,0,148,.LM117-.LFBB12
.LM117:
	addl	$1, -20(%ebp)
.L50:
	.stabn	68,0,148,.LM118-.LFBB12
.LM118:
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L58
.LBE21:
	.stabn	68,0,153,.LM119-.LFBB12
.LM119:
	movl	12(%ebp), %eax
	.stabn	68,0,154,.LM120-.LFBB12
.LM120:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE11:
	.size	JIT_Compile_Store_LocalVar, .-JIT_Compile_Store_LocalVar
	.stabs	"localIndex:(10,10)",128,0,142,-24
	.stabs	"size:(10,10)",128,0,143,-12
	.stabs	"movCount:(10,10)",128,0,146,-16
	.stabs	"__func__:V(0,17)=ar(5,12);0;26;(18,2)",38,0,151,__func__.3944
	.stabn	192,0,0,.LFBB12-.LFBB12
	.stabs	"movIndex:(10,10)",128,0,148,-20
	.stabn	192,0,0,.LBB21-.LFBB12
	.stabs	"imb:(11,17)",128,0,151,-32
	.stabn	192,0,0,.LBB22-.LFBB12
	.stabn	224,0,0,.LBE22-.LFBB12
	.stabn	224,0,0,.LBE21-.LFBB12
	.stabn	224,0,0,.Lscope12-.LFBB12
.Lscope12:
	.stabs	"",36,0,0,.Lscope12-.LFBB12
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_LocalVar:F(2,13)",36,0,157,JIT_Compile_Load_LocalVar
	.stabs	"instr:p(13,27)",160,0,157,8
	.stabs	"compMethod:p(2,13)",160,0,157,12
	.stabs	"mth:p(13,18)",160,0,157,16
	.globl	JIT_Compile_Load_LocalVar
	.type	JIT_Compile_Load_LocalVar, @function
JIT_Compile_Load_LocalVar:
	.stabd	46,0,0
	.stabn	68,0,158,.LM121-.LFBB13
.LM121:
.LFBB13:
.LFB12:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.stabn	68,0,159,.LM122-.LFBB13
.LM122:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.stabn	68,0,160,.LM123-.LFBB13
.LM123:
	movl	global_SizeOfPointerInBytes, %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,161,.LM124-.LFBB13
.LM124:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	testb	%al, %al
	je	.L61
	.stabn	68,0,162,.LM125-.LFBB13
.LM125:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	34(%eax), %eax
	movl	%eax, -12(%ebp)
.L61:
	.stabn	68,0,163,.LM126-.LFBB13
.LM126:
	movl	global_SizeOfPointerInBytes, %edx
	movl	%edx, -44(%ebp)
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	-44(%ebp)
	movl	%eax, -16(%ebp)
	.stabn	68,0,164,.LM127-.LFBB13
.LM127:
	movl	global_SizeOfPointerInBytes, %ecx
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	%ecx
	movl	%edx, %eax
	testl	%eax, %eax
	je	.L62
	.stabn	68,0,164,.LM128-.LFBB13
.LM128:
	addl	$1, -16(%ebp)
.L62:
.LBB23:
	.stabn	68,0,165,.LM129-.LFBB13
.LM129:
	movl	$0, -20(%ebp)
	jmp	.L63
.L71:
	.stabn	68,0,167,.LM130-.LFBB13
.LM130:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L66
	cmpl	$4, %eax
	je	.L67
	cmpl	$1, %eax
	jne	.L72
.L65:
	.stabn	68,0,167,.LM131-.LFBB13
.LM131:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L68
.L66:
	.stabn	68,0,167,.LM132-.LFBB13
.LM132:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L67:
	.stabn	68,0,167,.LM133-.LFBB13
.LM133:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L68
.L72:
	.stabn	68,0,167,.LM134-.LFBB13
.LM134:
	movl	$.LC1, 12(%esp)
	movl	$__func__.3965, 8(%esp)
	movl	$167, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L68:
	.stabn	68,0,167,.LM135-.LFBB13
.LM135:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	cmpl	$-128, %eax
	jl	.L69
	.stabn	68,0,167,.LM136-.LFBB13
.LM136:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	cmpl	$127, %eax
	jg	.L69
	.stabn	68,0,167,.LM137-.LFBB13
.LM137:
	movl	12(%ebp), %eax
	movb	$69, (%eax)
	addl	$1, 12(%ebp)
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	global_SizeOfPointerInBytes, %ecx
	imull	%ecx, %eax
	addl	%edx, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L70
.L69:
	.stabn	68,0,167,.LM138-.LFBB13
.LM138:
	movl	12(%ebp), %eax
	movb	$-123, (%eax)
	addl	$1, 12(%ebp)
.LBB24:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L70:
.LBE24:
	.stabn	68,0,168,.LM139-.LFBB13
.LM139:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,165,.LM140-.LFBB13
.LM140:
	addl	$1, -20(%ebp)
.L63:
	.stabn	68,0,165,.LM141-.LFBB13
.LM141:
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L71
.LBE23:
	.stabn	68,0,170,.LM142-.LFBB13
.LM142:
	movl	12(%ebp), %eax
	.stabn	68,0,171,.LM143-.LFBB13
.LM143:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE12:
	.size	JIT_Compile_Load_LocalVar, .-JIT_Compile_Load_LocalVar
	.stabs	"localIndex:(10,10)",128,0,159,-24
	.stabs	"size:(10,10)",128,0,160,-12
	.stabs	"movCount:(10,10)",128,0,163,-16
	.stabs	"__func__:V(0,18)=ar(5,12);0;25;(18,2)",38,0,167,__func__.3965
	.stabn	192,0,0,.LFBB13-.LFBB13
	.stabs	"movIndex:(10,10)",128,0,165,-20
	.stabn	192,0,0,.LBB23-.LFBB13
	.stabs	"imb:(11,17)",128,0,167,-32
	.stabn	192,0,0,.LBB24-.LFBB13
	.stabn	224,0,0,.LBE24-.LFBB13
	.stabn	224,0,0,.LBE23-.LFBB13
	.stabn	224,0,0,.Lscope13-.LFBB13
.Lscope13:
	.stabs	"",36,0,0,.Lscope13-.LFBB13
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_LocalVar_Address:F(2,13)",36,0,174,JIT_Compile_Load_LocalVar_Address
	.stabs	"instr:p(13,27)",160,0,174,8
	.stabs	"compMethod:p(2,13)",160,0,174,12
	.stabs	"mth:p(13,18)",160,0,174,16
	.globl	JIT_Compile_Load_LocalVar_Address
	.type	JIT_Compile_Load_LocalVar_Address, @function
JIT_Compile_Load_LocalVar_Address:
	.stabd	46,0,0
	.stabn	68,0,175,.LM144-.LFBB14
.LM144:
.LFBB14:
.LFB13:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,176,.LM145-.LFBB14
.LM145:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,177,.LM146-.LFBB14
.LM146:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L76
	cmpl	$4, %eax
	je	.L77
	cmpl	$1, %eax
	jne	.L79
.L75:
	.stabn	68,0,177,.LM147-.LFBB14
.LM147:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L78
.L76:
	.stabn	68,0,177,.LM148-.LFBB14
.LM148:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L77:
	.stabn	68,0,177,.LM149-.LFBB14
.LM149:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L78
.L79:
	.stabn	68,0,177,.LM150-.LFBB14
.LM150:
	movl	$.LC1, 12(%esp)
	movl	$__func__.3983, 8(%esp)
	movl	$177, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L78:
	.stabn	68,0,177,.LM151-.LFBB14
.LM151:
	movl	12(%ebp), %eax
	movb	$-59, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,178,.LM152-.LFBB14
.LM152:
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB25:
	movl	16(%ebp), %eax
	movl	32(%eax), %eax
	movl	-12(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -16(%ebp)
	movzbl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-15(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-14(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-13(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE25:
	.stabn	68,0,179,.LM153-.LFBB14
.LM153:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,180,.LM154-.LFBB14
.LM154:
	movl	12(%ebp), %eax
	.stabn	68,0,181,.LM155-.LFBB14
.LM155:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE13:
	.size	JIT_Compile_Load_LocalVar_Address, .-JIT_Compile_Load_LocalVar_Address
	.stabs	"localIndex:(10,10)",128,0,176,-12
	.stabs	"__func__:V(0,19)=ar(5,12);0;33;(18,2)",38,0,177,__func__.3983
	.stabn	192,0,0,.LFBB14-.LFBB14
	.stabs	"imb:(11,17)",128,0,178,-16
	.stabn	192,0,0,.LBB25-.LFBB14
	.stabn	224,0,0,.LBE25-.LFBB14
	.stabn	224,0,0,.Lscope14-.LFBB14
.Lscope14:
	.stabs	"",36,0,0,.Lscope14-.LFBB14
	.stabd	78,0,0
	.stabs	"JIT_Compile_Convert_OverflowCheck:F(2,13)",36,0,184,JIT_Compile_Convert_OverflowCheck
	.stabs	"instr:p(13,27)",160,0,184,8
	.stabs	"compMethod:p(2,13)",160,0,184,12
	.stabs	"mth:p(13,18)",160,0,184,16
	.globl	JIT_Compile_Convert_OverflowCheck
	.type	JIT_Compile_Convert_OverflowCheck, @function
JIT_Compile_Convert_OverflowCheck:
	.stabd	46,0,0
	.stabn	68,0,185,.LM156-.LFBB15
.LM156:
.LFBB15:
.LFB14:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,186,.LM157-.LFBB15
.LM157:
	movl	12(%ebp), %eax
	.stabn	68,0,187,.LM158-.LFBB15
.LM158:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE14:
	.size	JIT_Compile_Convert_OverflowCheck, .-JIT_Compile_Convert_OverflowCheck
.Lscope15:
	.stabs	"",36,0,0,.Lscope15-.LFBB15
	.stabd	78,0,0
	.section	.rodata
	.align 4
.LC3:
	.string	"Convert Unchecked, Invalid Arguments: From = 0x%x, To = 0x%x"
	.text
	.stabs	"JIT_Compile_Convert_Unchecked:F(2,13)",36,0,190,JIT_Compile_Convert_Unchecked
	.stabs	"instr:p(13,27)",160,0,190,8
	.stabs	"compMethod:p(2,13)",160,0,190,12
	.stabs	"mth:p(13,18)",160,0,190,16
	.globl	JIT_Compile_Convert_Unchecked
	.type	JIT_Compile_Convert_Unchecked, @function
JIT_Compile_Convert_Unchecked:
	.stabd	46,0,0
	.stabn	68,0,191,.LM159-.LFBB16
.LM159:
.LFBB16:
.LFB15:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$616, %esp
	.stabn	68,0,193,.LM160-.LFBB16
.LM160:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,194,.LM161-.LFBB16
.LM161:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,195,.LM162-.LFBB16
.LM162:
	movl	-12(%ebp), %eax
	cmpl	$6, %eax
	je	.L84
	cmpl	$6, %eax
	ja	.L86
	cmpl	$4, %eax
	je	.L83
	jmp	.L82
.L86:
	cmpl	$8, %eax
	je	.L83
	cmpl	$11, %eax
	je	.L85
	jmp	.L82
.L83:
	.stabn	68,0,199,.LM163-.LFBB16
.LM163:
	cmpl	$11, -16(%ebp)
	ja	.L87
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L97, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L97:
	.long	.L88
	.long	.L89
	.long	.L90
	.long	.L91
	.long	.L122
	.long	.L122
	.long	.L93
	.long	.L94
	.long	.L122
	.long	.L122
	.long	.L95
	.long	.L96
	.text
.L88:
	.stabn	68,0,202,.LM164-.LFBB16
.LM164:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
.LBB26:
	.stabn	68,0,203,.LM165-.LFBB16
.LM165:
	movb	$-74, -17(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$8, -17(%ebp)
	movzbl	-17(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE26:
	.stabn	68,0,204,.LM166-.LFBB16
.LM166:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,205,.LM167-.LFBB16
.LM167:
	jmp	.L98
.L89:
	.stabn	68,0,207,.LM168-.LFBB16
.LM168:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
.LBB27:
	.stabn	68,0,208,.LM169-.LFBB16
.LM169:
	movb	$-74, -18(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE27:
	.stabn	68,0,209,.LM170-.LFBB16
.LM170:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,210,.LM171-.LFBB16
.LM171:
	jmp	.L98
.L90:
	.stabn	68,0,212,.LM172-.LFBB16
.LM172:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
.LBB28:
	.stabn	68,0,213,.LM173-.LFBB16
.LM173:
	movb	$-74, -19(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$8, -19(%ebp)
	addb	$1, -19(%ebp)
	movzbl	-19(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE28:
	.stabn	68,0,214,.LM174-.LFBB16
.LM174:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,215,.LM175-.LFBB16
.LM175:
	jmp	.L98
.L91:
	.stabn	68,0,217,.LM176-.LFBB16
.LM176:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
.LBB29:
	.stabn	68,0,218,.LM177-.LFBB16
.LM177:
	movb	$-74, -20(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$1, -20(%ebp)
	movzbl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE29:
	.stabn	68,0,219,.LM178-.LFBB16
.LM178:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,220,.LM179-.LFBB16
.LM179:
	jmp	.L98
.L93:
	.stabn	68,0,226,.LM180-.LFBB16
.LM180:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,227,.LM181-.LFBB16
.LM181:
	movl	12(%ebp), %eax
	movb	$-103, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,228,.LM182-.LFBB16
.LM182:
	movl	12(%ebp), %eax
	movb	$82, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,229,.LM183-.LFBB16
.LM183:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,230,.LM184-.LFBB16
.LM184:
	jmp	.L98
.L94:
	.stabn	68,0,232,.LM185-.LFBB16
.LM185:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
.LBB30:
	.stabn	68,0,233,.LM186-.LFBB16
.LM186:
	movl	$0, -24(%ebp)
	cmpl	$-128, -24(%ebp)
	jl	.L99
	.stabn	68,0,233,.LM187-.LFBB16
.LM187:
	cmpl	$127, -24(%ebp)
	jg	.L99
	.stabn	68,0,233,.LM188-.LFBB16
.LM188:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L100
.L99:
	.stabn	68,0,233,.LM189-.LFBB16
.LM189:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB31:
	movl	-24(%ebp), %eax
	movl	%eax, -160(%ebp)
	movzbl	-160(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-159(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-158(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-157(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L100:
.LBE31:
.LBE30:
	.stabn	68,0,234,.LM190-.LFBB16
.LM190:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,235,.LM191-.LFBB16
.LM191:
	jmp	.L98
.L95:
	.stabn	68,0,237,.LM192-.LFBB16
.LM192:
	movl	12(%ebp), %eax
	movb	$-37, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,238,.LM193-.LFBB16
.LM193:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,239,.LM194-.LFBB16
.LM194:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,240,.LM195-.LFBB16
.LM195:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,241,.LM196-.LFBB16
.LM196:
	jmp	.L98
.L96:
	.stabn	68,0,243,.LM197-.LFBB16
.LM197:
	movl	12(%ebp), %eax
	movb	$-37, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,244,.LM198-.LFBB16
.LM198:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,245,.LM199-.LFBB16
.LM199:
	jmp	.L98
.L87:
	.stabn	68,0,248,.LM200-.LFBB16
.LM200:
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$.LC3, 8(%esp)
	movl	$128, 4(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	snprintf
	.stabn	68,0,249,.LM201-.LFBB16
.LM201:
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	Panic
	.stabn	68,0,251,.LM202-.LFBB16
.LM202:
	jmp	.L98
.L122:
	.stabn	68,0,224,.LM203-.LFBB16
.LM203:
	nop
.L98:
	.stabn	68,0,253,.LM204-.LFBB16
.LM204:
	jmp	.L101
.L84:
	.stabn	68,0,255,.LM205-.LFBB16
.LM205:
	cmpl	$11, -16(%ebp)
	ja	.L102
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L109, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L109:
	.long	.L103
	.long	.L103
	.long	.L104
	.long	.L104
	.long	.L105
	.long	.L105
	.long	.L123
	.long	.L123
	.long	.L105
	.long	.L105
	.long	.L107
	.long	.L108
	.text
.L103:
	.stabn	68,0,259,.LM206-.LFBB16
.LM206:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,260,.LM207-.LFBB16
.LM207:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,261,.LM208-.LFBB16
.LM208:
	movl	12(%ebp), %eax
	movb	$37, (%eax)
	addl	$1, 12(%ebp)
.LBB32:
	movl	$255, -228(%ebp)
	movzbl	-228(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-227(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-226(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-225(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE32:
	.stabn	68,0,262,.LM209-.LFBB16
.LM209:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,263,.LM210-.LFBB16
.LM210:
	jmp	.L110
.L104:
	.stabn	68,0,266,.LM211-.LFBB16
.LM211:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,267,.LM212-.LFBB16
.LM212:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,268,.LM213-.LFBB16
.LM213:
	movl	12(%ebp), %eax
	movb	$37, (%eax)
	addl	$1, 12(%ebp)
.LBB33:
	movl	$65535, -236(%ebp)
	movzbl	-236(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-235(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-234(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-233(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE33:
	.stabn	68,0,269,.LM214-.LFBB16
.LM214:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,270,.LM215-.LFBB16
.LM215:
	jmp	.L110
.L105:
	.stabn	68,0,275,.LM216-.LFBB16
.LM216:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,276,.LM217-.LFBB16
.LM217:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,277,.LM218-.LFBB16
.LM218:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,278,.LM219-.LFBB16
.LM219:
	jmp	.L110
.L107:
	.stabn	68,0,282,.LM220-.LFBB16
.LM220:
	movl	12(%ebp), %eax
	movb	$-33, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,283,.LM221-.LFBB16
.LM221:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,284,.LM222-.LFBB16
.LM222:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,285,.LM223-.LFBB16
.LM223:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,286,.LM224-.LFBB16
.LM224:
	jmp	.L110
.L108:
	.stabn	68,0,288,.LM225-.LFBB16
.LM225:
	movl	12(%ebp), %eax
	movb	$-33, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,289,.LM226-.LFBB16
.LM226:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,290,.LM227-.LFBB16
.LM227:
	jmp	.L110
.L102:
	.stabn	68,0,293,.LM228-.LFBB16
.LM228:
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$.LC3, 8(%esp)
	movl	$128, 4(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	snprintf
	.stabn	68,0,294,.LM229-.LFBB16
.LM229:
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	Panic
	.stabn	68,0,296,.LM230-.LFBB16
.LM230:
	jmp	.L110
.L123:
	.stabn	68,0,280,.LM231-.LFBB16
.LM231:
	nop
.L110:
	.stabn	68,0,298,.LM232-.LFBB16
.LM232:
	jmp	.L101
.L85:
	.stabn	68,0,300,.LM233-.LFBB16
.LM233:
	cmpl	$11, -16(%ebp)
	ja	.L111
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L120, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L120:
	.long	.L112
	.long	.L113
	.long	.L114
	.long	.L115
	.long	.L116
	.long	.L116
	.long	.L117
	.long	.L117
	.long	.L116
	.long	.L116
	.long	.L118
	.long	.L124
	.text
.L112:
	.stabn	68,0,303,.LM234-.LFBB16
.LM234:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,304,.LM235-.LFBB16
.LM235:
	movl	12(%ebp), %eax
	movb	$-35, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,305,.LM236-.LFBB16
.LM236:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,306,.LM237-.LFBB16
.LM237:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,307,.LM238-.LFBB16
.LM238:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
.LBB34:
	.stabn	68,0,308,.LM239-.LFBB16
.LM239:
	movb	$-74, -25(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$8, -25(%ebp)
	movzbl	-25(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE34:
	.stabn	68,0,309,.LM240-.LFBB16
.LM240:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,310,.LM241-.LFBB16
.LM241:
	jmp	.L121
.L113:
	.stabn	68,0,312,.LM242-.LFBB16
.LM242:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,313,.LM243-.LFBB16
.LM243:
	movl	12(%ebp), %eax
	movb	$-35, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,314,.LM244-.LFBB16
.LM244:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,315,.LM245-.LFBB16
.LM245:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,316,.LM246-.LFBB16
.LM246:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
.LBB35:
	.stabn	68,0,317,.LM247-.LFBB16
.LM247:
	movb	$-74, -26(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-26(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE35:
	.stabn	68,0,318,.LM248-.LFBB16
.LM248:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,319,.LM249-.LFBB16
.LM249:
	jmp	.L121
.L114:
	.stabn	68,0,321,.LM250-.LFBB16
.LM250:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,322,.LM251-.LFBB16
.LM251:
	movl	12(%ebp), %eax
	movb	$-35, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,323,.LM252-.LFBB16
.LM252:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,324,.LM253-.LFBB16
.LM253:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,325,.LM254-.LFBB16
.LM254:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
.LBB36:
	.stabn	68,0,326,.LM255-.LFBB16
.LM255:
	movb	$-74, -27(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$8, -27(%ebp)
	addb	$1, -27(%ebp)
	movzbl	-27(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE36:
	.stabn	68,0,327,.LM256-.LFBB16
.LM256:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,328,.LM257-.LFBB16
.LM257:
	jmp	.L121
.L115:
	.stabn	68,0,330,.LM258-.LFBB16
.LM258:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,331,.LM259-.LFBB16
.LM259:
	movl	12(%ebp), %eax
	movb	$-35, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,332,.LM260-.LFBB16
.LM260:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,333,.LM261-.LFBB16
.LM261:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,334,.LM262-.LFBB16
.LM262:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
.LBB37:
	.stabn	68,0,335,.LM263-.LFBB16
.LM263:
	movb	$-74, -28(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	addb	$1, -28(%ebp)
	movzbl	-28(%ebp), %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBE37:
	.stabn	68,0,336,.LM264-.LFBB16
.LM264:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,337,.LM265-.LFBB16
.LM265:
	jmp	.L121
.L116:
	.stabn	68,0,342,.LM266-.LFBB16
.LM266:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,343,.LM267-.LFBB16
.LM267:
	movl	12(%ebp), %eax
	movb	$-35, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,344,.LM268-.LFBB16
.LM268:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,345,.LM269-.LFBB16
.LM269:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,346,.LM270-.LFBB16
.LM270:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,347,.LM271-.LFBB16
.LM271:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,348,.LM272-.LFBB16
.LM272:
	jmp	.L121
.L117:
	.stabn	68,0,351,.LM273-.LFBB16
.LM273:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,352,.LM274-.LFBB16
.LM274:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,353,.LM275-.LFBB16
.LM275:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,354,.LM276-.LFBB16
.LM276:
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB38:
	movl	$3072, -492(%ebp)
	movzbl	-492(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-491(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-490(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-489(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE38:
	.stabn	68,0,355,.LM277-.LFBB16
.LM277:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$68, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$2, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,356,.LM278-.LFBB16
.LM278:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$108, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$2, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,357,.LM279-.LFBB16
.LM279:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,358,.LM280-.LFBB16
.LM280:
	movl	12(%ebp), %eax
	movb	$-33, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,359,.LM281-.LFBB16
.LM281:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,360,.LM282-.LFBB16
.LM282:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,361,.LM283-.LFBB16
.LM283:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$44, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,362,.LM284-.LFBB16
.LM284:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,363,.LM285-.LFBB16
.LM285:
	movl	12(%ebp), %eax
	movb	$83, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,364,.LM286-.LFBB16
.LM286:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,365,.LM287-.LFBB16
.LM287:
	jmp	.L121
.L118:
	.stabn	68,0,367,.LM288-.LFBB16
.LM288:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-20, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,368,.LM289-.LFBB16
.LM289:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$28, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,369,.LM290-.LFBB16
.LM290:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,370,.LM291-.LFBB16
.LM291:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,371,.LM292-.LFBB16
.LM292:
	jmp	.L121
.L111:
	.stabn	68,0,375,.LM293-.LFBB16
.LM293:
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$.LC3, 8(%esp)
	movl	$128, 4(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	snprintf
	.stabn	68,0,376,.LM294-.LFBB16
.LM294:
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	Panic
	.stabn	68,0,378,.LM295-.LFBB16
.LM295:
	jmp	.L121
.L124:
	.stabn	68,0,372,.LM296-.LFBB16
.LM296:
	nop
.L121:
	.stabn	68,0,380,.LM297-.LFBB16
.LM297:
	jmp	.L101
.L82:
	.stabn	68,0,383,.LM298-.LFBB16
.LM298:
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$.LC3, 8(%esp)
	movl	$128, 4(%esp)
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	snprintf
	.stabn	68,0,384,.LM299-.LFBB16
.LM299:
	leal	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	Panic
	.stabn	68,0,386,.LM300-.LFBB16
.LM300:
	nop
.L101:
	.stabn	68,0,388,.LM301-.LFBB16
.LM301:
	movl	12(%ebp), %eax
	.stabn	68,0,389,.LM302-.LFBB16
.LM302:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE15:
	.size	JIT_Compile_Convert_Unchecked, .-JIT_Compile_Convert_Unchecked
	.stabs	"buf:(0,20)=ar(5,12);0;127;(0,2)",128,0,192,-156
	.stabs	"fromType:(57,6)",128,0,193,-12
	.stabs	"toType:(57,6)",128,0,194,-16
	.stabn	192,0,0,.LFBB16-.LFBB16
	.stabs	"op:(0,11)",128,0,203,-17
	.stabn	192,0,0,.LBB26-.LFBB16
	.stabn	224,0,0,.LBE26-.LFBB16
	.stabs	"op:(0,11)",128,0,208,-18
	.stabn	192,0,0,.LBB27-.LFBB16
	.stabn	224,0,0,.LBE27-.LFBB16
	.stabs	"op:(0,11)",128,0,213,-19
	.stabn	192,0,0,.LBB28-.LFBB16
	.stabn	224,0,0,.LBE28-.LFBB16
	.stabs	"op:(0,11)",128,0,218,-20
	.stabn	192,0,0,.LBB29-.LFBB16
	.stabn	224,0,0,.LBE29-.LFBB16
	.stabs	"_imm:(0,1)",128,0,233,-24
	.stabn	192,0,0,.LBB30-.LFBB16
	.stabs	"imb:(11,17)",128,0,233,-160
	.stabn	192,0,0,.LBB31-.LFBB16
	.stabn	224,0,0,.LBE31-.LFBB16
	.stabn	224,0,0,.LBE30-.LFBB16
	.stabs	"imb:(11,17)",128,0,261,-228
	.stabn	192,0,0,.LBB32-.LFBB16
	.stabn	224,0,0,.LBE32-.LFBB16
	.stabs	"imb:(11,17)",128,0,268,-236
	.stabn	192,0,0,.LBB33-.LFBB16
	.stabn	224,0,0,.LBE33-.LFBB16
	.stabs	"op:(0,11)",128,0,308,-25
	.stabn	192,0,0,.LBB34-.LFBB16
	.stabn	224,0,0,.LBE34-.LFBB16
	.stabs	"op:(0,11)",128,0,317,-26
	.stabn	192,0,0,.LBB35-.LFBB16
	.stabn	224,0,0,.LBE35-.LFBB16
	.stabs	"op:(0,11)",128,0,326,-27
	.stabn	192,0,0,.LBB36-.LFBB16
	.stabn	224,0,0,.LBE36-.LFBB16
	.stabs	"op:(0,11)",128,0,335,-28
	.stabn	192,0,0,.LBB37-.LFBB16
	.stabn	224,0,0,.LBE37-.LFBB16
	.stabs	"imb:(11,17)",128,0,354,-492
	.stabn	192,0,0,.LBB38-.LFBB16
	.stabn	224,0,0,.LBE38-.LFBB16
	.stabn	224,0,0,.Lscope16-.LFBB16
.Lscope16:
	.stabs	"",36,0,0,.Lscope16-.LFBB16
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_Parameter:F(2,13)",36,0,392,JIT_Compile_Load_Parameter
	.stabs	"instr:p(13,27)",160,0,392,8
	.stabs	"compMethod:p(2,13)",160,0,392,12
	.stabs	"mth:p(13,18)",160,0,392,16
	.globl	JIT_Compile_Load_Parameter
	.type	JIT_Compile_Load_Parameter, @function
JIT_Compile_Load_Parameter:
	.stabd	46,0,0
	.stabn	68,0,393,.LM303-.LFBB17
.LM303:
.LFBB17:
.LFB16:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.stabn	68,0,394,.LM304-.LFBB17
.LM304:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.stabn	68,0,395,.LM305-.LFBB17
.LM305:
	movl	global_SizeOfPointerInBytes, %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,396,.LM306-.LFBB17
.LM306:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	testb	%al, %al
	je	.L126
	.stabn	68,0,397,.LM307-.LFBB17
.LM307:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	34(%eax), %eax
	movl	%eax, -12(%ebp)
.L126:
	.stabn	68,0,398,.LM308-.LFBB17
.LM308:
	movl	global_SizeOfPointerInBytes, %edx
	movl	%edx, -44(%ebp)
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	-44(%ebp)
	movl	%eax, -16(%ebp)
	.stabn	68,0,399,.LM309-.LFBB17
.LM309:
	movl	global_SizeOfPointerInBytes, %ecx
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	%ecx
	movl	%edx, %eax
	testl	%eax, %eax
	je	.L127
	.stabn	68,0,399,.LM310-.LFBB17
.LM310:
	addl	$1, -16(%ebp)
.L127:
.LBB39:
	.stabn	68,0,400,.LM311-.LFBB17
.LM311:
	movl	$0, -20(%ebp)
	jmp	.L128
.L136:
	.stabn	68,0,402,.LM312-.LFBB17
.LM312:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L131
	cmpl	$4, %eax
	je	.L132
	cmpl	$1, %eax
	jne	.L137
.L130:
	.stabn	68,0,402,.LM313-.LFBB17
.LM313:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L133
.L131:
	.stabn	68,0,402,.LM314-.LFBB17
.LM314:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L132:
	.stabn	68,0,402,.LM315-.LFBB17
.LM315:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L133
.L137:
	.stabn	68,0,402,.LM316-.LFBB17
.LM316:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4242, 8(%esp)
	movl	$402, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L133:
	.stabn	68,0,402,.LM317-.LFBB17
.LM317:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	cmpl	$-128, %eax
	jl	.L134
	.stabn	68,0,402,.LM318-.LFBB17
.LM318:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	cmpl	$127, %eax
	jg	.L134
	.stabn	68,0,402,.LM319-.LFBB17
.LM319:
	movl	12(%ebp), %eax
	movb	$69, (%eax)
	addl	$1, 12(%ebp)
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L135
.L134:
	.stabn	68,0,402,.LM320-.LFBB17
.LM320:
	movl	12(%ebp), %eax
	movb	$-123, (%eax)
	addl	$1, 12(%ebp)
.LBB40:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L135:
.LBE40:
	.stabn	68,0,403,.LM321-.LFBB17
.LM321:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,400,.LM322-.LFBB17
.LM322:
	addl	$1, -20(%ebp)
.L128:
	.stabn	68,0,400,.LM323-.LFBB17
.LM323:
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L136
.LBE39:
	.stabn	68,0,405,.LM324-.LFBB17
.LM324:
	movl	12(%ebp), %eax
	.stabn	68,0,406,.LM325-.LFBB17
.LM325:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE16:
	.size	JIT_Compile_Load_Parameter, .-JIT_Compile_Load_Parameter
	.stabs	"paramIndex:(10,10)",128,0,394,-24
	.stabs	"size:(10,10)",128,0,395,-12
	.stabs	"movCount:(10,10)",128,0,398,-16
	.stabs	"__func__:V(0,17)",38,0,402,__func__.4242
	.stabn	192,0,0,.LFBB17-.LFBB17
	.stabs	"movIndex:(10,10)",128,0,400,-20
	.stabn	192,0,0,.LBB39-.LFBB17
	.stabs	"imb:(11,17)",128,0,402,-32
	.stabn	192,0,0,.LBB40-.LFBB17
	.stabn	224,0,0,.LBE40-.LFBB17
	.stabn	224,0,0,.LBE39-.LFBB17
	.stabn	224,0,0,.Lscope17-.LFBB17
.Lscope17:
	.stabs	"",36,0,0,.Lscope17-.LFBB17
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_Parameter_Address:F(2,13)",36,0,409,JIT_Compile_Load_Parameter_Address
	.stabs	"instr:p(13,27)",160,0,409,8
	.stabs	"compMethod:p(2,13)",160,0,409,12
	.stabs	"mth:p(13,18)",160,0,409,16
	.globl	JIT_Compile_Load_Parameter_Address
	.type	JIT_Compile_Load_Parameter_Address, @function
JIT_Compile_Load_Parameter_Address:
	.stabd	46,0,0
	.stabn	68,0,410,.LM326-.LFBB18
.LM326:
.LFBB18:
.LFB17:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,411,.LM327-.LFBB18
.LM327:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,412,.LM328-.LFBB18
.LM328:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L141
	cmpl	$4, %eax
	je	.L142
	cmpl	$1, %eax
	jne	.L144
.L140:
	.stabn	68,0,412,.LM329-.LFBB18
.LM329:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L143
.L141:
	.stabn	68,0,412,.LM330-.LFBB18
.LM330:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L142:
	.stabn	68,0,412,.LM331-.LFBB18
.LM331:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L143
.L144:
	.stabn	68,0,412,.LM332-.LFBB18
.LM332:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4260, 8(%esp)
	movl	$412, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L143:
	.stabn	68,0,412,.LM333-.LFBB18
.LM333:
	movl	12(%ebp), %eax
	movb	$-59, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,413,.LM334-.LFBB18
.LM334:
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB41:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-12(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %eax
	negl	%eax
	movl	%eax, -16(%ebp)
	movzbl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-15(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-14(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-13(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE41:
	.stabn	68,0,414,.LM335-.LFBB18
.LM335:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,415,.LM336-.LFBB18
.LM336:
	movl	12(%ebp), %eax
	.stabn	68,0,416,.LM337-.LFBB18
.LM337:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE17:
	.size	JIT_Compile_Load_Parameter_Address, .-JIT_Compile_Load_Parameter_Address
	.stabs	"paramIndex:(10,10)",128,0,411,-12
	.stabs	"__func__:V(0,21)=ar(5,12);0;34;(18,2)",38,0,412,__func__.4260
	.stabn	192,0,0,.LFBB18-.LFBB18
	.stabs	"imb:(11,17)",128,0,413,-16
	.stabn	192,0,0,.LBB41-.LFBB18
	.stabn	224,0,0,.LBE41-.LFBB18
	.stabn	224,0,0,.Lscope18-.LFBB18
.Lscope18:
	.stabs	"",36,0,0,.Lscope18-.LFBB18
	.stabd	78,0,0
	.stabs	"JIT_Compile_Store_Parameter:F(2,13)",36,0,419,JIT_Compile_Store_Parameter
	.stabs	"instr:p(13,27)",160,0,419,8
	.stabs	"compMethod:p(2,13)",160,0,419,12
	.stabs	"mth:p(13,18)",160,0,419,16
	.globl	JIT_Compile_Store_Parameter
	.type	JIT_Compile_Store_Parameter, @function
JIT_Compile_Store_Parameter:
	.stabd	46,0,0
	.stabn	68,0,420,.LM338-.LFBB19
.LM338:
.LFBB19:
.LFB18:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$72, %esp
	.stabn	68,0,421,.LM339-.LFBB19
.LM339:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.stabn	68,0,422,.LM340-.LFBB19
.LM340:
	movl	global_SizeOfPointerInBytes, %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,423,.LM341-.LFBB19
.LM341:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	testb	%al, %al
	je	.L146
	.stabn	68,0,424,.LM342-.LFBB19
.LM342:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	34(%eax), %eax
	movl	%eax, -12(%ebp)
.L146:
	.stabn	68,0,425,.LM343-.LFBB19
.LM343:
	movl	global_SizeOfPointerInBytes, %edx
	movl	%edx, -44(%ebp)
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	-44(%ebp)
	movl	%eax, -16(%ebp)
	.stabn	68,0,426,.LM344-.LFBB19
.LM344:
	movl	global_SizeOfPointerInBytes, %ecx
	movl	-12(%ebp), %eax
	movl	$0, %edx
	divl	%ecx
	movl	%edx, %eax
	testl	%eax, %eax
	je	.L147
	.stabn	68,0,426,.LM345-.LFBB19
.LM345:
	addl	$1, -16(%ebp)
.L147:
.LBB42:
	.stabn	68,0,427,.LM346-.LFBB19
.LM346:
	movl	$0, -20(%ebp)
	jmp	.L148
.L156:
	.stabn	68,0,429,.LM347-.LFBB19
.LM347:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,430,.LM348-.LFBB19
.LM348:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L151
	cmpl	$4, %eax
	je	.L152
	cmpl	$1, %eax
	jne	.L157
.L150:
	.stabn	68,0,430,.LM349-.LFBB19
.LM349:
	movl	12(%ebp), %eax
	movb	$-120, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L153
.L151:
	.stabn	68,0,430,.LM350-.LFBB19
.LM350:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L152:
	.stabn	68,0,430,.LM351-.LFBB19
.LM351:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L153
.L157:
	.stabn	68,0,430,.LM352-.LFBB19
.LM352:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4278, 8(%esp)
	movl	$430, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L153:
	.stabn	68,0,430,.LM353-.LFBB19
.LM353:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	cmpl	$-128, %eax
	jl	.L154
	.stabn	68,0,430,.LM354-.LFBB19
.LM354:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	cmpl	$127, %eax
	jg	.L154
	.stabn	68,0,430,.LM355-.LFBB19
.LM355:
	movl	12(%ebp), %eax
	movb	$69, (%eax)
	addl	$1, 12(%ebp)
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L155
.L154:
	.stabn	68,0,430,.LM356-.LFBB19
.LM356:
	movl	12(%ebp), %eax
	movb	$-123, (%eax)
	addl	$1, 12(%ebp)
.LBB43:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	-24(%ebp), %edx
	sall	$2, %edx
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	global_SizeOfPointerInBytes, %eax
	imull	-20(%ebp), %eax
	addl	%edx, %eax
	negl	%eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L155:
.LBE43:
	.stabn	68,0,427,.LM357-.LFBB19
.LM357:
	addl	$1, -20(%ebp)
.L148:
	.stabn	68,0,427,.LM358-.LFBB19
.LM358:
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L156
.LBE42:
	.stabn	68,0,432,.LM359-.LFBB19
.LM359:
	movl	12(%ebp), %eax
	.stabn	68,0,433,.LM360-.LFBB19
.LM360:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE18:
	.size	JIT_Compile_Store_Parameter, .-JIT_Compile_Store_Parameter
	.stabs	"paramIndex:(10,10)",128,0,421,-24
	.stabs	"size:(10,10)",128,0,422,-12
	.stabs	"movCount:(10,10)",128,0,425,-16
	.stabs	"__func__:V(0,22)=ar(5,12);0;27;(18,2)",38,0,430,__func__.4278
	.stabn	192,0,0,.LFBB19-.LFBB19
	.stabs	"movIndex:(10,10)",128,0,427,-20
	.stabn	192,0,0,.LBB42-.LFBB19
	.stabs	"imb:(11,17)",128,0,430,-32
	.stabn	192,0,0,.LBB43-.LFBB19
	.stabn	224,0,0,.LBE43-.LFBB19
	.stabn	224,0,0,.LBE42-.LFBB19
	.stabn	224,0,0,.Lscope19-.LFBB19
.Lscope19:
	.stabs	"",36,0,0,.Lscope19-.LFBB19
	.stabd	78,0,0
	.section	.rodata
	.align 4
.LC4:
	.string	"Unknown ElementType to GetSizeOfElementType"
	.text
	.stabs	"JIT_Compile_Load_Element:F(2,13)",36,0,436,JIT_Compile_Load_Element
	.stabs	"instr:p(13,27)",160,0,436,8
	.stabs	"compMethod:p(2,13)",160,0,436,12
	.stabs	"mth:p(13,18)",160,0,436,16
	.globl	JIT_Compile_Load_Element
	.type	JIT_Compile_Load_Element, @function
JIT_Compile_Load_Element:
	.stabd	46,0,0
	.stabn	68,0,437,.LM361-.LFBB20
.LM361:
.LFBB20:
.LFB19:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.stabn	68,0,438,.LM362-.LFBB20
.LM362:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,440,.LM363-.LFBB20
.LM363:
	movl	$0, -12(%ebp)
	.stabn	68,0,441,.LM364-.LFBB20
.LM364:
	cmpl	$14, -16(%ebp)
	ja	.L159
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L164, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L164:
	.long	.L160
	.long	.L161
	.long	.L162
	.long	.L160
	.long	.L163
	.long	.L160
	.long	.L161
	.long	.L162
	.long	.L160
	.long	.L163
	.long	.L160
	.long	.L163
	.long	.L160
	.long	.L159
	.long	.L160
	.text
.L161:
	.stabn	68,0,441,.LM365-.LFBB20
.LM365:
	movl	$1, -12(%ebp)
	jmp	.L165
.L162:
	.stabn	68,0,441,.LM366-.LFBB20
.LM366:
	movl	$2, -12(%ebp)
	jmp	.L165
.L160:
	.stabn	68,0,441,.LM367-.LFBB20
.LM367:
	movl	$4, -12(%ebp)
	jmp	.L165
.L163:
	.stabn	68,0,441,.LM368-.LFBB20
.LM368:
	movl	$8, -12(%ebp)
	jmp	.L165
.L159:
	.stabn	68,0,441,.LM369-.LFBB20
.LM369:
	movl	$.LC4, (%esp)
	call	Panic
.L165:
	.stabn	68,0,443,.LM370-.LFBB20
.LM370:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,444,.LM371-.LFBB20
.LM371:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,445,.LM372-.LFBB20
.LM372:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L168
	cmpl	$4, %eax
	je	.L169
	cmpl	$1, %eax
	jne	.L178
.L167:
	.stabn	68,0,445,.LM373-.LFBB20
.LM373:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L170
.L168:
	.stabn	68,0,445,.LM374-.LFBB20
.LM374:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L169:
	.stabn	68,0,445,.LM375-.LFBB20
.LM375:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L170
.L178:
	.stabn	68,0,445,.LM376-.LFBB20
.LM376:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4313, 8(%esp)
	movl	$445, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L170:
	.stabn	68,0,445,.LM377-.LFBB20
.LM377:
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB44:
	movl	$1, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE44:
	.stabn	68,0,446,.LM378-.LFBB20
.LM378:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-63, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,447,.LM379-.LFBB20
.LM379:
	movl	-12(%ebp), %eax
	cmpl	$-128, %eax
	jl	.L171
	.stabn	68,0,447,.LM380-.LFBB20
.LM380:
	movl	-12(%ebp), %eax
	cmpl	$127, %eax
	jg	.L171
	.stabn	68,0,447,.LM381-.LFBB20
.LM381:
	movl	12(%ebp), %eax
	movb	$107, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L172
.L171:
	.stabn	68,0,447,.LM382-.LFBB20
.LM382:
	movl	12(%ebp), %eax
	movb	$105, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBB45:
	movl	-12(%ebp), %eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L172:
.LBE45:
	.stabn	68,0,448,.LM383-.LFBB20
.LM383:
	movl	12(%ebp), %eax
	movb	$3, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,449,.LM384-.LFBB20
.LM384:
	movl	-12(%ebp), %eax
	cmpl	$2, %eax
	je	.L175
	cmpl	$4, %eax
	je	.L176
	cmpl	$1, %eax
	jne	.L179
.L174:
	.stabn	68,0,449,.LM385-.LFBB20
.LM385:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L177
.L175:
	.stabn	68,0,449,.LM386-.LFBB20
.LM386:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L176:
	.stabn	68,0,449,.LM387-.LFBB20
.LM387:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L177
.L179:
	.stabn	68,0,449,.LM388-.LFBB20
.LM388:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4313, 8(%esp)
	movl	$449, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L177:
	.stabn	68,0,449,.LM389-.LFBB20
.LM389:
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB46:
	movl	$1, -36(%ebp)
	movzbl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-35(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-34(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-33(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE46:
	.stabn	68,0,450,.LM390-.LFBB20
.LM390:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,451,.LM391-.LFBB20
.LM391:
	movl	12(%ebp), %eax
	.stabn	68,0,452,.LM392-.LFBB20
.LM392:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE19:
	.size	JIT_Compile_Load_Element, .-JIT_Compile_Load_Element
	.stabs	"elementType:(57,10)",128,0,438,-16
	.stabs	"sizeOfElementType:(10,10)",128,0,440,-12
	.stabs	"__func__:V(0,23)=ar(5,12);0;24;(18,2)",38,0,445,__func__.4313
	.stabn	192,0,0,.LFBB20-.LFBB20
	.stabs	"imb:(11,17)",128,0,445,-20
	.stabn	192,0,0,.LBB44-.LFBB20
	.stabn	224,0,0,.LBE44-.LFBB20
	.stabs	"imb:(11,17)",128,0,447,-32
	.stabn	192,0,0,.LBB45-.LFBB20
	.stabn	224,0,0,.LBE45-.LFBB20
	.stabs	"imb:(11,17)",128,0,449,-36
	.stabn	192,0,0,.LBB46-.LFBB20
	.stabn	224,0,0,.LBE46-.LFBB20
	.stabn	224,0,0,.Lscope20-.LFBB20
.Lscope20:
	.stabs	"",36,0,0,.Lscope20-.LFBB20
	.stabd	78,0,0
	.stabs	"JIT_Compile_Store_Element:F(2,13)",36,0,455,JIT_Compile_Store_Element
	.stabs	"instr:p(13,27)",160,0,455,8
	.stabs	"compMethod:p(2,13)",160,0,455,12
	.stabs	"mth:p(13,18)",160,0,455,16
	.globl	JIT_Compile_Store_Element
	.type	JIT_Compile_Store_Element, @function
JIT_Compile_Store_Element:
	.stabd	46,0,0
	.stabn	68,0,456,.LM393-.LFBB21
.LM393:
.LFBB21:
.LFB20:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.stabn	68,0,457,.LM394-.LFBB21
.LM394:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,459,.LM395-.LFBB21
.LM395:
	movl	$0, -12(%ebp)
	.stabn	68,0,460,.LM396-.LFBB21
.LM396:
	cmpl	$14, -16(%ebp)
	ja	.L181
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L186, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L186:
	.long	.L182
	.long	.L183
	.long	.L184
	.long	.L182
	.long	.L185
	.long	.L182
	.long	.L183
	.long	.L184
	.long	.L182
	.long	.L185
	.long	.L182
	.long	.L185
	.long	.L182
	.long	.L181
	.long	.L182
	.text
.L183:
	.stabn	68,0,460,.LM397-.LFBB21
.LM397:
	movl	$1, -12(%ebp)
	jmp	.L187
.L184:
	.stabn	68,0,460,.LM398-.LFBB21
.LM398:
	movl	$2, -12(%ebp)
	jmp	.L187
.L182:
	.stabn	68,0,460,.LM399-.LFBB21
.LM399:
	movl	$4, -12(%ebp)
	jmp	.L187
.L185:
	.stabn	68,0,460,.LM400-.LFBB21
.LM400:
	movl	$8, -12(%ebp)
	jmp	.L187
.L181:
	.stabn	68,0,460,.LM401-.LFBB21
.LM401:
	movl	$.LC4, (%esp)
	call	Panic
.L187:
	.stabn	68,0,462,.LM402-.LFBB21
.LM402:
	movl	12(%ebp), %eax
	movb	$90, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,463,.LM403-.LFBB21
.LM403:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,464,.LM404-.LFBB21
.LM404:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,465,.LM405-.LFBB21
.LM405:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L190
	cmpl	$4, %eax
	je	.L191
	cmpl	$1, %eax
	jne	.L200
.L189:
	.stabn	68,0,465,.LM406-.LFBB21
.LM406:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L192
.L190:
	.stabn	68,0,465,.LM407-.LFBB21
.LM407:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L191:
	.stabn	68,0,465,.LM408-.LFBB21
.LM408:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L192
.L200:
	.stabn	68,0,465,.LM409-.LFBB21
.LM409:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4353, 8(%esp)
	movl	$465, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L192:
	.stabn	68,0,465,.LM410-.LFBB21
.LM410:
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB47:
	movl	$1, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE47:
	.stabn	68,0,466,.LM411-.LFBB21
.LM411:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-63, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$16, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,467,.LM412-.LFBB21
.LM412:
	movl	-12(%ebp), %eax
	cmpl	$-128, %eax
	jl	.L193
	.stabn	68,0,467,.LM413-.LFBB21
.LM413:
	movl	-12(%ebp), %eax
	cmpl	$127, %eax
	jg	.L193
	.stabn	68,0,467,.LM414-.LFBB21
.LM414:
	movl	12(%ebp), %eax
	movb	$107, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L194
.L193:
	.stabn	68,0,467,.LM415-.LFBB21
.LM415:
	movl	12(%ebp), %eax
	movb	$105, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
.LBB48:
	movl	-12(%ebp), %eax
	movl	%eax, -32(%ebp)
	movzbl	-32(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-31(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-30(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-29(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L194:
.LBE48:
	.stabn	68,0,468,.LM416-.LFBB21
.LM416:
	movl	12(%ebp), %eax
	movb	$3, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,469,.LM417-.LFBB21
.LM417:
	movl	-12(%ebp), %eax
	cmpl	$2, %eax
	je	.L197
	cmpl	$4, %eax
	je	.L198
	cmpl	$1, %eax
	jne	.L201
.L196:
	.stabn	68,0,469,.LM418-.LFBB21
.LM418:
	movl	12(%ebp), %eax
	movb	$-120, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L199
.L197:
	.stabn	68,0,469,.LM419-.LFBB21
.LM419:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L198:
	.stabn	68,0,469,.LM420-.LFBB21
.LM420:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L199
.L201:
	.stabn	68,0,469,.LM421-.LFBB21
.LM421:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4353, 8(%esp)
	movl	$469, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L199:
	.stabn	68,0,469,.LM422-.LFBB21
.LM422:
	movl	12(%ebp), %eax
	movb	$21, (%eax)
	addl	$1, 12(%ebp)
.LBB49:
	movl	$1, -36(%ebp)
	movzbl	-36(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-35(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-34(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-33(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE49:
	.stabn	68,0,470,.LM423-.LFBB21
.LM423:
	movl	12(%ebp), %eax
	.stabn	68,0,471,.LM424-.LFBB21
.LM424:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE20:
	.size	JIT_Compile_Store_Element, .-JIT_Compile_Store_Element
	.stabs	"elementType:(57,10)",128,0,457,-16
	.stabs	"sizeOfElementType:(10,10)",128,0,459,-12
	.stabs	"__func__:V(0,18)",38,0,465,__func__.4353
	.stabn	192,0,0,.LFBB21-.LFBB21
	.stabs	"imb:(11,17)",128,0,465,-20
	.stabn	192,0,0,.LBB47-.LFBB21
	.stabn	224,0,0,.LBE47-.LFBB21
	.stabs	"imb:(11,17)",128,0,467,-32
	.stabn	192,0,0,.LBB48-.LFBB21
	.stabn	224,0,0,.LBE48-.LFBB21
	.stabs	"imb:(11,17)",128,0,469,-36
	.stabn	192,0,0,.LBB49-.LFBB21
	.stabn	224,0,0,.LBE49-.LFBB21
	.stabn	224,0,0,.Lscope21-.LFBB21
.Lscope21:
	.stabs	"",36,0,0,.Lscope21-.LFBB21
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_Array_Length:F(2,13)",36,0,474,JIT_Compile_Load_Array_Length
	.stabs	"instr:p(13,27)",160,0,474,8
	.stabs	"compMethod:p(2,13)",160,0,474,12
	.stabs	"mth:p(13,18)",160,0,474,16
	.globl	JIT_Compile_Load_Array_Length
	.type	JIT_Compile_Load_Array_Length, @function
JIT_Compile_Load_Array_Length:
	.stabd	46,0,0
	.stabn	68,0,475,.LM425-.LFBB22
.LM425:
.LFBB22:
.LFB21:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,476,.LM426-.LFBB22
.LM426:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,477,.LM427-.LFBB22
.LM427:
	movl	global_SizeOfPointerInBytes, %eax
	cmpl	$2, %eax
	je	.L205
	cmpl	$4, %eax
	je	.L206
	cmpl	$1, %eax
	jne	.L208
.L204:
	.stabn	68,0,477,.LM428-.LFBB22
.LM428:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L207
.L205:
	.stabn	68,0,477,.LM429-.LFBB22
.LM429:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L206:
	.stabn	68,0,477,.LM430-.LFBB22
.LM430:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L207
.L208:
	.stabn	68,0,477,.LM431-.LFBB22
.LM431:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4375, 8(%esp)
	movl	$477, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L207:
	.stabn	68,0,477,.LM432-.LFBB22
.LM432:
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB50:
	movl	$1, -12(%ebp)
	movzbl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-11(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-10(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-9(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE50:
	.stabn	68,0,478,.LM433-.LFBB22
.LM433:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB51:
	movl	$1, -16(%ebp)
	movzbl	-16(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-15(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-14(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-13(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE51:
	.stabn	68,0,479,.LM434-.LFBB22
.LM434:
	movl	12(%ebp), %eax
	movb	$81, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,480,.LM435-.LFBB22
.LM435:
	movl	12(%ebp), %eax
	.stabn	68,0,481,.LM436-.LFBB22
.LM436:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE21:
	.size	JIT_Compile_Load_Array_Length, .-JIT_Compile_Load_Array_Length
	.stabs	"__func__:V(0,24)=ar(5,12);0;29;(18,2)",38,0,477,__func__.4375
	.stabn	192,0,0,.LFBB22-.LFBB22
	.stabs	"imb:(11,17)",128,0,477,-12
	.stabn	192,0,0,.LBB50-.LFBB22
	.stabn	224,0,0,.LBE50-.LFBB22
	.stabs	"imb:(11,17)",128,0,478,-16
	.stabn	192,0,0,.LBB51-.LFBB22
	.stabn	224,0,0,.LBE51-.LFBB22
	.stabn	224,0,0,.Lscope22-.LFBB22
.Lscope22:
	.stabs	"",36,0,0,.Lscope22-.LFBB22
	.stabd	78,0,0
	.section	.rodata
.LC5:
	.string	"Unsupported Element Type!"
	.text
	.stabs	"JIT_Compile_Pop:F(2,13)",36,0,484,JIT_Compile_Pop
	.stabs	"instr:p(13,27)",160,0,484,8
	.stabs	"compMethod:p(2,13)",160,0,484,12
	.stabs	"mth:p(13,18)",160,0,484,16
	.globl	JIT_Compile_Pop
	.type	JIT_Compile_Pop, @function
JIT_Compile_Pop:
	.stabd	46,0,0
	.stabn	68,0,485,.LM437-.LFBB23
.LM437:
.LFBB23:
.LFB22:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	pushl	%ebx
	subl	$52, %esp
	.stabn	68,0,486,.LM438-.LFBB23
.LM438:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	cmpl	$14, %eax
	ja	.L210
	.cfi_offset 3, -12
	movl	$1, %edx
	movl	%edx, %ebx
	movl	%eax, %ecx
	sall	%cl, %ebx
	movl	%ebx, %eax
	movl	%eax, %edx
	andl	$21999, %edx
	testl	%edx, %edx
	jne	.L211
	movl	%eax, %edx
	andl	$2576, %edx
	testl	%edx, %edx
	jne	.L212
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L213
	jmp	.L210
.L211:
	.stabn	68,0,499,.LM439-.LFBB23
.LM439:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,500,.LM440-.LFBB23
.LM440:
	jmp	.L214
.L212:
	.stabn	68,0,504,.LM441-.LFBB23
.LM441:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,505,.LM442-.LFBB23
.LM442:
	jmp	.L214
.L213:
.LBB52:
	.stabn	68,0,508,.LM443-.LFBB23
.LM443:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	34(%eax), %eax
	shrl	$2, %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,509,.LM444-.LFBB23
.LM444:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	34(%eax), %eax
	andl	$3, %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,510,.LM445-.LFBB23
.LM445:
	cmpl	$0, -16(%ebp)
	je	.L215
	.stabn	68,0,512,.LM446-.LFBB23
.LM446:
	addl	$1, -12(%ebp)
.L215:
	.stabn	68,0,517,.LM447-.LFBB23
.LM447:
	movl	-12(%ebp), %eax
	cmpl	$-128, %eax
	jl	.L216
	.stabn	68,0,517,.LM448-.LFBB23
.LM448:
	movl	-12(%ebp), %eax
	cmpl	$127, %eax
	jg	.L216
	.stabn	68,0,517,.LM449-.LFBB23
.LM449:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE52:
	.stabn	68,0,519,.LM450-.LFBB23
.LM450:
	jmp	.L214
.L216:
.LBB54:
	.stabn	68,0,517,.LM451-.LFBB23
.LM451:
	movl	12(%ebp), %eax
	movb	$-127, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-60, (%eax)
	addl	$1, 12(%ebp)
.LBB53:
	movl	-12(%ebp), %eax
	movl	%eax, -40(%ebp)
	movzbl	-40(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-39(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-38(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-37(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE53:
.LBE54:
	.stabn	68,0,519,.LM452-.LFBB23
.LM452:
	jmp	.L214
.L210:
	.stabn	68,0,521,.LM453-.LFBB23
.LM453:
	movl	$.LC5, (%esp)
	call	Panic
	.stabn	68,0,522,.LM454-.LFBB23
.LM454:
	nop
.L214:
	.stabn	68,0,524,.LM455-.LFBB23
.LM455:
	movl	12(%ebp), %eax
	.stabn	68,0,525,.LM456-.LFBB23
.LM456:
	addl	$52, %esp
	popl	%ebx
	.cfi_restore 3
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE22:
	.size	JIT_Compile_Pop, .-JIT_Compile_Pop
	.stabs	"pCount:(10,10)",128,0,508,-12
	.stabs	"extra:(10,10)",128,0,509,-16
	.stabn	192,0,0,.LBB52-.LFBB23
	.stabs	"imb:(11,17)",128,0,517,-40
	.stabn	192,0,0,.LBB53-.LFBB23
	.stabn	224,0,0,.LBE53-.LFBB23
	.stabn	224,0,0,.LBE52-.LFBB23
	.stabs	"pCount:(10,10)",128,0,508,-12
	.stabs	"extra:(10,10)",128,0,509,-16
	.stabn	192,0,0,.LBB54-.LFBB23
	.stabn	224,0,0,.LBE54-.LFBB23
.Lscope23:
	.stabs	"",36,0,0,.Lscope23-.LFBB23
	.stabd	78,0,0
	.section	.rodata
.LC6:
	.string	"Invalid shifter type"
.LC7:
	.string	"Invalid shifted type"
	.align 4
.LC8:
	.string	"Invalid/Unsupported shift direction"
	.text
	.stabs	"JIT_Compile_Shift:F(2,13)",36,0,528,JIT_Compile_Shift
	.stabs	"instr:p(13,27)",160,0,528,8
	.stabs	"compMethod:p(2,13)",160,0,528,12
	.stabs	"mth:p(13,18)",160,0,528,16
	.globl	JIT_Compile_Shift
	.type	JIT_Compile_Shift, @function
JIT_Compile_Shift:
	.stabd	46,0,0
	.stabn	68,0,529,.LM457-.LFBB24
.LM457:
.LFBB24:
.LFB23:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$248, %esp
	.stabn	68,0,530,.LM458-.LFBB24
.LM458:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.stabn	68,0,531,.LM459-.LFBB24
.LM459:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	.stabn	68,0,532,.LM460-.LFBB24
.LM460:
	movl	8(%ebp), %eax
	movl	19(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	.stabn	68,0,534,.LM461-.LFBB24
.LM461:
	movl	-44(%ebp), %eax
	testl	%eax, %eax
	je	.L220
	cmpl	$2, %eax
	je	.L221
	jmp	.L287
.L220:
	.stabn	68,0,537,.LM462-.LFBB24
.LM462:
	movl	-48(%ebp), %eax
	cmpl	$1, %eax
	je	.L224
	cmpl	$1, %eax
	jb	.L223
	cmpl	$2, %eax
	jne	.L288
.L223:
	.stabn	68,0,541,.LM463-.LFBB24
.LM463:
	movl	-52(%ebp), %eax
	testl	%eax, %eax
	je	.L226
	cmpl	$2, %eax
	jne	.L289
.L226:
	.stabn	68,0,545,.LM464-.LFBB24
.LM464:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,546,.LM465-.LFBB24
.LM465:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,547,.LM466-.LFBB24
.LM466:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,548,.LM467-.LFBB24
.LM467:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,549,.LM468-.LFBB24
.LM468:
	jmp	.L227
.L289:
	.stabn	68,0,550,.LM469-.LFBB24
.LM469:
	movl	$.LC6, (%esp)
	call	Panic
	nop
.L227:
	.stabn	68,0,552,.LM470-.LFBB24
.LM470:
	jmp	.L228
.L224:
	.stabn	68,0,554,.LM471-.LFBB24
.LM471:
	movl	-52(%ebp), %eax
	testl	%eax, %eax
	je	.L230
	cmpl	$2, %eax
	jne	.L290
.L230:
.LBB55:
	.stabn	68,0,559,.LM472-.LFBB24
.LM472:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,560,.LM473-.LFBB24
.LM473:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$68, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,561,.LM474-.LFBB24
.LM474:
	movl	12(%ebp), %eax
	movb	$-9, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$1, (%eax)
	addl	$1, 12(%ebp)
.LBB56:
	movl	$32, -104(%ebp)
	movzbl	-104(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-103(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-102(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-101(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE56:
	.stabn	68,0,562,.LM475-.LFBB24
.LM475:
	movl	12(%ebp), %eax
	movl	%eax, -56(%ebp)
	.stabn	68,0,563,.LM476-.LFBB24
.LM476:
	movzbl	x86_cc_unsigned_map+5, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$0, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,565,.LM477-.LFBB24
.LM477:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,566,.LM478-.LFBB24
.LM478:
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-83, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-37, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,567,.LM479-.LFBB24
.LM479:
	movl	12(%ebp), %eax
	movb	$83, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,568,.LM480-.LFBB24
.LM480:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,569,.LM481-.LFBB24
.LM481:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$68, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,570,.LM482-.LFBB24
.LM482:
	movl	12(%ebp), %eax
	movl	%eax, -60(%ebp)
	.stabn	68,0,571,.LM483-.LFBB24
.LM483:
	movl	12(%ebp), %eax
	movb	$-21, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$0, (%eax)
	addl	$1, 12(%ebp)
.LBB57:
	.stabn	68,0,572,.LM484-.LFBB24
.LM484:
	movl	-56(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -12(%ebp)
	movl	$0, -16(%ebp)
	movl	-56(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	cmpl	$226, %eax
	jg	.L235
	cmpl	$224, %eax
	jge	.L236
	cmpl	$15, %eax
	je	.L232
	cmpl	$15, %eax
	jl	.L231
	subl	$112, %eax
	cmpl	$15, %eax
	ja	.L231
	jmp	.L236
.L235:
	cmpl	$232, %eax
	jl	.L231
	cmpl	$233, %eax
	jle	.L234
	cmpl	$235, %eax
	je	.L236
	jmp	.L231
.L234:
	.stabn	68,0,572,.LM485-.LFBB24
.LM485:
	addl	$1, -16(%ebp)
	jmp	.L236
.L232:
	.stabn	68,0,572,.LM486-.LFBB24
.LM486:
	movl	-12(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$111, %al
	jbe	.L237
	.stabn	68,0,572,.LM487-.LFBB24
.LM487:
	movl	-12(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	jbe	.L238
.L237:
	.stabn	68,0,572,.LM488-.LFBB24
.LM488:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$572, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L238:
	.stabn	68,0,572,.LM489-.LFBB24
.LM489:
	addl	$1, -16(%ebp)
	addl	$1, -12(%ebp)
	jmp	.L236
.L231:
	.stabn	68,0,572,.LM490-.LFBB24
.LM490:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$572, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L236:
	.stabn	68,0,572,.LM491-.LFBB24
.LM491:
	movl	12(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -64(%ebp)
	cmpl	$0, -16(%ebp)
	je	.L239
.LBB58:
	.stabn	68,0,572,.LM492-.LFBB24
.LM492:
	movl	-64(%ebp), %eax
	subl	$4, %eax
	movl	%eax, -116(%ebp)
	movzbl	-116(%ebp), %edx
	movl	-12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -12(%ebp)
	movzbl	-115(%ebp), %edx
	movl	-12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -12(%ebp)
	movzbl	-114(%ebp), %edx
	movl	-12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -12(%ebp)
	movzbl	-113(%ebp), %edx
	movl	-12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -12(%ebp)
	jmp	.L240
.L239:
.LBE58:
	.stabn	68,0,572,.LM493-.LFBB24
.LM493:
	movl	-64(%ebp), %eax
	subl	$1, %eax
	cmpl	$-128, %eax
	jl	.L241
	.stabn	68,0,572,.LM494-.LFBB24
.LM494:
	movl	-64(%ebp), %eax
	subl	$1, %eax
	cmpl	$127, %eax
	jg	.L241
	.stabn	68,0,572,.LM495-.LFBB24
.LM495:
	movl	-64(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -12(%ebp)
	jmp	.L240
.L241:
	.stabn	68,0,572,.LM496-.LFBB24
.LM496:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$572, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L240:
.LBE57:
	.stabn	68,0,574,.LM497-.LFBB24
.LM497:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-31, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$31, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,575,.LM498-.LFBB24
.LM498:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-8, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,576,.LM499-.LFBB24
.LM499:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,577,.LM500-.LFBB24
.LM500:
	movl	12(%ebp), %eax
	movb	$-57, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$68, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
.LBB59:
	movl	$0, -152(%ebp)
	movzbl	-152(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-151(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-150(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-149(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE59:
.LBB60:
	.stabn	68,0,578,.LM501-.LFBB24
.LM501:
	movl	-60(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -20(%ebp)
	movl	$0, -24(%ebp)
	movl	-60(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	cmpl	$226, %eax
	jg	.L246
	cmpl	$224, %eax
	jge	.L247
	cmpl	$15, %eax
	je	.L243
	cmpl	$15, %eax
	jl	.L242
	subl	$112, %eax
	cmpl	$15, %eax
	ja	.L242
	jmp	.L247
.L246:
	cmpl	$232, %eax
	jl	.L242
	cmpl	$233, %eax
	jle	.L245
	cmpl	$235, %eax
	je	.L247
	jmp	.L242
.L245:
	.stabn	68,0,578,.LM502-.LFBB24
.LM502:
	addl	$1, -24(%ebp)
	jmp	.L247
.L243:
	.stabn	68,0,578,.LM503-.LFBB24
.LM503:
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$111, %al
	jbe	.L248
	.stabn	68,0,578,.LM504-.LFBB24
.LM504:
	movl	-20(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	jbe	.L249
.L248:
	.stabn	68,0,578,.LM505-.LFBB24
.LM505:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$578, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L249:
	.stabn	68,0,578,.LM506-.LFBB24
.LM506:
	addl	$1, -24(%ebp)
	addl	$1, -20(%ebp)
	jmp	.L247
.L242:
	.stabn	68,0,578,.LM507-.LFBB24
.LM507:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$578, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L247:
	.stabn	68,0,578,.LM508-.LFBB24
.LM508:
	movl	12(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -68(%ebp)
	cmpl	$0, -24(%ebp)
	je	.L250
.LBB61:
	.stabn	68,0,578,.LM509-.LFBB24
.LM509:
	movl	-68(%ebp), %eax
	subl	$4, %eax
	movl	%eax, -156(%ebp)
	movzbl	-156(%ebp), %edx
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -20(%ebp)
	movzbl	-155(%ebp), %edx
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -20(%ebp)
	movzbl	-154(%ebp), %edx
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -20(%ebp)
	movzbl	-153(%ebp), %edx
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -20(%ebp)
.LBE61:
.LBE60:
	.stabn	68,0,579,.LM510-.LFBB24
.LM510:
	jmp	.L253
.L250:
.LBB62:
	.stabn	68,0,578,.LM511-.LFBB24
.LM511:
	movl	-68(%ebp), %eax
	subl	$1, %eax
	cmpl	$-128, %eax
	jl	.L252
	.stabn	68,0,578,.LM512-.LFBB24
.LM512:
	movl	-68(%ebp), %eax
	subl	$1, %eax
	cmpl	$127, %eax
	jg	.L252
	.stabn	68,0,578,.LM513-.LFBB24
.LM513:
	movl	-68(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-20(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -20(%ebp)
.LBE62:
	.stabn	68,0,579,.LM514-.LFBB24
.LM514:
	jmp	.L253
.L252:
.LBB63:
	.stabn	68,0,578,.LM515-.LFBB24
.LM515:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$578, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L290:
.LBE63:
.LBE55:
	.stabn	68,0,581,.LM516-.LFBB24
.LM516:
	movl	$.LC6, (%esp)
	call	Panic
	nop
.L253:
	.stabn	68,0,583,.LM517-.LFBB24
.LM517:
	jmp	.L228
.L288:
	.stabn	68,0,584,.LM518-.LFBB24
.LM518:
	movl	$.LC7, (%esp)
	call	Panic
	nop
.L228:
	.stabn	68,0,586,.LM519-.LFBB24
.LM519:
	jmp	.L254
.L221:
	.stabn	68,0,588,.LM520-.LFBB24
.LM520:
	movl	-48(%ebp), %eax
	cmpl	$1, %eax
	je	.L257
	cmpl	$1, %eax
	jb	.L256
	cmpl	$2, %eax
	jne	.L291
.L256:
	.stabn	68,0,592,.LM521-.LFBB24
.LM521:
	movl	-52(%ebp), %eax
	testl	%eax, %eax
	je	.L259
	cmpl	$2, %eax
	jne	.L292
.L259:
	.stabn	68,0,596,.LM522-.LFBB24
.LM522:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,597,.LM523-.LFBB24
.LM523:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,598,.LM524-.LFBB24
.LM524:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-32, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,599,.LM525-.LFBB24
.LM525:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,600,.LM526-.LFBB24
.LM526:
	jmp	.L260
.L292:
	.stabn	68,0,601,.LM527-.LFBB24
.LM527:
	movl	$.LC6, (%esp)
	call	Panic
	nop
.L260:
	.stabn	68,0,603,.LM528-.LFBB24
.LM528:
	jmp	.L261
.L257:
	.stabn	68,0,605,.LM529-.LFBB24
.LM529:
	movl	-52(%ebp), %eax
	testl	%eax, %eax
	je	.L263
	cmpl	$2, %eax
	jne	.L293
.L263:
.LBB64:
	.stabn	68,0,610,.LM530-.LFBB24
.LM530:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,611,.LM531-.LFBB24
.LM531:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,612,.LM532-.LFBB24
.LM532:
	movl	12(%ebp), %eax
	movb	$-9, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$1, (%eax)
	addl	$1, 12(%ebp)
.LBB65:
	movl	$32, -176(%ebp)
	movzbl	-176(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-175(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-174(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-173(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE65:
	.stabn	68,0,613,.LM533-.LFBB24
.LM533:
	movl	12(%ebp), %eax
	movl	%eax, -72(%ebp)
	.stabn	68,0,614,.LM534-.LFBB24
.LM534:
	movzbl	x86_cc_unsigned_map+5, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$0, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,616,.LM535-.LFBB24
.LM535:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,617,.LM536-.LFBB24
.LM536:
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-91, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-64, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,618,.LM537-.LFBB24
.LM537:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,619,.LM538-.LFBB24
.LM538:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-29, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,620,.LM539-.LFBB24
.LM539:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,621,.LM540-.LFBB24
.LM540:
	movl	12(%ebp), %eax
	movl	%eax, -76(%ebp)
	.stabn	68,0,622,.LM541-.LFBB24
.LM541:
	movl	12(%ebp), %eax
	movb	$-21, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$0, (%eax)
	addl	$1, 12(%ebp)
.LBB66:
	.stabn	68,0,623,.LM542-.LFBB24
.LM542:
	movl	-72(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -28(%ebp)
	movl	$0, -32(%ebp)
	movl	-72(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	cmpl	$226, %eax
	jg	.L268
	cmpl	$224, %eax
	jge	.L269
	cmpl	$15, %eax
	je	.L265
	cmpl	$15, %eax
	jl	.L264
	subl	$112, %eax
	cmpl	$15, %eax
	ja	.L264
	jmp	.L269
.L268:
	cmpl	$232, %eax
	jl	.L264
	cmpl	$233, %eax
	jle	.L267
	cmpl	$235, %eax
	je	.L269
	jmp	.L264
.L267:
	.stabn	68,0,623,.LM543-.LFBB24
.LM543:
	addl	$1, -32(%ebp)
	jmp	.L269
.L265:
	.stabn	68,0,623,.LM544-.LFBB24
.LM544:
	movl	-28(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$111, %al
	jbe	.L270
	.stabn	68,0,623,.LM545-.LFBB24
.LM545:
	movl	-28(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	jbe	.L271
.L270:
	.stabn	68,0,623,.LM546-.LFBB24
.LM546:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$623, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L271:
	.stabn	68,0,623,.LM547-.LFBB24
.LM547:
	addl	$1, -32(%ebp)
	addl	$1, -28(%ebp)
	jmp	.L269
.L264:
	.stabn	68,0,623,.LM548-.LFBB24
.LM548:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$623, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L269:
	.stabn	68,0,623,.LM549-.LFBB24
.LM549:
	movl	12(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -80(%ebp)
	cmpl	$0, -32(%ebp)
	je	.L272
.LBB67:
	.stabn	68,0,623,.LM550-.LFBB24
.LM550:
	movl	-80(%ebp), %eax
	subl	$4, %eax
	movl	%eax, -188(%ebp)
	movzbl	-188(%ebp), %edx
	movl	-28(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -28(%ebp)
	movzbl	-187(%ebp), %edx
	movl	-28(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -28(%ebp)
	movzbl	-186(%ebp), %edx
	movl	-28(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -28(%ebp)
	movzbl	-185(%ebp), %edx
	movl	-28(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -28(%ebp)
	jmp	.L273
.L272:
.LBE67:
	.stabn	68,0,623,.LM551-.LFBB24
.LM551:
	movl	-80(%ebp), %eax
	subl	$1, %eax
	cmpl	$-128, %eax
	jl	.L274
	.stabn	68,0,623,.LM552-.LFBB24
.LM552:
	movl	-80(%ebp), %eax
	subl	$1, %eax
	cmpl	$127, %eax
	jg	.L274
	.stabn	68,0,623,.LM553-.LFBB24
.LM553:
	movl	-80(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-28(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -28(%ebp)
	jmp	.L273
.L274:
	.stabn	68,0,623,.LM554-.LFBB24
.LM554:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$623, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L273:
.LBE66:
	.stabn	68,0,625,.LM555-.LFBB24
.LM555:
	movl	12(%ebp), %eax
	movb	$-125, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-31, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$31, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,626,.LM556-.LFBB24
.LM556:
	movl	12(%ebp), %eax
	movb	$-45, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-29, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,627,.LM557-.LFBB24
.LM557:
	movl	12(%ebp), %eax
	movb	$83, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,628,.LM558-.LFBB24
.LM558:
	movl	12(%ebp), %eax
	movb	$-57, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
.LBB68:
	movl	$0, -224(%ebp)
	movzbl	-224(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-223(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-222(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-221(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE68:
.LBB69:
	.stabn	68,0,629,.LM559-.LFBB24
.LM559:
	movl	-76(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -36(%ebp)
	movl	$0, -40(%ebp)
	movl	-76(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	cmpl	$226, %eax
	jg	.L279
	cmpl	$224, %eax
	jge	.L280
	cmpl	$15, %eax
	je	.L276
	cmpl	$15, %eax
	jl	.L275
	subl	$112, %eax
	cmpl	$15, %eax
	ja	.L275
	jmp	.L280
.L279:
	cmpl	$232, %eax
	jl	.L275
	cmpl	$233, %eax
	jle	.L278
	cmpl	$235, %eax
	je	.L280
	jmp	.L275
.L278:
	.stabn	68,0,629,.LM560-.LFBB24
.LM560:
	addl	$1, -40(%ebp)
	jmp	.L280
.L276:
	.stabn	68,0,629,.LM561-.LFBB24
.LM561:
	movl	-36(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$111, %al
	jbe	.L281
	.stabn	68,0,629,.LM562-.LFBB24
.LM562:
	movl	-36(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$-113, %al
	jbe	.L282
.L281:
	.stabn	68,0,629,.LM563-.LFBB24
.LM563:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$629, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L282:
	.stabn	68,0,629,.LM564-.LFBB24
.LM564:
	addl	$1, -40(%ebp)
	addl	$1, -36(%ebp)
	jmp	.L280
.L275:
	.stabn	68,0,629,.LM565-.LFBB24
.LM565:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$629, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L280:
	.stabn	68,0,629,.LM566-.LFBB24
.LM566:
	movl	12(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -84(%ebp)
	cmpl	$0, -40(%ebp)
	je	.L283
.LBB70:
	.stabn	68,0,629,.LM567-.LFBB24
.LM567:
	movl	-84(%ebp), %eax
	subl	$4, %eax
	movl	%eax, -228(%ebp)
	movzbl	-228(%ebp), %edx
	movl	-36(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -36(%ebp)
	movzbl	-227(%ebp), %edx
	movl	-36(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -36(%ebp)
	movzbl	-226(%ebp), %edx
	movl	-36(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -36(%ebp)
	movzbl	-225(%ebp), %edx
	movl	-36(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -36(%ebp)
.LBE70:
.LBE69:
	.stabn	68,0,630,.LM568-.LFBB24
.LM568:
	jmp	.L286
.L283:
.LBB71:
	.stabn	68,0,629,.LM569-.LFBB24
.LM569:
	movl	-84(%ebp), %eax
	subl	$1, %eax
	cmpl	$-128, %eax
	jl	.L285
	.stabn	68,0,629,.LM570-.LFBB24
.LM570:
	movl	-84(%ebp), %eax
	subl	$1, %eax
	cmpl	$127, %eax
	jg	.L285
	.stabn	68,0,629,.LM571-.LFBB24
.LM571:
	movl	-84(%ebp), %eax
	leal	-1(%eax), %edx
	movl	-36(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, -36(%ebp)
.LBE71:
	.stabn	68,0,630,.LM572-.LFBB24
.LM572:
	jmp	.L286
.L285:
.LBB72:
	.stabn	68,0,629,.LM573-.LFBB24
.LM573:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4440, 8(%esp)
	movl	$629, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L293:
.LBE72:
.LBE64:
	.stabn	68,0,632,.LM574-.LFBB24
.LM574:
	movl	$.LC6, (%esp)
	call	Panic
	nop
.L286:
	.stabn	68,0,634,.LM575-.LFBB24
.LM575:
	jmp	.L261
.L291:
	.stabn	68,0,635,.LM576-.LFBB24
.LM576:
	movl	$.LC7, (%esp)
	call	Panic
	nop
.L261:
	.stabn	68,0,637,.LM577-.LFBB24
.LM577:
	jmp	.L254
.L287:
	.stabn	68,0,638,.LM578-.LFBB24
.LM578:
	movl	$.LC8, (%esp)
	call	Panic
	nop
.L254:
	.stabn	68,0,640,.LM579-.LFBB24
.LM579:
	movl	12(%ebp), %eax
	.stabn	68,0,641,.LM580-.LFBB24
.LM580:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE23:
	.size	JIT_Compile_Shift, .-JIT_Compile_Shift
	.stabs	"shiftType:(57,8)",128,0,530,-44
	.stabs	"shiftedType:(59,6)",128,0,531,-48
	.stabs	"shifterType:(59,6)",128,0,532,-52
	.stabs	"__func__:V(0,16)",38,0,560,__func__.4440
	.stabn	192,0,0,.LFBB24-.LFBB24
	.stabs	"jumpHighPartIsZero:(61,14)",128,0,562,-56
	.stabs	"jumpEnd:(61,14)",128,0,570,-60
	.stabn	192,0,0,.LBB55-.LFBB24
	.stabs	"imb:(11,17)",128,0,561,-104
	.stabn	192,0,0,.LBB56-.LFBB24
	.stabn	224,0,0,.LBE56-.LFBB24
	.stabs	"pos:(61,14)",128,0,572,-12
	.stabs	"disp:(0,1)",128,0,572,-64
	.stabs	"size:(0,1)",128,0,572,-16
	.stabn	192,0,0,.LBB57-.LFBB24
	.stabs	"imb:(11,17)",128,0,572,-116
	.stabn	192,0,0,.LBB58-.LFBB24
	.stabn	224,0,0,.LBE58-.LFBB24
	.stabn	224,0,0,.LBE57-.LFBB24
	.stabs	"imb:(11,17)",128,0,577,-152
	.stabn	192,0,0,.LBB59-.LFBB24
	.stabn	224,0,0,.LBE59-.LFBB24
	.stabs	"pos:(61,14)",128,0,578,-20
	.stabs	"disp:(0,1)",128,0,578,-68
	.stabs	"size:(0,1)",128,0,578,-24
	.stabn	192,0,0,.LBB60-.LFBB24
	.stabs	"imb:(11,17)",128,0,578,-156
	.stabn	192,0,0,.LBB61-.LFBB24
	.stabn	224,0,0,.LBE61-.LFBB24
	.stabn	224,0,0,.LBE60-.LFBB24
	.stabs	"pos:(61,14)",128,0,578,-20
	.stabs	"disp:(0,1)",128,0,578,-68
	.stabs	"size:(0,1)",128,0,578,-24
	.stabn	192,0,0,.LBB62-.LFBB24
	.stabn	224,0,0,.LBE62-.LFBB24
	.stabs	"pos:(61,14)",128,0,578,-20
	.stabs	"disp:(0,1)",128,0,578,-68
	.stabs	"size:(0,1)",128,0,578,-24
	.stabn	192,0,0,.LBB63-.LFBB24
	.stabn	224,0,0,.LBE63-.LFBB24
	.stabn	224,0,0,.LBE55-.LFBB24
	.stabs	"jumpHighPartIsZero:(61,14)",128,0,613,-72
	.stabs	"jumpEnd:(61,14)",128,0,621,-76
	.stabn	192,0,0,.LBB64-.LFBB24
	.stabs	"imb:(11,17)",128,0,612,-176
	.stabn	192,0,0,.LBB65-.LFBB24
	.stabn	224,0,0,.LBE65-.LFBB24
	.stabs	"pos:(61,14)",128,0,623,-28
	.stabs	"disp:(0,1)",128,0,623,-80
	.stabs	"size:(0,1)",128,0,623,-32
	.stabn	192,0,0,.LBB66-.LFBB24
	.stabs	"imb:(11,17)",128,0,623,-188
	.stabn	192,0,0,.LBB67-.LFBB24
	.stabn	224,0,0,.LBE67-.LFBB24
	.stabn	224,0,0,.LBE66-.LFBB24
	.stabs	"imb:(11,17)",128,0,628,-224
	.stabn	192,0,0,.LBB68-.LFBB24
	.stabn	224,0,0,.LBE68-.LFBB24
	.stabs	"pos:(61,14)",128,0,629,-36
	.stabs	"disp:(0,1)",128,0,629,-84
	.stabs	"size:(0,1)",128,0,629,-40
	.stabn	192,0,0,.LBB69-.LFBB24
	.stabs	"imb:(11,17)",128,0,629,-228
	.stabn	192,0,0,.LBB70-.LFBB24
	.stabn	224,0,0,.LBE70-.LFBB24
	.stabn	224,0,0,.LBE69-.LFBB24
	.stabs	"pos:(61,14)",128,0,629,-36
	.stabs	"disp:(0,1)",128,0,629,-84
	.stabs	"size:(0,1)",128,0,629,-40
	.stabn	192,0,0,.LBB71-.LFBB24
	.stabn	224,0,0,.LBE71-.LFBB24
	.stabs	"pos:(61,14)",128,0,629,-36
	.stabs	"disp:(0,1)",128,0,629,-84
	.stabs	"size:(0,1)",128,0,629,-40
	.stabn	192,0,0,.LBB72-.LFBB24
	.stabn	224,0,0,.LBE72-.LFBB24
	.stabn	224,0,0,.LBE64-.LFBB24
	.stabn	224,0,0,.Lscope24-.LFBB24
.Lscope24:
	.stabs	"",36,0,0,.Lscope24-.LFBB24
	.stabd	78,0,0
	.section	.rodata
.LC9:
	.string	"Invalid operand ElementType"
.LC10:
	.string	"Unsupported OverflowType!"
	.text
	.stabs	"JIT_Compile_Add:F(2,13)",36,0,644,JIT_Compile_Add
	.stabs	"instr:p(13,27)",160,0,644,8
	.stabs	"compMethod:p(2,13)",160,0,644,12
	.stabs	"mth:p(13,18)",160,0,644,16
	.globl	JIT_Compile_Add
	.type	JIT_Compile_Add, @function
JIT_Compile_Add:
	.stabd	46,0,0
	.stabn	68,0,645,.LM581-.LFBB25
.LM581:
.LFBB25:
.LFB24:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.stabn	68,0,646,.LM582-.LFBB25
.LM582:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,647,.LM583-.LFBB25
.LM583:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,650,.LM584-.LFBB25
.LM584:
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	jne	.L305
.L296:
	.stabn	68,0,653,.LM585-.LFBB25
.LM585:
	cmpl	$11, -16(%ebp)
	ja	.L297
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L302, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L302:
	.long	.L298
	.long	.L298
	.long	.L298
	.long	.L298
	.long	.L299
	.long	.L298
	.long	.L298
	.long	.L298
	.long	.L298
	.long	.L299
	.long	.L300
	.long	.L301
	.text
.L298:
	.stabn	68,0,663,.LM586-.LFBB25
.LM586:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,664,.LM587-.LFBB25
.LM587:
	movl	12(%ebp), %eax
	movb	$1, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB73:
	movl	$4, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE73:
	.stabn	68,0,665,.LM588-.LFBB25
.LM588:
	jmp	.L303
.L299:
	.stabn	68,0,668,.LM589-.LFBB25
.LM589:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,669,.LM590-.LFBB25
.LM590:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,670,.LM591-.LFBB25
.LM591:
	movl	12(%ebp), %eax
	movb	$1, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB74:
	movl	$4, -24(%ebp)
	movzbl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-23(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-22(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-21(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE74:
	.stabn	68,0,671,.LM592-.LFBB25
.LM592:
	movl	12(%ebp), %eax
	movb	$17, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,672,.LM593-.LFBB25
.LM593:
	jmp	.L303
.L300:
	.stabn	68,0,674,.LM594-.LFBB25
.LM594:
	movl	12(%ebp), %eax
	movb	$-13, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,675,.LM595-.LFBB25
.LM595:
	jmp	.L303
.L301:
	.stabn	68,0,677,.LM596-.LFBB25
.LM596:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,678,.LM597-.LFBB25
.LM597:
	jmp	.L303
.L297:
	.stabn	68,0,679,.LM598-.LFBB25
.LM598:
	movl	$.LC9, (%esp)
	call	Panic
	nop
.L303:
	.stabn	68,0,681,.LM599-.LFBB25
.LM599:
	jmp	.L304
.L305:
	.stabn	68,0,684,.LM600-.LFBB25
.LM600:
	movl	$.LC10, (%esp)
	call	Panic
	nop
.L304:
	.stabn	68,0,686,.LM601-.LFBB25
.LM601:
	movl	12(%ebp), %eax
	.stabn	68,0,687,.LM602-.LFBB25
.LM602:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE24:
	.size	JIT_Compile_Add, .-JIT_Compile_Add
	.stabs	"ovfType:(57,12)",128,0,646,-12
	.stabs	"argEins:(57,10)",128,0,647,-16
	.stabn	192,0,0,.LFBB25-.LFBB25
	.stabs	"imb:(11,17)",128,0,664,-20
	.stabn	192,0,0,.LBB73-.LFBB25
	.stabn	224,0,0,.LBE73-.LFBB25
	.stabs	"imb:(11,17)",128,0,670,-24
	.stabn	192,0,0,.LBB74-.LFBB25
	.stabn	224,0,0,.LBE74-.LFBB25
	.stabn	224,0,0,.Lscope25-.LFBB25
.Lscope25:
	.stabs	"",36,0,0,.Lscope25-.LFBB25
	.stabd	78,0,0
	.stabs	"JIT_Compile_Sub:F(2,13)",36,0,690,JIT_Compile_Sub
	.stabs	"instr:p(13,27)",160,0,690,8
	.stabs	"compMethod:p(2,13)",160,0,690,12
	.stabs	"mth:p(13,18)",160,0,690,16
	.globl	JIT_Compile_Sub
	.type	JIT_Compile_Sub, @function
JIT_Compile_Sub:
	.stabd	46,0,0
	.stabn	68,0,691,.LM603-.LFBB26
.LM603:
.LFBB26:
.LFB25:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.stabn	68,0,692,.LM604-.LFBB26
.LM604:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,693,.LM605-.LFBB26
.LM605:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,696,.LM606-.LFBB26
.LM606:
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	jne	.L317
.L308:
	.stabn	68,0,699,.LM607-.LFBB26
.LM607:
	cmpl	$11, -16(%ebp)
	ja	.L309
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L314, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L314:
	.long	.L310
	.long	.L310
	.long	.L310
	.long	.L310
	.long	.L311
	.long	.L310
	.long	.L310
	.long	.L310
	.long	.L310
	.long	.L311
	.long	.L312
	.long	.L313
	.text
.L310:
	.stabn	68,0,709,.LM608-.LFBB26
.LM608:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,710,.LM609-.LFBB26
.LM609:
	movl	12(%ebp), %eax
	movb	$41, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB75:
	movl	$4, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE75:
	.stabn	68,0,711,.LM610-.LFBB26
.LM610:
	jmp	.L315
.L311:
	.stabn	68,0,714,.LM611-.LFBB26
.LM611:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,715,.LM612-.LFBB26
.LM612:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,716,.LM613-.LFBB26
.LM613:
	movl	12(%ebp), %eax
	movb	$41, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB76:
	movl	$4, -24(%ebp)
	movzbl	-24(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-23(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-22(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-21(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE76:
	.stabn	68,0,717,.LM614-.LFBB26
.LM614:
	movl	12(%ebp), %eax
	movb	$25, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$4, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,718,.LM615-.LFBB26
.LM615:
	jmp	.L315
.L312:
	.stabn	68,0,720,.LM616-.LFBB26
.LM616:
	movl	12(%ebp), %eax
	movb	$-13, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,721,.LM617-.LFBB26
.LM617:
	jmp	.L315
.L313:
	.stabn	68,0,723,.LM618-.LFBB26
.LM618:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$92, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,724,.LM619-.LFBB26
.LM619:
	jmp	.L315
.L309:
	.stabn	68,0,725,.LM620-.LFBB26
.LM620:
	movl	$.LC9, (%esp)
	call	Panic
	nop
.L315:
	.stabn	68,0,727,.LM621-.LFBB26
.LM621:
	jmp	.L316
.L317:
	.stabn	68,0,730,.LM622-.LFBB26
.LM622:
	movl	$.LC10, (%esp)
	call	Panic
	nop
.L316:
	.stabn	68,0,732,.LM623-.LFBB26
.LM623:
	movl	12(%ebp), %eax
	.stabn	68,0,733,.LM624-.LFBB26
.LM624:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE25:
	.size	JIT_Compile_Sub, .-JIT_Compile_Sub
	.stabs	"ovfType:(57,12)",128,0,692,-12
	.stabs	"argEins:(57,10)",128,0,693,-16
	.stabn	192,0,0,.LFBB26-.LFBB26
	.stabs	"imb:(11,17)",128,0,710,-20
	.stabn	192,0,0,.LBB75-.LFBB26
	.stabn	224,0,0,.LBE75-.LFBB26
	.stabs	"imb:(11,17)",128,0,716,-24
	.stabn	192,0,0,.LBB76-.LFBB26
	.stabn	224,0,0,.LBE76-.LFBB26
	.stabn	224,0,0,.Lscope26-.LFBB26
.Lscope26:
	.stabs	"",36,0,0,.Lscope26-.LFBB26
	.stabd	78,0,0
	.section	.rodata
	.align 4
.LC11:
	.string	"Unsupported! No, it doesn't matter what this is."
	.text
	.stabs	"JIT_Compile_Mul:F(2,13)",36,0,736,JIT_Compile_Mul
	.stabs	"instr:p(13,27)",160,0,736,8
	.stabs	"compMethod:p(2,13)",160,0,736,12
	.stabs	"mth:p(13,18)",160,0,736,16
	.globl	JIT_Compile_Mul
	.type	JIT_Compile_Mul, @function
JIT_Compile_Mul:
	.stabd	46,0,0
	.stabn	68,0,737,.LM625-.LFBB27
.LM625:
.LFBB27:
.LFB26:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,738,.LM626-.LFBB27
.LM626:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,739,.LM627-.LFBB27
.LM627:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,742,.LM628-.LFBB27
.LM628:
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	jne	.L329
.L320:
	.stabn	68,0,745,.LM629-.LFBB27
.LM629:
	cmpl	$11, -16(%ebp)
	ja	.L321
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L326, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L326:
	.long	.L322
	.long	.L322
	.long	.L322
	.long	.L322
	.long	.L323
	.long	.L322
	.long	.L322
	.long	.L322
	.long	.L322
	.long	.L323
	.long	.L324
	.long	.L325
	.text
.L322:
	.stabn	68,0,755,.LM630-.LFBB27
.LM630:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,756,.LM631-.LFBB27
.LM631:
	movl	12(%ebp), %eax
	movb	$91, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,757,.LM632-.LFBB27
.LM632:
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-81, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-61, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,758,.LM633-.LFBB27
.LM633:
	movl	12(%ebp), %eax
	movb	$80, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,759,.LM634-.LFBB27
.LM634:
	jmp	.L327
.L323:
	.stabn	68,0,762,.LM635-.LFBB27
.LM635:
	movl	$.LC11, (%esp)
	call	Panic
	.stabn	68,0,763,.LM636-.LFBB27
.LM636:
	jmp	.L327
.L324:
	.stabn	68,0,765,.LM637-.LFBB27
.LM637:
	movl	12(%ebp), %eax
	movb	$-13, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,766,.LM638-.LFBB27
.LM638:
	jmp	.L327
.L325:
	.stabn	68,0,768,.LM639-.LFBB27
.LM639:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,769,.LM640-.LFBB27
.LM640:
	jmp	.L327
.L321:
	.stabn	68,0,770,.LM641-.LFBB27
.LM641:
	movl	$.LC9, (%esp)
	call	Panic
	nop
.L327:
	.stabn	68,0,772,.LM642-.LFBB27
.LM642:
	jmp	.L328
.L329:
	.stabn	68,0,775,.LM643-.LFBB27
.LM643:
	movl	$.LC10, (%esp)
	call	Panic
	nop
.L328:
	.stabn	68,0,777,.LM644-.LFBB27
.LM644:
	movl	12(%ebp), %eax
	.stabn	68,0,778,.LM645-.LFBB27
.LM645:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE26:
	.size	JIT_Compile_Mul, .-JIT_Compile_Mul
	.stabs	"ovfType:(57,12)",128,0,738,-12
	.stabs	"argEins:(57,10)",128,0,739,-16
	.stabn	192,0,0,.LFBB27-.LFBB27
	.stabn	224,0,0,.Lscope27-.LFBB27
.Lscope27:
	.stabs	"",36,0,0,.Lscope27-.LFBB27
	.stabd	78,0,0
	.stabs	"JIT_Compile_Div:F(2,13)",36,0,781,JIT_Compile_Div
	.stabs	"instr:p(13,27)",160,0,781,8
	.stabs	"compMethod:p(2,13)",160,0,781,12
	.stabs	"mth:p(13,18)",160,0,781,16
	.globl	JIT_Compile_Div
	.type	JIT_Compile_Div, @function
JIT_Compile_Div:
	.stabd	46,0,0
	.stabn	68,0,782,.LM646-.LFBB28
.LM646:
.LFBB28:
.LFB27:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,783,.LM647-.LFBB28
.LM647:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,784,.LM648-.LFBB28
.LM648:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,787,.LM649-.LFBB28
.LM649:
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	jne	.L341
.L332:
	.stabn	68,0,790,.LM650-.LFBB28
.LM650:
	cmpl	$11, -16(%ebp)
	ja	.L333
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L338, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L338:
	.long	.L334
	.long	.L334
	.long	.L334
	.long	.L334
	.long	.L335
	.long	.L334
	.long	.L334
	.long	.L334
	.long	.L334
	.long	.L335
	.long	.L336
	.long	.L337
	.text
.L334:
	.stabn	68,0,800,.LM651-.LFBB28
.LM651:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,801,.LM652-.LFBB28
.LM652:
	movl	12(%ebp), %eax
	movb	$-103, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,802,.LM653-.LFBB28
.LM653:
	movl	12(%ebp), %eax
	movb	$-9, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,803,.LM654-.LFBB28
.LM654:
	jmp	.L339
.L335:
	.stabn	68,0,806,.LM655-.LFBB28
.LM655:
	movl	$.LC11, (%esp)
	call	Panic
	.stabn	68,0,807,.LM656-.LFBB28
.LM656:
	jmp	.L339
.L336:
	.stabn	68,0,809,.LM657-.LFBB28
.LM657:
	movl	12(%ebp), %eax
	movb	$-13, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$94, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,810,.LM658-.LFBB28
.LM658:
	jmp	.L339
.L337:
	.stabn	68,0,812,.LM659-.LFBB28
.LM659:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$94, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,813,.LM660-.LFBB28
.LM660:
	jmp	.L339
.L333:
	.stabn	68,0,814,.LM661-.LFBB28
.LM661:
	movl	$.LC9, (%esp)
	call	Panic
	nop
.L339:
	.stabn	68,0,816,.LM662-.LFBB28
.LM662:
	jmp	.L340
.L341:
	.stabn	68,0,819,.LM663-.LFBB28
.LM663:
	movl	$.LC10, (%esp)
	call	Panic
	nop
.L340:
	.stabn	68,0,821,.LM664-.LFBB28
.LM664:
	movl	12(%ebp), %eax
	.stabn	68,0,822,.LM665-.LFBB28
.LM665:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE27:
	.size	JIT_Compile_Div, .-JIT_Compile_Div
	.stabs	"ovfType:(57,12)",128,0,783,-12
	.stabs	"argEins:(57,10)",128,0,784,-16
	.stabn	192,0,0,.LFBB28-.LFBB28
	.stabn	224,0,0,.Lscope28-.LFBB28
.Lscope28:
	.stabs	"",36,0,0,.Lscope28-.LFBB28
	.stabd	78,0,0
	.stabs	"JIT_Compile_Rem:F(2,13)",36,0,825,JIT_Compile_Rem
	.stabs	"instr:p(13,27)",160,0,825,8
	.stabs	"compMethod:p(2,13)",160,0,825,12
	.stabs	"mth:p(13,18)",160,0,825,16
	.globl	JIT_Compile_Rem
	.type	JIT_Compile_Rem, @function
JIT_Compile_Rem:
	.stabd	46,0,0
	.stabn	68,0,826,.LM666-.LFBB29
.LM666:
.LFBB29:
.LFB28:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$56, %esp
	.stabn	68,0,827,.LM667-.LFBB29
.LM667:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,828,.LM668-.LFBB29
.LM668:
	movl	8(%ebp), %eax
	movl	14(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,831,.LM669-.LFBB29
.LM669:
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	jne	.L353
.L344:
	.stabn	68,0,834,.LM670-.LFBB29
.LM670:
	cmpl	$11, -16(%ebp)
	ja	.L345
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L350, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L350:
	.long	.L346
	.long	.L346
	.long	.L346
	.long	.L346
	.long	.L347
	.long	.L346
	.long	.L346
	.long	.L346
	.long	.L346
	.long	.L347
	.long	.L348
	.long	.L349
	.text
.L346:
	.stabn	68,0,844,.LM671-.LFBB29
.LM671:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,845,.LM672-.LFBB29
.LM672:
	movl	12(%ebp), %eax
	movb	$-103, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,846,.LM673-.LFBB29
.LM673:
	movl	12(%ebp), %eax
	movb	$-9, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$60, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$36, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,847,.LM674-.LFBB29
.LM674:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$21, (%eax)
	addl	$1, 12(%ebp)
.LBB77:
	movl	$4, -28(%ebp)
	movzbl	-28(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-27(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-26(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-25(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE77:
	.stabn	68,0,848,.LM675-.LFBB29
.LM675:
	jmp	.L351
.L347:
	.stabn	68,0,851,.LM676-.LFBB29
.LM676:
	movl	$.LC11, (%esp)
	call	Panic
	.stabn	68,0,852,.LM677-.LFBB29
.LM677:
	jmp	.L351
.L348:
	.stabn	68,0,854,.LM678-.LFBB29
.LM678:
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$87, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-46, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,855,.LM679-.LFBB29
.LM679:
	movl	12(%ebp), %eax
	movb	$-13, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$94, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,856,.LM680-.LFBB29
.LM680:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-54, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,857,.LM681-.LFBB29
.LM681:
	jmp	.L351
.L349:
	.stabn	68,0,859,.LM682-.LFBB29
.LM682:
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$87, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-46, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,860,.LM683-.LFBB29
.LM683:
	movl	12(%ebp), %eax
	movb	$-14, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$15, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$94, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-56, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,861,.LM684-.LFBB29
.LM684:
	movl	12(%ebp), %eax
	movb	$-39, (%eax)
	addl	$1, 12(%ebp)
	movl	12(%ebp), %eax
	movb	$-54, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,862,.LM685-.LFBB29
.LM685:
	jmp	.L351
.L345:
	.stabn	68,0,863,.LM686-.LFBB29
.LM686:
	movl	$.LC9, (%esp)
	call	Panic
	nop
.L351:
	.stabn	68,0,865,.LM687-.LFBB29
.LM687:
	jmp	.L352
.L353:
	.stabn	68,0,868,.LM688-.LFBB29
.LM688:
	movl	$.LC10, (%esp)
	call	Panic
	nop
.L352:
	.stabn	68,0,870,.LM689-.LFBB29
.LM689:
	movl	12(%ebp), %eax
	.stabn	68,0,871,.LM690-.LFBB29
.LM690:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE28:
	.size	JIT_Compile_Rem, .-JIT_Compile_Rem
	.stabs	"ovfType:(57,12)",128,0,827,-12
	.stabs	"argEins:(57,10)",128,0,828,-16
	.stabn	192,0,0,.LFBB29-.LFBB29
	.stabs	"imb:(11,17)",128,0,847,-28
	.stabn	192,0,0,.LBB77-.LFBB29
	.stabn	224,0,0,.LBE77-.LFBB29
	.stabn	224,0,0,.Lscope29-.LFBB29
.Lscope29:
	.stabs	"",36,0,0,.Lscope29-.LFBB29
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadIndirect:F(2,13)",36,0,874,JIT_Compile_LoadIndirect
	.stabs	"instr:p(13,27)",160,0,874,8
	.stabs	"compMethod:p(2,13)",160,0,874,12
	.stabs	"mth:p(13,18)",160,0,874,16
	.globl	JIT_Compile_LoadIndirect
	.type	JIT_Compile_LoadIndirect, @function
JIT_Compile_LoadIndirect:
	.stabd	46,0,0
	.stabn	68,0,875,.LM691-.LFBB30
.LM691:
.LFBB30:
.LFB29:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,876,.LM692-.LFBB30
.LM692:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,877,.LM693-.LFBB30
.LM693:
	movl	$0, -12(%ebp)
	.stabn	68,0,878,.LM694-.LFBB30
.LM694:
	cmpl	$14, -16(%ebp)
	ja	.L355
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L360, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L360:
	.long	.L356
	.long	.L357
	.long	.L358
	.long	.L356
	.long	.L359
	.long	.L356
	.long	.L357
	.long	.L358
	.long	.L356
	.long	.L359
	.long	.L356
	.long	.L359
	.long	.L356
	.long	.L355
	.long	.L356
	.text
.L357:
	.stabn	68,0,878,.LM695-.LFBB30
.LM695:
	movl	$1, -12(%ebp)
	jmp	.L361
.L358:
	.stabn	68,0,878,.LM696-.LFBB30
.LM696:
	movl	$2, -12(%ebp)
	jmp	.L361
.L356:
	.stabn	68,0,878,.LM697-.LFBB30
.LM697:
	movl	$4, -12(%ebp)
	jmp	.L361
.L359:
	.stabn	68,0,878,.LM698-.LFBB30
.LM698:
	movl	$8, -12(%ebp)
	jmp	.L361
.L355:
	.stabn	68,0,878,.LM699-.LFBB30
.LM699:
	movl	$.LC4, (%esp)
	call	Panic
.L361:
	.stabn	68,0,879,.LM700-.LFBB30
.LM700:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,880,.LM701-.LFBB30
.LM701:
	movl	-12(%ebp), %eax
	cmpl	$2, %eax
	je	.L364
	cmpl	$4, %eax
	je	.L365
	cmpl	$1, %eax
	jne	.L367
.L363:
	.stabn	68,0,880,.LM702-.LFBB30
.LM702:
	movl	12(%ebp), %eax
	movb	$-118, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L366
.L364:
	.stabn	68,0,880,.LM703-.LFBB30
.LM703:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L365:
	.stabn	68,0,880,.LM704-.LFBB30
.LM704:
	movl	12(%ebp), %eax
	movb	$-117, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L366
.L367:
	.stabn	68,0,880,.LM705-.LFBB30
.LM705:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4822, 8(%esp)
	movl	$880, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L366:
	.stabn	68,0,880,.LM706-.LFBB30
.LM706:
	movl	12(%ebp), %eax
	movb	$13, (%eax)
	addl	$1, 12(%ebp)
.LBB78:
	movl	$1, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE78:
	.stabn	68,0,881,.LM707-.LFBB30
.LM707:
	movl	12(%ebp), %eax
	movb	$81, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,882,.LM708-.LFBB30
.LM708:
	movl	12(%ebp), %eax
	.stabn	68,0,883,.LM709-.LFBB30
.LM709:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE29:
	.size	JIT_Compile_LoadIndirect, .-JIT_Compile_LoadIndirect
	.stabs	"elementType:(57,10)",128,0,876,-16
	.stabs	"sizeOfElementType:(10,10)",128,0,877,-12
	.stabs	"__func__:V(0,23)",38,0,880,__func__.4822
	.stabn	192,0,0,.LFBB30-.LFBB30
	.stabs	"imb:(11,17)",128,0,880,-20
	.stabn	192,0,0,.LBB78-.LFBB30
	.stabn	224,0,0,.LBE78-.LFBB30
	.stabn	224,0,0,.Lscope30-.LFBB30
.Lscope30:
	.stabs	"",36,0,0,.Lscope30-.LFBB30
	.stabd	78,0,0
	.stabs	"JIT_Compile_StoreIndirect:F(2,13)",36,0,886,JIT_Compile_StoreIndirect
	.stabs	"instr:p(13,27)",160,0,886,8
	.stabs	"compMethod:p(2,13)",160,0,886,12
	.stabs	"mth:p(13,18)",160,0,886,16
	.globl	JIT_Compile_StoreIndirect
	.type	JIT_Compile_StoreIndirect, @function
JIT_Compile_StoreIndirect:
	.stabd	46,0,0
	.stabn	68,0,887,.LM710-.LFBB31
.LM710:
.LFBB31:
.LFB30:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,888,.LM711-.LFBB31
.LM711:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.stabn	68,0,889,.LM712-.LFBB31
.LM712:
	movl	$0, -12(%ebp)
	.stabn	68,0,890,.LM713-.LFBB31
.LM713:
	cmpl	$14, -16(%ebp)
	ja	.L369
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	$.L374, %eax
	movl	(%eax), %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L374:
	.long	.L370
	.long	.L371
	.long	.L372
	.long	.L370
	.long	.L373
	.long	.L370
	.long	.L371
	.long	.L372
	.long	.L370
	.long	.L373
	.long	.L370
	.long	.L373
	.long	.L370
	.long	.L369
	.long	.L370
	.text
.L371:
	.stabn	68,0,890,.LM714-.LFBB31
.LM714:
	movl	$1, -12(%ebp)
	jmp	.L375
.L372:
	.stabn	68,0,890,.LM715-.LFBB31
.LM715:
	movl	$2, -12(%ebp)
	jmp	.L375
.L370:
	.stabn	68,0,890,.LM716-.LFBB31
.LM716:
	movl	$4, -12(%ebp)
	jmp	.L375
.L373:
	.stabn	68,0,890,.LM717-.LFBB31
.LM717:
	movl	$8, -12(%ebp)
	jmp	.L375
.L369:
	.stabn	68,0,890,.LM718-.LFBB31
.LM718:
	movl	$.LC4, (%esp)
	call	Panic
.L375:
	.stabn	68,0,891,.LM719-.LFBB31
.LM719:
	movl	12(%ebp), %eax
	movb	$88, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,892,.LM720-.LFBB31
.LM720:
	movl	12(%ebp), %eax
	movb	$89, (%eax)
	addl	$1, 12(%ebp)
	.stabn	68,0,893,.LM721-.LFBB31
.LM721:
	movl	-12(%ebp), %eax
	cmpl	$2, %eax
	je	.L378
	cmpl	$4, %eax
	je	.L379
	cmpl	$1, %eax
	jne	.L381
.L377:
	.stabn	68,0,893,.LM722-.LFBB31
.LM722:
	movl	12(%ebp), %eax
	movb	$-120, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L380
.L378:
	.stabn	68,0,893,.LM723-.LFBB31
.LM723:
	movl	12(%ebp), %eax
	movb	$102, (%eax)
	addl	$1, 12(%ebp)
.L379:
	.stabn	68,0,893,.LM724-.LFBB31
.LM724:
	movl	12(%ebp), %eax
	movb	$-119, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L380
.L381:
	.stabn	68,0,893,.LM725-.LFBB31
.LM725:
	movl	$.LC1, 12(%esp)
	movl	$__func__.4852, 8(%esp)
	movl	$893, 4(%esp)
	movl	$.LC2, (%esp)
	call	__assert_func
.L380:
	.stabn	68,0,893,.LM726-.LFBB31
.LM726:
	movl	12(%ebp), %eax
	movb	$5, (%eax)
	addl	$1, 12(%ebp)
.LBB79:
	movl	$1, -20(%ebp)
	movzbl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-19(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-18(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-17(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE79:
	.stabn	68,0,894,.LM727-.LFBB31
.LM727:
	movl	12(%ebp), %eax
	.stabn	68,0,895,.LM728-.LFBB31
.LM728:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE30:
	.size	JIT_Compile_StoreIndirect, .-JIT_Compile_StoreIndirect
	.stabs	"elementType:(57,10)",128,0,888,-16
	.stabs	"sizeOfElementType:(10,10)",128,0,889,-12
	.stabs	"__func__:V(0,18)",38,0,893,__func__.4852
	.stabn	192,0,0,.LFBB31-.LFBB31
	.stabs	"imb:(11,17)",128,0,893,-20
	.stabn	192,0,0,.LBB79-.LFBB31
	.stabn	224,0,0,.LBE79-.LFBB31
	.stabn	224,0,0,.Lscope31-.LFBB31
.Lscope31:
	.stabs	"",36,0,0,.Lscope31-.LFBB31
	.stabd	78,0,0
	.stabs	"JIT_Compile_LoadNull:F(2,13)",36,0,898,JIT_Compile_LoadNull
	.stabs	"instr:p(13,27)",160,0,898,8
	.stabs	"compMethod:p(2,13)",160,0,898,12
	.stabs	"mth:p(13,18)",160,0,898,16
	.globl	JIT_Compile_LoadNull
	.type	JIT_Compile_LoadNull, @function
JIT_Compile_LoadNull:
	.stabd	46,0,0
	.stabn	68,0,899,.LM729-.LFBB32
.LM729:
.LFBB32:
.LFB31:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
.LBB80:
	.stabn	68,0,900,.LM730-.LFBB32
.LM730:
	movl	$0, -4(%ebp)
	cmpl	$-128, -4(%ebp)
	jl	.L383
	.stabn	68,0,900,.LM731-.LFBB32
.LM731:
	cmpl	$127, -4(%ebp)
	jg	.L383
	.stabn	68,0,900,.LM732-.LFBB32
.LM732:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L384
.L383:
	.stabn	68,0,900,.LM733-.LFBB32
.LM733:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB81:
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
	movzbl	-8(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-7(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-6(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-5(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L384:
.LBE81:
.LBE80:
	.stabn	68,0,901,.LM734-.LFBB32
.LM734:
	movl	12(%ebp), %eax
	.stabn	68,0,902,.LM735-.LFBB32
.LM735:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE31:
	.size	JIT_Compile_LoadNull, .-JIT_Compile_LoadNull
	.stabs	"_imm:(0,1)",128,0,900,-4
	.stabn	192,0,0,.LBB80-.LFBB32
	.stabs	"imb:(11,17)",128,0,900,-8
	.stabn	192,0,0,.LBB81-.LFBB32
	.stabn	224,0,0,.LBE81-.LFBB32
	.stabn	224,0,0,.LBE80-.LFBB32
.Lscope32:
	.stabs	"",36,0,0,.Lscope32-.LFBB32
	.stabd	78,0,0
	.stabs	"JIT_Compile_NewObj:F(2,13)",36,0,905,JIT_Compile_NewObj
	.stabs	"instr:p(13,27)",160,0,905,8
	.stabs	"compMethod:p(2,13)",160,0,905,12
	.stabs	"mth:p(13,18)",160,0,905,16
	.globl	JIT_Compile_NewObj
	.type	JIT_Compile_NewObj, @function
JIT_Compile_NewObj:
	.stabd	46,0,0
	.stabn	68,0,906,.LM736-.LFBB33
.LM736:
.LFBB33:
.LFB32:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,908,.LM737-.LFBB33
.LM737:
	movl	12(%ebp), %eax
	.stabn	68,0,909,.LM738-.LFBB33
.LM738:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE32:
	.size	JIT_Compile_NewObj, .-JIT_Compile_NewObj
.Lscope33:
	.stabs	"",36,0,0,.Lscope33-.LFBB33
	.stabd	78,0,0
	.stabs	"JIT_Compile_Dup:F(2,13)",36,0,912,JIT_Compile_Dup
	.stabs	"instr:p(13,27)",160,0,912,8
	.stabs	"compMethod:p(2,13)",160,0,912,12
	.stabs	"mth:p(13,18)",160,0,912,16
	.globl	JIT_Compile_Dup
	.type	JIT_Compile_Dup, @function
JIT_Compile_Dup:
	.stabd	46,0,0
	.stabn	68,0,913,.LM739-.LFBB34
.LM739:
.LFBB34:
.LFB33:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,915,.LM740-.LFBB34
.LM740:
	movl	12(%ebp), %eax
	.stabn	68,0,916,.LM741-.LFBB34
.LM741:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE33:
	.size	JIT_Compile_Dup, .-JIT_Compile_Dup
.Lscope34:
	.stabs	"",36,0,0,.Lscope34-.LFBB34
	.stabd	78,0,0
	.stabs	"JIT_Compile_And:F(2,13)",36,0,919,JIT_Compile_And
	.stabs	"instr:p(13,27)",160,0,919,8
	.stabs	"compMethod:p(2,13)",160,0,919,12
	.stabs	"mth:p(13,18)",160,0,919,16
	.globl	JIT_Compile_And
	.type	JIT_Compile_And, @function
JIT_Compile_And:
	.stabd	46,0,0
	.stabn	68,0,920,.LM742-.LFBB35
.LM742:
.LFBB35:
.LFB34:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,922,.LM743-.LFBB35
.LM743:
	movl	12(%ebp), %eax
	.stabn	68,0,923,.LM744-.LFBB35
.LM744:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE34:
	.size	JIT_Compile_And, .-JIT_Compile_And
.Lscope35:
	.stabs	"",36,0,0,.Lscope35-.LFBB35
	.stabd	78,0,0
	.stabs	"JIT_Compile_Or:F(2,13)",36,0,926,JIT_Compile_Or
	.stabs	"instr:p(13,27)",160,0,926,8
	.stabs	"compMethod:p(2,13)",160,0,926,12
	.stabs	"mth:p(13,18)",160,0,926,16
	.globl	JIT_Compile_Or
	.type	JIT_Compile_Or, @function
JIT_Compile_Or:
	.stabd	46,0,0
	.stabn	68,0,927,.LM745-.LFBB36
.LM745:
.LFBB36:
.LFB35:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,929,.LM746-.LFBB36
.LM746:
	movl	12(%ebp), %eax
	.stabn	68,0,930,.LM747-.LFBB36
.LM747:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE35:
	.size	JIT_Compile_Or, .-JIT_Compile_Or
.Lscope36:
	.stabs	"",36,0,0,.Lscope36-.LFBB36
	.stabd	78,0,0
	.stabs	"JIT_Compile_XOr:F(2,13)",36,0,933,JIT_Compile_XOr
	.stabs	"instr:p(13,27)",160,0,933,8
	.stabs	"compMethod:p(2,13)",160,0,933,12
	.stabs	"mth:p(13,18)",160,0,933,16
	.globl	JIT_Compile_XOr
	.type	JIT_Compile_XOr, @function
JIT_Compile_XOr:
	.stabd	46,0,0
	.stabn	68,0,934,.LM748-.LFBB37
.LM748:
.LFBB37:
.LFB36:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,936,.LM749-.LFBB37
.LM749:
	movl	12(%ebp), %eax
	.stabn	68,0,937,.LM750-.LFBB37
.LM750:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE36:
	.size	JIT_Compile_XOr, .-JIT_Compile_XOr
.Lscope37:
	.stabs	"",36,0,0,.Lscope37-.LFBB37
	.stabd	78,0,0
	.stabs	"JIT_Compile_Neg:F(2,13)",36,0,940,JIT_Compile_Neg
	.stabs	"instr:p(13,27)",160,0,940,8
	.stabs	"compMethod:p(2,13)",160,0,940,12
	.stabs	"mth:p(13,18)",160,0,940,16
	.globl	JIT_Compile_Neg
	.type	JIT_Compile_Neg, @function
JIT_Compile_Neg:
	.stabd	46,0,0
	.stabn	68,0,941,.LM751-.LFBB38
.LM751:
.LFBB38:
.LFB37:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,943,.LM752-.LFBB38
.LM752:
	movl	12(%ebp), %eax
	.stabn	68,0,944,.LM753-.LFBB38
.LM753:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE37:
	.size	JIT_Compile_Neg, .-JIT_Compile_Neg
.Lscope38:
	.stabs	"",36,0,0,.Lscope38-.LFBB38
	.stabd	78,0,0
	.stabs	"JIT_Compile_Not:F(2,13)",36,0,947,JIT_Compile_Not
	.stabs	"instr:p(13,27)",160,0,947,8
	.stabs	"compMethod:p(2,13)",160,0,947,12
	.stabs	"mth:p(13,18)",160,0,947,16
	.globl	JIT_Compile_Not
	.type	JIT_Compile_Not, @function
JIT_Compile_Not:
	.stabd	46,0,0
	.stabn	68,0,948,.LM754-.LFBB39
.LM754:
.LFBB39:
.LFB38:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,950,.LM755-.LFBB39
.LM755:
	movl	12(%ebp), %eax
	.stabn	68,0,951,.LM756-.LFBB39
.LM756:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE38:
	.size	JIT_Compile_Not, .-JIT_Compile_Not
.Lscope39:
	.stabs	"",36,0,0,.Lscope39-.LFBB39
	.stabd	78,0,0
	.stabs	"JIT_Compile_Load_String:F(2,13)",36,0,954,JIT_Compile_Load_String
	.stabs	"instr:p(13,27)",160,0,954,8
	.stabs	"compMethod:p(2,13)",160,0,954,12
	.stabs	"mth:p(13,18)",160,0,954,16
	.globl	JIT_Compile_Load_String
	.type	JIT_Compile_Load_String, @function
JIT_Compile_Load_String:
	.stabd	46,0,0
	.stabn	68,0,955,.LM757-.LFBB40
.LM757:
.LFBB40:
.LFB39:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,957,.LM758-.LFBB40
.LM758:
	movl	12(%ebp), %eax
	.stabn	68,0,958,.LM759-.LFBB40
.LM759:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE39:
	.size	JIT_Compile_Load_String, .-JIT_Compile_Load_String
.Lscope40:
	.stabs	"",36,0,0,.Lscope40-.LFBB40
	.stabd	78,0,0
	.stabs	"JIT_Compile_Call_Absolute:F(2,13)",36,0,961,JIT_Compile_Call_Absolute
	.stabs	"instr:p(13,27)",160,0,961,8
	.stabs	"compMethod:p(2,13)",160,0,961,12
	.stabs	"mth:p(13,18)",160,0,961,16
	.globl	JIT_Compile_Call_Absolute
	.type	JIT_Compile_Call_Absolute, @function
JIT_Compile_Call_Absolute:
	.stabd	46,0,0
	.stabn	68,0,962,.LM760-.LFBB41
.LM760:
.LFBB41:
.LFB40:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,964,.LM761-.LFBB41
.LM761:
	movl	12(%ebp), %eax
	.stabn	68,0,965,.LM762-.LFBB41
.LM762:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE40:
	.size	JIT_Compile_Call_Absolute, .-JIT_Compile_Call_Absolute
.Lscope41:
	.stabs	"",36,0,0,.Lscope41-.LFBB41
	.stabd	78,0,0
	.stabs	"JIT_Compile_Call_Internal:F(2,13)",36,0,966,JIT_Compile_Call_Internal
	.stabs	"instr:p(13,27)",160,0,966,8
	.stabs	"compMethod:p(2,13)",160,0,966,12
	.stabs	"mth:p(13,18)",160,0,966,16
	.globl	JIT_Compile_Call_Internal
	.type	JIT_Compile_Call_Internal, @function
JIT_Compile_Call_Internal:
	.stabd	46,0,0
	.stabn	68,0,967,.LM763-.LFBB42
.LM763:
.LFBB42:
.LFB41:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	.stabn	68,0,969,.LM764-.LFBB42
.LM764:
	movl	12(%ebp), %eax
	.stabn	68,0,970,.LM765-.LFBB42
.LM765:
	popl	%ebp
	.cfi_def_cfa 4, 4
	.cfi_restore 5
	ret
	.cfi_endproc
.LFE41:
	.size	JIT_Compile_Call_Internal, .-JIT_Compile_Call_Internal
.Lscope42:
	.stabs	"",36,0,0,.Lscope42-.LFBB42
	.stabd	78,0,0
	.stabs	"JIT_Compile_Call:F(2,13)",36,0,973,JIT_Compile_Call
	.stabs	"instr:p(13,27)",160,0,973,8
	.stabs	"compMethod:p(2,13)",160,0,973,12
	.stabs	"mth:p(13,18)",160,0,973,16
	.globl	JIT_Compile_Call
	.type	JIT_Compile_Call, @function
JIT_Compile_Call:
	.stabd	46,0,0
	.stabn	68,0,974,.LM766-.LFBB43
.LM766:
.LFBB43:
.LFB42:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$16, %esp
.LBB82:
	.stabn	68,0,975,.LM767-.LFBB43
.LM767:
	movl	8(%ebp), %eax
	movl	9(%eax), %eax
	movl	%eax, -4(%ebp)
	cmpl	$-128, -4(%ebp)
	jl	.L396
	.stabn	68,0,975,.LM768-.LFBB43
.LM768:
	cmpl	$127, -4(%ebp)
	jg	.L396
	.stabn	68,0,975,.LM769-.LFBB43
.LM769:
	movl	12(%ebp), %eax
	movb	$106, (%eax)
	addl	$1, 12(%ebp)
	movl	-4(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	jmp	.L397
.L396:
	.stabn	68,0,975,.LM770-.LFBB43
.LM770:
	movl	12(%ebp), %eax
	movb	$104, (%eax)
	addl	$1, 12(%ebp)
.LBB83:
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
	movzbl	-8(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-7(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-6(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-5(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.L397:
.LBE83:
.LBE82:
	.stabn	68,0,976,.LM771-.LFBB43
.LM771:
	movl	12(%ebp), %eax
	movb	$-24, (%eax)
	addl	$1, 12(%ebp)
.LBB84:
	movl	$JIT_Trampoline_DoCall, %eax
	movl	%eax, -12(%ebp)
	movzbl	-12(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-11(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-10(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
	movzbl	-9(%ebp), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movb	%dl, (%eax)
	addl	$1, 12(%ebp)
.LBE84:
	.stabn	68,0,978,.LM772-.LFBB43
.LM772:
	movl	12(%ebp), %eax
	.stabn	68,0,979,.LM773-.LFBB43
.LM773:
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE42:
	.size	JIT_Compile_Call, .-JIT_Compile_Call
	.stabs	"_imm:(0,1)",128,0,975,-4
	.stabn	192,0,0,.LBB82-.LFBB43
	.stabs	"imb:(11,17)",128,0,975,-8
	.stabn	192,0,0,.LBB83-.LFBB43
	.stabn	224,0,0,.LBE83-.LFBB43
	.stabn	224,0,0,.LBE82-.LFBB43
	.stabs	"imb:(11,17)",128,0,976,-12
	.stabn	192,0,0,.LBB84-.LFBB43
	.stabn	224,0,0,.LBE84-.LFBB43
.Lscope43:
	.stabs	"",36,0,0,.Lscope43-.LFBB43
	.stabd	78,0,0
/APP
	JIT_Trampoline_DoCall3:	

/NO_APP
	.stabs	"JIT_Trampoline_DoCall:F(0,15)",36,0,987,JIT_Trampoline_DoCall
	.stabs	"mth:p(0,25)=*(13,5)",160,0,987,8
	.stabs	"obj:p(64,7)",160,0,987,12
	.globl	JIT_Trampoline_DoCall
	.type	JIT_Trampoline_DoCall, @function
JIT_Trampoline_DoCall:
	.stabd	46,0,0
	.stabn	68,0,988,.LM774-.LFBB44
.LM774:
.LFBB44:
.LFB43:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	movl	%esp, %ebp
	.cfi_def_cfa_register 5
	subl	$40, %esp
	.stabn	68,0,989,.LM775-.LFBB44
.LM775:
/APP
/  989 "Source/CLR/JIT/JIT-x86.c" 1
	nop;nop;
/  0 "" 2
	.stabn	68,0,990,.LM776-.LFBB44
.LM776:
/NO_APP
	movl	12(%ebp), %eax
	movl	30(%eax), %eax
	movl	%eax, (%esp)
	call	AppDomainRegistry_GetDomain
	movl	8(%eax), %edx
	movl	12(%ebp), %eax
	movl	34(%eax), %eax
	sall	$2, %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	12(%ebp), %eax
	movl	38(%eax), %eax
	sall	$2, %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	21(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	sall	$2, %eax
	addl	%edx, %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.stabn	68,0,991,.LM777-.LFBB44
.LM777:
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L399
	.stabn	68,0,993,.LM778-.LFBB44
.LM778:
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	JIT_CompileMethod
.L399:
	.stabn	68,0,995,.LM779-.LFBB44
.LM779:
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	call	*%eax
	.stabn	68,0,996,.LM780-.LFBB44
.LM780:
/APP
/  996 "Source/CLR/JIT/JIT-x86.c" 1
	nop;nop;
/  0 "" 2
	.stabn	68,0,997,.LM781-.LFBB44
.LM781:
/NO_APP
	leave
	.cfi_restore 5
	.cfi_def_cfa 4, 4
	ret
	.cfi_endproc
.LFE43:
	.size	JIT_Trampoline_DoCall, .-JIT_Trampoline_DoCall
	.stabs	"m:(13,18)",128,0,990,-12
	.stabn	192,0,0,.LFBB44-.LFBB44
	.stabn	224,0,0,.Lscope44-.LFBB44
.Lscope44:
	.stabs	"",36,0,0,.Lscope44-.LFBB44
	.stabd	78,0,0
	.section	.rodata
	.type	__func__.4852, @object
	.size	__func__.4852, 26
__func__.4852:
	.string	"JIT_Compile_StoreIndirect"
	.type	__func__.4822, @object
	.size	__func__.4822, 25
__func__.4822:
	.string	"JIT_Compile_LoadIndirect"
	.type	__func__.4440, @object
	.size	__func__.4440, 18
__func__.4440:
	.string	"JIT_Compile_Shift"
	.type	__func__.4375, @object
	.size	__func__.4375, 30
__func__.4375:
	.string	"JIT_Compile_Load_Array_Length"
	.type	__func__.4353, @object
	.size	__func__.4353, 26
__func__.4353:
	.string	"JIT_Compile_Store_Element"
	.type	__func__.4313, @object
	.size	__func__.4313, 25
__func__.4313:
	.string	"JIT_Compile_Load_Element"
	.type	__func__.4278, @object
	.size	__func__.4278, 28
__func__.4278:
	.string	"JIT_Compile_Store_Parameter"
	.align 32
	.type	__func__.4260, @object
	.size	__func__.4260, 35
__func__.4260:
	.string	"JIT_Compile_Load_Parameter_Address"
	.type	__func__.4242, @object
	.size	__func__.4242, 27
__func__.4242:
	.string	"JIT_Compile_Load_Parameter"
	.align 32
	.type	__func__.3983, @object
	.size	__func__.3983, 34
__func__.3983:
	.string	"JIT_Compile_Load_LocalVar_Address"
	.type	__func__.3965, @object
	.size	__func__.3965, 26
__func__.3965:
	.string	"JIT_Compile_Load_LocalVar"
	.type	__func__.3944, @object
	.size	__func__.3944, 27
__func__.3944:
	.string	"JIT_Compile_Store_LocalVar"
	.type	__func__.3870, @object
	.size	__func__.3870, 18
__func__.3870:
	.string	"JIT_Emit_Epilogue"
	.type	__func__.3857, @object
	.size	__func__.3857, 18
__func__.3857:
	.string	"JIT_Emit_Prologue"
	.stabs	"x86_cc_unsigned_map:S(0,26)=ar(5,12);0;11;(0,27)=k(0,11)",38,0,185,x86_cc_unsigned_map
	.stabs	"x86_cc_signed_map:S(0,26)",38,0,201,x86_cc_signed_map
	.text
	.stabs	"",100,0,0,.Letext0
.Letext0:
	.ident	"GCC: (GNU) 4.6.2 20111026 (gdc 0.30, using dmd 2.055)"
