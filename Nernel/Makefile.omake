#define PLATFORM(WINDOWS_X32);
#define PLATFORM_ALIAS(WINDOWS_X32, WINDOWS_32);
#define PLATFORM_ALIAS(WINDOWS_X32, WIN32);

#define PLATFORM(LINUX_X32);
#define PLATFORM_ALIAS(LINUX_X32, LINUX_32);
#define PLATFORM_ALIAS(LINUX_X32, LINUX32);

#define PLATFORM(MAC_OSX_X32);
#define PLATFORM_ALIAS(MAC_OSX_X32, MAC_OSX_32);
#define PLATFORM_ALIAS(MAC_OSX_X32, MAC32);

#define TOOL(GCC, ../SDK/bin/i686-elf-g++);
#define TOOL_WIN32(GCC, ../SDK/bin/i686-elf-g++.exe);

#define TOOL(AS, ../SDK/bin/i686-elf-as);
#define TOOL_WIN32(AS, ../SDK/bin/i686-elf-as.exe);

#define TOOL(LD, ../SDK/bin/i686-elf-ld);
#define TOOL_WIN32(LD, ../SDK/bin/i686-elf-ld.exe);

#define TOOL(RM, ../SDK/bin/rm);
#define TOOL_WIN32(RM, ../SDK/bin/rm.exe);

#define TOOL(CP, ../SDK/bin/cp);
#define TOOL_WIN32(CP, ../SDK/bin/cp.exe);

#define TOOL(MKDIR, ../SDK/bin/mkdir);
#define TOOL_WIN32(MKDIR, ../SDK/bin/mkdir.exe);

#define TOOL(MKISOFS, ../SDK/bin/mkisofs);
#define TOOL_WIN32(MKISOFS, ../SDK/bin/mkisofs.exe);

#define CONST(GCC_ARGS, -I../SDK/include -I../SDK/include/c++ -I./Source -include Common.h -g -O0 -D__DYNAMIC_REENT__ -Wall -Wextra -Werror -Wno-unused-parameter -Wno-unused-but-set-parameter -Wno-unused-but-set-variable -fno-builtin -nostdlib -std=c++11 -fpack-struct=1 -nostartfiles -nodefaultlibs -fno-rtti -fno-exceptions -c);
#define CONST(LD_ARGS, -L../SDK/lib -T Nernel.ld -g);
#define CONST(LD_LIBS, -lstdc++ -lc -lm -lgcc);
#define CONST(RM_ARGS, -rf);
#define CONST(CP_ARGS, -f);
#define CONST(MKDIR_ARGS, -p);
#define CONST(MKISOFS_ARGS, -quiet -rational-rock -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table);

#define CONST(OBJECT, ./Object);
#define CONST(LOGS, ../Logs);
#define CONST(BUILD, ../Build);
#define CONST(OUT, ${BUILD}/boot/nernel.bin);
#define CONST(ISO, ../Proton.iso);
#define CONST(CACHE, ./Makefile.omake.cache);

#define SOURCE(ASM_FILES)
{
	Source/Kernel/x86/Atomics.asm
    Source/Kernel/x86/Boot.asm
	Source/Kernel/x86/TSS.asm
}

#define SOURCE(CPP_FILES)
{
	Source/Main.cpp
	Source/Kernel/Console.cpp
	Source/Kernel/Multiboot.cpp
	Source/Kernel/Process.cpp
	Source/Kernel/Processor.cpp
	Source/Kernel/Thread.cpp
	Source/Kernel/x86/SystemCalls.cpp
	Source/Kernel/x86/Drivers/SerialPortLogger.cpp
	Source/Kernel/x86/Drivers/VGAConsole.cpp
}


#define TARGET(build)
{
	MKDIR ${MKDIR_ARGS} ${LOGS}
	MKDIR ${MKDIR_ARGS} ${OBJECT}
	MKDIR ${MKDIR_ARGS} ${BUILD}/boot/grub
	MKDIR ${MKDIR_ARGS} ${BUILD}/gac

	CP ${CP_ARGS} ../SDK/grub/stage2_eltorito ${BUILD}/boot/grub
	CP ${CP_ARGS} ../SDK/gac/* ${BUILD}/gac

	file CREATE_OR_TRUNCATE(${BUILD}/boot/grub/menu.lst)
	{
		timeout 0
		default 0
		title Proton
		kernel /boot/nernel.bin
		module /boot/mernel.exe
		module /gac/corlib.dll
		module /gac/mscorlib.dll
	}

	common TOOL(AS -o ) : ASM_FILES
	{
		#prefix{${OBJECT}/$(FILENAME.NO_EXTENSION.DIR_TO_FILENAME).o} : ALL
	}

	common TOOL(GCC ${GCC_ARGS} -o ) : CPP_FILES
	{
		#prefix{${OBJECT}/$(FILENAME.NO_EXTENSION.DIR_TO_FILENAME).o} : ALL
	}

	LD ${LD_ARGS} -o ${OUT} ${${OBJECT}/&([ASM_FILES].NO_EXTENSION.DIR_TO_FILENAME).o} ${${OBJECT}/&([CPP_FILES].NO_EXTENSION.DIR_TO_FILENAME).o} ${LD_LIBS}

	MKISOFS ${MKISOFS_ARGS} -o ${ISO} ${BUILD}

	file TRY_DELETE(${LOGS}/ComPort2Out.txt);
}

#define TARGET(clean)
{
	RM ${RM_ARGS} ${LOGS} ${BUILD} ${OBJECT} ${CACHE}
}
